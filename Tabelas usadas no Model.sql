--Tabelas usadas no Model


-- AJEL.AJEL_ENTREGA definition

CREATE TABLE "AJEL"."AJEL_ENTREGA" 
   (	"CODENTREGA" NUMBER(10,0) NOT NULL ENABLE, 
	"NUMNOTA" NUMBER(10,0), 
	"POSICAO" VARCHAR2(2), 
	"CODUSUR" NUMBER(4,0), 
	"NOMEVENDEDOR" VARCHAR2(40), 
	"DTFAT" DATE, 
	"DTENTREGA" DATE, 
	"CODFORNECFRETE" NUMBER(6,0), 
	"FORNECEDOR" VARCHAR2(60), 
	"CODMOTORISTA" NUMBER(8,0), 
	"CODCLI" NUMBER(6,0), 
	"OBS" VARCHAR2(25), 
	"OBS1" VARCHAR2(50), 
	"OBS2" VARCHAR2(50), 
	"OBSENTREGA1" VARCHAR2(75), 
	"OBSENTREGA2" VARCHAR2(75), 
	"OBSENTREGA3" VARCHAR2(75), 
	"CODFUNCCONF" NUMBER(8,0), 
	"NOMECONF" VARCHAR2(40), 
	"VLATEND" NUMBER(14,2), 
	"NUMVOLUME" NUMBER(8,0), 
	"DTEXCLUSAO" DATE, 
	"DTINCLUSAO" DATE, 
	"OBSDOENTREGADOR" VARCHAR2(40), 
	"NOMEMOTORISTA" VARCHAR2(40), 
	"NOMECLIENTE" VARCHAR2(60), 
	"LOCAL" VARCHAR2(40), 
	"ESTCOB" VARCHAR2(2), 
	"CODCIDADE" NUMBER(6,0), 
	"ENDERCOB" VARCHAR2(40), 
	"NOMECIDADE" VARCHAR2(80), 
	"CODFILIAL" VARCHAR2(2), 
	 CONSTRAINT "AJEL_ENTREGA_PK" PRIMARY KEY ("CODENTREGA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" ;

CREATE UNIQUE INDEX "AJEL"."AJEL_ENTREGA_PK" ON "AJEL"."AJEL_ENTREGA" ("CODENTREGA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;




  -- AJEL.PCBONUSC definition

CREATE TABLE "AJEL"."PCBONUSC" 
   (	"NUMBONUS" NUMBER(10,0) NOT NULL ENABLE, 
	"DATABONUS" DATE NOT NULL ENABLE, 
	"QTNFS" NUMBER(6,0) NOT NULL ENABLE, 
	"VALORTOTAL" NUMBER(14,2) NOT NULL ENABLE, 
	"PESOTOTAL" NUMBER(14,2), 
	"DATARM" DATE, 
	"CODFUNCRM" NUMBER(8,0), 
	"OBS" VARCHAR2(240), 
	"DTFECHAMENTO" DATE, 
	"CODFUNCBONUS" NUMBER(8,0), 
	"CODFUNCFECHA" NUMBER(8,0), 
	"CODFILIAL" VARCHAR2(2), 
	"PLACA" VARCHAR2(30), 
	"TIPOSENHA" VARCHAR2(1), 
	"HORA" NUMBER(2,0), 
	"MINUTO" NUMBER(2,0), 
	"SENHA" NUMBER(6,0), 
	"TIPOCARGA" VARCHAR2(1), 
	"PESO" NUMBER(10,2), 
	"CODFORNECTRANSP" NUMBER(6,0), 
	"OBS1" VARCHAR2(60), 
	"OBS2" VARCHAR2(60), 
	"TIPODESCARGA" VARCHAR2(1), 
	"VLDESCARGA" NUMBER(14,2), 
	"DTDESCARGA" DATE, 
	"NUMVIASRECIBO" NUMBER(2,0), 
	"CALCDESCARGA" VARCHAR2(1), 
	"VLDESCARGAP" NUMBER(14,2), 
	"VLDESCARGAV" NUMBER(14,2), 
	"TOTPESODESCARGA" NUMBER(14,4), 
	"TOTVOLUMEDESCARGA" NUMBER(14,4), 
	"DTCANCEL" DATE, 
	"CODFUNCCANCEL" NUMBER(8,0), 
	"MOTIVOCANCEL" VARCHAR2(40), 
	"OBS3" VARCHAR2(150), 
	"OBS4" VARCHAR2(150), 
	"OBS5" VARCHAR2(150), 
	"VLINFORMADO" NUMBER(14,2), 
	"BOX" NUMBER(6,0), 
	"NOMEMOTORISTA" VARCHAR2(60), 
	"QTBLOQUEADALIBERADA" VARCHAR2(1), 
	"EMITIDO" VARCHAR2(1), 
	"MINUTOMONTAGEM" NUMBER(2,0), 
	"HORAMONTAGEM" NUMBER(2,0), 
	"PESOBALANCA1" NUMBER(14,2), 
	"PESOBALANCA2" NUMBER(14,2), 
	"VLADICIONAL" NUMBER(20,2), 
	"CODBANCORECDESCARGA" NUMBER(4,0), 
	"VLDESCONTO" NUMBER(20,2), 
	"NUMVIASBONUS" NUMBER(3,0), 
	"CODBANCORECREMONTE" NUMBER(4,0), 
	"NUMVIASRECIBOREMONTE" NUMBER(2,0), 
	"QTPALETESREMONTE" NUMBER(6,0), 
	"VLREMONTE" NUMBER(20,2), 
	"DATAFECHACOMPLETA" DATE, 
	"DTMONTAGEM" DATE, 
	"DTFECHAMENTOTOTAL" DATE, 
	"NUMTRANSENTLOTE" NUMBER(10,0), 
	"NUMTRANSVENDALOTE" NUMBER(10,0), 
	"TIPODOCMOTORISTA" VARCHAR2(3), 
	"NUMDOCMOTORISTA" VARCHAR2(15), 
	"DTCHEGADAMOTORISTA" DATE, 
	"UTILIZOUPREENT" VARCHAR2(1), 
	"ENDERECAMENTOPORPALETE" CHAR(1), 
	"DATACONF" DATE, 
	"USARF" VARCHAR2(1), 
	"ESTBONIFIC" VARCHAR2(1), 
	"LIBERAESTENTMERC" VARCHAR2(1), 
	"LIBERAESTFECHBONUS" VARCHAR2(1), 
	 CONSTRAINT "PCBONUSC_PK" PRIMARY KEY ("NUMBONUS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" ;

CREATE UNIQUE INDEX "AJEL"."PCBONUSC_PK" ON "AJEL"."PCBONUSC" ("NUMBONUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCBONUSC_IDX01" ON "AJEL"."PCBONUSC" ("DATABONUS", "NUMBONUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCBONUSC_IDX02" ON "AJEL"."PCBONUSC" ("DTFECHAMENTO", "NUMBONUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;

COMMENT ON COLUMN AJEL.PCBONUSC.NUMBONUS IS 'Descricao coluna NUMBONUS';
COMMENT ON COLUMN AJEL.PCBONUSC.NUMVIASRECIBO IS 'Indica a quantidade de vias impressa.';
COMMENT ON COLUMN AJEL.PCBONUSC.CODBANCORECDESCARGA IS 'Indica o banco do calculo de descarga.';
COMMENT ON COLUMN AJEL.PCBONUSC.VLDESCONTO IS 'Valor do desconto no recibo de descarga.';
COMMENT ON COLUMN AJEL.PCBONUSC.NUMVIASBONUS IS 'Indica a quantidade de cópias emitidas do bonus.';
COMMENT ON COLUMN AJEL.PCBONUSC.CODBANCORECREMONTE IS 'Indica o código do banco.';
COMMENT ON COLUMN AJEL.PCBONUSC.NUMVIASRECIBOREMONTE IS 'Indica o número de vias de impressão.';
COMMENT ON COLUMN AJEL.PCBONUSC.QTPALETESREMONTE IS 'Indica a quantidade de paletes.';
COMMENT ON COLUMN AJEL.PCBONUSC.VLREMONTE IS 'Indica o valor do remonte.';
COMMENT ON COLUMN AJEL.PCBONUSC.DATAFECHACOMPLETA IS 'Indica a data fechamento.';
COMMENT ON COLUMN AJEL.PCBONUSC.DTMONTAGEM IS 'Indica a data de montagem do bônus.';
COMMENT ON COLUMN AJEL.PCBONUSC.DTFECHAMENTOTOTAL IS 'Indica a Data e hora de fechamento bonus.';
COMMENT ON COLUMN AJEL.PCBONUSC.NUMTRANSENTLOTE IS 'NUMERO TRANSAÇÃO ENTRADA DE LOTE';
COMMENT ON COLUMN AJEL.PCBONUSC.NUMTRANSVENDALOTE IS 'NUMERO TRANSAÇÃO DE VENDA DE LOTE';
COMMENT ON COLUMN AJEL.PCBONUSC.TIPODOCMOTORISTA IS 'Tipo do documento do motorista';
COMMENT ON COLUMN AJEL.PCBONUSC.NUMDOCMOTORISTA IS 'Numero do documento do motorista';
COMMENT ON COLUMN AJEL.PCBONUSC.DTCHEGADAMOTORISTA IS 'Data e hora de chegada do motorista';
COMMENT ON COLUMN AJEL.PCBONUSC.UTILIZOUPREENT IS 'Verifica se o bônus vai ser utilizando a pré-entrada ou nota fiscal normal';
COMMENT ON COLUMN AJEL.PCBONUSC.ENDERECAMENTOPORPALETE IS 'Informa se o bônus será endereçado palete a palete';
COMMENT ON COLUMN AJEL.PCBONUSC.DATACONF IS 'Indica o início da conferência do recebimento';
COMMENT ON COLUMN AJEL.PCBONUSC.USARF IS 'Validar se a conferência bonus e por RF.';
COMMENT ON COLUMN AJEL.PCBONUSC.ESTBONIFIC IS 'Estoque bonificado';
COMMENT ON COLUMN AJEL.PCBONUSC.LIBERAESTENTMERC IS 'Libera estoque na entrada de mercadoria ';
COMMENT ON COLUMN AJEL.PCBONUSC.LIBERAESTFECHBONUS IS 'Libera estoque bloq. no fechamento bônus.';


-- AJEL.PCBONUSI definition

CREATE TABLE "AJEL"."PCBONUSI" 
   (	"NUMBONUS" NUMBER(10,0) NOT NULL ENABLE, 
	"CODPROD" NUMBER(6,0) NOT NULL ENABLE, 
	"QTNF" NUMBER(20,6) DEFAULT 0, 
	"QTENTRADA" NUMBER(20,6) DEFAULT 0, 
	"ENDERECADO" VARCHAR2(1), 
	"DTVALIDADE" DATE DEFAULT TO_DATE('30/12/1899','DD/MM/YYYY'), 
	"CODFORNEC" NUMBER(9,0), 
	"CODEPTO" NUMBER(6,0), 
	"QTSAIDA" NUMBER(20,6) DEFAULT 0, 
	"QTESTGER" NUMBER(20,6) DEFAULT 0, 
	"DTULTSAIDA" DATE, 
	"QTAVARIA" NUMBER(20,6) DEFAULT 0, 
	"NUMBONO" NUMBER(8,0), 
	"PERCINTEIRO" NUMBER(6,3), 
	"PERCQUEBRADO" NUMBER(6,3), 
	"PERCIMPUREZA" NUMBER(6,3), 
	"PERCVERMELHO" NUMBER(6,3), 
	"PERCUMIDADE" NUMBER(6,3), 
	"CODMOTIVO" NUMBER(4,0), 
	"NUMLOTE" VARCHAR2(15) DEFAULT '1' NOT NULL ENABLE, 
	"QTFALTA" NUMBER(20,6) DEFAULT 0, 
	"QTEXCESSO" NUMBER(20,6) DEFAULT 0, 
	"DIVERGENCIA" VARCHAR2(2), 
	"OBSDIVERGENCIA" VARCHAR2(300), 
	"TIPODIVERGENCIA" NUMBER(4,0), 
	"CODFUNCSOLUCAODIVERGENCIA" NUMBER(8,0), 
	"DTSOLUCAODIVERGENCIA" DATE, 
	"CONFERIDA" VARCHAR2(1), 
	"QTAVARIANF" NUMBER(16,3), 
	"TOLERANCIASHELFLIFE" NUMBER(4,0), 
	"QTBLOQUEADALIBERADA" VARCHAR2(1) DEFAULT 'N', 
	"DATAFABRICACAO" DATE, 
	"NUMSEQ" NUMBER(20,0) DEFAULT 0, 
	"QTDEPECAPESAGEM" NUMBER(8,0), 
	"VALORTARAPORPECA" NUMBER(18,6), 
	"NUMLOTENF" VARCHAR2(15), 
	"QTENTRADACX" NUMBER(20,6) DEFAULT '0', 
	"QTAVARIACX" NUMBER(20,6) DEFAULT '0', 
	"QTENTCX" NUMBER(20,6), 
	"QTENTUN" NUMBER(20,6), 
	"QTAVARIAUN" NUMBER(20,6), 
	"EANCONF" NUMBER(20,0), 
	"DUNCONF" NUMBER(20,0), 
	"LASTROCONF" NUMBER(10,4), 
	"CAMADACONF" NUMBER(10,4), 
	"QTTOTPALCONF" NUMBER(8,2), 
	"DADOSLOGISTICOS" VARCHAR2(1), 
	"NUMVIASETIQUETA" NUMBER(2,0), 
	"CODAGREGACAO" VARCHAR2(20), 
	"NUMLOTEFAB" VARCHAR2(20), 
	"NUMLOTEFORNEC" VARCHAR2(20), 
	"CODDEPOSITO" NUMBER(10,0), 
	"QTAVARIADIGITA" NUMBER(20,6) DEFAULT '0', 
	"ITEMDESDOBRADO" VARCHAR2(1) DEFAULT 'N', 
	"TIPOEMBALAGEMPEDIDO" VARCHAR2(1), 
	"TRANSACAONOTADESDOBRALOTE" NUMBER(10,0) DEFAULT NULL, 
	"ID_PCBONUSINF" VARCHAR2(50) DEFAULT NULL, 
	"QTNFORIG" NUMBER(20,6), 
	 CONSTRAINT "PCBONUSI_UK1" UNIQUE ("NUMBONUS", "CODPROD", "NUMLOTE", "NUMSEQ", "DTVALIDADE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" ;

CREATE OR REPLACE TRIGGER "AJEL"."TRG_PCBONUSI_LOG" 
  BEFORE UPDATE OR INSERT OR DELETE ON PCBONUSI
  REFERENCING NEW AS NEW OLD AS OLD
  FOR EACH ROW
DECLARE
  vMACHINE  VARCHAR2(64);
  vPROGRAM  VARCHAR2(48);
  vTERMINAL VARCHAR2(30);
  vOSUSER   VARCHAR2(30);
  vACAO     VARCHAR2(30);

BEGIN
  BEGIN
    SELECT SUBSTR(terminal, 1, 64),
           SUBSTR(osuser, 1, 30),
           SUBSTR(program, 1, 48),
           SUBSTR(machine, 1, 64)
      INTO vTERMINAL, vOSUSER, vPROGRAM, vMACHINE
      FROM usuarios_logados

     WHERE audsid = USERENV('SESSIONID')
       AND ROWNUM = 1;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      vTERMINAL := SYS_CONTEXT('USERENV', 'TERMINAL');
      vOSUSER   := SYS_CONTEXT('USERENV', 'OS_USER');
      vPROGRAM  := sys_context('USERENV', 'MODULE');
      vMACHINE  := sys_context('USERENV', 'SERVER_HOST');
  END;

  IF INSERTING THEN
    vACAO := 'INSERT';
  END IF;

  IF UPDATING THEN
    vACAO := 'UPDATE';
  END IF;

  IF DELETING THEN
    vACAO := 'DELETE';
  END IF;

  INSERT INTO PCBONUSILOG
    (DATA,
     ACAO,
     NUMBONUS,
     NUMBONUS_ANTES,
     CODPROD,
     CODPROD_ANTES,
     QTNF,
     QTENTRADA,
     QTENTRADA_ANTES,
     QTAVARIA,
     QTAVARIA_ANTES,
     QTFALTA,
     QTFALTA_ANTES,
     QTEXCESSO,
     QTEXCESSO_ANTES,
     ENDERECADO,
     ENDERECADO_ANTES,
     DTVALIDADE,
     DTVALIDADE_ANTES,
     NUMLOTE,
     NUMLOTE_ANTES,
     VMACHINE,
     VPROGRAM,
     VTERMINAL,
     VOSUSER)
  values
    (sysdate,
     vACAO,
     :NEW.NUMBONUS,
     :OLD.NUMBONUS,
     :NEW.CODPROD,
     :OLD.CODPROD,
     :NEW.QTNF,
     :NEW.QTENTRADA,
     :OLD.QTENTRADA,
     :NEW.QTAVARIA,
     :OLD.QTAVARIA,
     :NEW.QTFALTA,
     :OLD.QTFALTA,
     :NEW.QTEXCESSO,
     :OLD.QTEXCESSO,
     :NEW.ENDERECADO,
     :OLD.ENDERECADO,
     :NEW.DTVALIDADE,
     :OLD.DTVALIDADE,
     :NEW.NUMLOTE,
     :OLD.NUMLOTE,
     vMACHINE,
     vPROGRAM,
     vTERMINAL,
     vOSUSER);

END;
/
ALTER TRIGGER "AJEL"."TRG_PCBONUSI_LOG" ENABLE;

CREATE UNIQUE INDEX "AJEL"."PCBONUSI_UK1" ON "AJEL"."PCBONUSI" ("NUMBONUS", "CODPROD", "NUMLOTE", "NUMSEQ", "DTVALIDADE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCBONUSI_IDX1" ON "AJEL"."PCBONUSI" ("DTVALIDADE", "NUMBONUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;

COMMENT ON COLUMN AJEL.PCBONUSI.NUMBONUS IS 'Descricao coluna NUMBONUS';
COMMENT ON COLUMN AJEL.PCBONUSI.CODFORNEC IS 'Descricao coluna CODFORNEC';
COMMENT ON COLUMN AJEL.PCBONUSI.CONFERIDA IS 'Utilizado na rotina 1799. ';
COMMENT ON COLUMN AJEL.PCBONUSI.QTBLOQUEADALIBERADA IS 'Quantidade bloqueada liberada.';
COMMENT ON COLUMN AJEL.PCBONUSI.DATAFABRICACAO IS 'Indica a data de fabricação do item.';
COMMENT ON COLUMN AJEL.PCBONUSI.NUMSEQ IS 'NÚmero de Sequencia';
COMMENT ON COLUMN AJEL.PCBONUSI.QTDEPECAPESAGEM IS 'Qtde. peças na pesagem';
COMMENT ON COLUMN AJEL.PCBONUSI.VALORTARAPORPECA IS 'Valor da tara por peça';
COMMENT ON COLUMN AJEL.PCBONUSI.NUMLOTENF IS 'Lote origninal da nota de entrada';
COMMENT ON COLUMN AJEL.PCBONUSI.QTENTRADACX IS 'Quantidade de entrada de caixas';
COMMENT ON COLUMN AJEL.PCBONUSI.QTAVARIACX IS 'Quantidade de avaria em caixa no bônus';
COMMENT ON COLUMN AJEL.PCBONUSI.QTENTCX IS 'Quantidade em caixa no bônus';
COMMENT ON COLUMN AJEL.PCBONUSI.QTENTUN IS 'Quantidade em unidade no bônus';
COMMENT ON COLUMN AJEL.PCBONUSI.QTAVARIAUN IS 'Quantidade de avaria em unidade no bônus';
COMMENT ON COLUMN AJEL.PCBONUSI.EANCONF IS 'Código de Barra EAN';
COMMENT ON COLUMN AJEL.PCBONUSI.DUNCONF IS 'Código de barras DUN';
COMMENT ON COLUMN AJEL.PCBONUSI.LASTROCONF IS 'Lastro';
COMMENT ON COLUMN AJEL.PCBONUSI.CAMADACONF IS 'Camada';
COMMENT ON COLUMN AJEL.PCBONUSI.QTTOTPALCONF IS 'Total de paletes';
COMMENT ON COLUMN AJEL.PCBONUSI.DADOSLOGISTICOS IS 'Informa se está ou não correto as informações de acordo com os dados logísticos do produto';
COMMENT ON COLUMN AJEL.PCBONUSI.NUMVIASETIQUETA IS 'Número de vias da emissão de etiquetas';
COMMENT ON COLUMN AJEL.PCBONUSI.CODAGREGACAO IS 'Chave para rastreio do bonus';
COMMENT ON COLUMN AJEL.PCBONUSI.NUMLOTEFAB IS 'Lote do fabricante';
COMMENT ON COLUMN AJEL.PCBONUSI.NUMLOTEFORNEC IS 'Lote do fornecedor';
COMMENT ON COLUMN AJEL.PCBONUSI.CODDEPOSITO IS 'Código do depósito onde o estoque esta armazenado na filial';
COMMENT ON COLUMN AJEL.PCBONUSI.QTAVARIADIGITA IS 'Quantidade de Avaria Digitado';
COMMENT ON COLUMN AJEL.PCBONUSI.ITEMDESDOBRADO IS 'Indica se o item foi desdobrado nova linha';
COMMENT ON COLUMN AJEL.PCBONUSI.TIPOEMBALAGEMPEDIDO IS 'Tipo de embalagem do pedido(M ou V)';
COMMENT ON COLUMN AJEL.PCBONUSI.TRANSACAONOTADESDOBRALOTE IS 'NÚMERO TRANSAÇÃO DESDOBRAMENTO LOTE';
COMMENT ON COLUMN AJEL.PCBONUSI.ID_PCBONUSINF IS 'ROWID da PCBONUSI original da NF';
COMMENT ON COLUMN AJEL.PCBONUSI.QTNFORIG IS 'Quantidade original da nota de entrada.';


-- AJEL.PCCLIENT definition

CREATE TABLE "AJEL"."PCCLIENT" 
   (	"CODCLI" NUMBER(9,0) DEFAULT NULL NOT NULL ENABLE, 
	"CLIENTE" VARCHAR2(60), 
	"ENDERCOB" VARCHAR2(40), 
	"BAIRROCOB" VARCHAR2(40), 
	"TELCOB" VARCHAR2(13), 
	"MUNICCOB" VARCHAR2(15), 
	"ESTCOB" VARCHAR2(2), 
	"CEPCOB" VARCHAR2(9), 
	"ENDERENT" VARCHAR2(40), 
	"BAIRROENT" VARCHAR2(40), 
	"TELENT" VARCHAR2(13), 
	"MUNICENT" VARCHAR2(15), 
	"ESTENT" VARCHAR2(2), 
	"CEPENT" VARCHAR2(9), 
	"CGCENT" VARCHAR2(18), 
	"IEENT" VARCHAR2(15), 
	"DTULTCOMP" DATE, 
	"CODATV1" NUMBER(6,0), 
	"BLOQUEIO" VARCHAR2(1), 
	"CODUSUR1" NUMBER(4,0) DEFAULT NULL, 
	"CODUSUR2" NUMBER(4,0), 
	"FAXCLI" VARCHAR2(15), 
	"LIMCRED" NUMBER(12,2), 
	"OBS" VARCHAR2(40), 
	"DTPRIMCOMPRA" DATE, 
	"CODCLIPRINC" NUMBER(9,0) DEFAULT NULL, 
	"CODCOB" VARCHAR2(4), 
	"DTREGLIM" DATE DEFAULT NULL, 
	"DTVENCLIMCRED" DATE, 
	"DTBLOQ" DATE, 
	"DTCADASTRO" DATE DEFAULT NULL, 
	"CODPRACA" NUMBER(6,0) DEFAULT NULL NOT NULL ENABLE, 
	"FANTASIA" VARCHAR2(40), 
	"EMITEDUP" VARCHAR2(1), 
	"OBS2" VARCHAR2(40), 
	"VIP" VARCHAR2(1), 
	"PONTOREFER" VARCHAR2(40), 
	"HORARIORECEB" VARCHAR2(5), 
	"PREDIOPROPRIO" VARCHAR2(1), 
	"INICIOATIV" DATE, 
	"DTULTALTER" DATE, 
	"TIPOULTALTER" VARCHAR2(1), 
	"OBSCREDITO" VARCHAR2(30), 
	"TIPOFJ" VARCHAR2(1), 
	"ISENTAJUROS" VARCHAR2(1), 
	"TELENT1" VARCHAR2(13), 
	"EMAIL" VARCHAR2(100), 
	"SENHA_WEB" VARCHAR2(18), 
	"DTEXCLUSAO" DATE, 
	"FREQVISITA" NUMBER(1,0), 
	"CODPLPAG" NUMBER(4,0), 
	"PRAZOADICIONAL" NUMBER(4,0), 
	"OBS3" VARCHAR2(60), 
	"OBS4" VARCHAR2(60), 
	"PERDESC" NUMBER(6,2), 
	"NUMSEQ" NUMBER(10,0), 
	"PLPAGNEG" VARCHAR2(1) DEFAULT 'N', 
	"PAISENT" VARCHAR2(18), 
	"CAIXAPOSTAL" NUMBER(5,0), 
	"CEPCXPOSTAL" NUMBER(8,0), 
	"REGJUNTACOMERCIAL" VARCHAR2(15), 
	"MICROEMPRESA" VARCHAR2(2), 
	"DDDINTERNACIONAL" NUMBER(3,0), 
	"CLASSEVENDA" VARCHAR2(1), 
	"CLASSEMC" VARCHAR2(1), 
	"ENDERCOM" VARCHAR2(40), 
	"BAIRROCOM" VARCHAR2(40), 
	"MUNICCOM" VARCHAR2(15), 
	"ESTCOM" VARCHAR2(2), 
	"CEPCOM" VARCHAR2(9), 
	"TELCOM" VARCHAR2(13), 
	"FAXCOM" VARCHAR2(15), 
	"SULFRAMA" VARCHAR2(15), 
	"CODBARRA" NUMBER(14,0), 
	"ICMSANTECIP" VARCHAR2(1) DEFAULT 'N', 
	"CACEX" VARCHAR2(15), 
	"OBSENTREGA1" VARCHAR2(75), 
	"OBSENTREGA2" VARCHAR2(75), 
	"OBSENTREGA3" VARCHAR2(75), 
	"PERDESC2" NUMBER(6,2) DEFAULT 0, 
	"PERDESC3" NUMBER(6,2) DEFAULT 0, 
	"PERDESC4" NUMBER(6,2) DEFAULT 0, 
	"PERDESC5" NUMBER(6,2) DEFAULT 0, 
	"PERDESCFIN" NUMBER(4,2) DEFAULT 0, 
	"ISENTOICMS" VARCHAR2(1) DEFAULT 'N', 
	"PERDESCISENTOICMS" NUMBER(4,2) DEFAULT 0, 
	"CODNILSEN" VARCHAR2(4), 
	"IMENT" VARCHAR2(15), 
	"CODFILIALNF" VARCHAR2(2), 
	"ISENTOTXBOLETO" VARCHAR2(1) DEFAULT 'N', 
	"NUMTRANSVENDADESC" NUMBER(12,0), 
	"CONDVENDA1" VARCHAR2(1) DEFAULT 'S', 
	"CONDVENDA2" VARCHAR2(1) DEFAULT 'N', 
	"CONDVENDA3" VARCHAR2(1) DEFAULT 'N', 
	"CONDVENDA4" VARCHAR2(1) DEFAULT 'N', 
	"CONDVENDA5" VARCHAR2(1) DEFAULT 'N', 
	"CONDVENDA6" VARCHAR2(1) DEFAULT 'N', 
	"DTCAPITALSOCIAL" DATE, 
	"CAPITALSOCIAL" NUMBER(14,2), 
	"NUMBANCO1" NUMBER(3,0), 
	"NUMAGENCIA1" NUMBER(6,0), 
	"NUMCCORRENTE1" VARCHAR2(15), 
	"NUMBANCO2" NUMBER(3,0), 
	"NUMAGENCIA2" NUMBER(6,0), 
	"NUMCCORRENTE2" VARCHAR2(15), 
	"DTULTVISITA" DATE, 
	"CODFUNCCADASTRO" NUMBER(8,0), 
	"EMPFIXA" VARCHAR2(1) DEFAULT 'N', 
	"LIMITEAUTORI" VARCHAR2(40), 
	"PERCOMCLI" NUMBER(5,2), 
	"NUMSEQROTARCA" NUMBER(4,0), 
	"DIASEMANA" VARCHAR2(10), 
	"PERBASEVEND" NUMBER(5,2), 
	"RG" VARCHAR2(20), 
	"ORGAORG" VARCHAR2(10), 
	"DESCPRODUTO" VARCHAR2(1) DEFAULT 'N', 
	"CODFUNCCAD" NUMBER(8,0), 
	"CODFUNCULTALTER" NUMBER(8,0), 
	"VLESTOQUE" NUMBER(14,2), 
	"VLMEDIACOMPRAMESFORNEC" NUMBER(14,2), 
	"OBS5" VARCHAR2(60), 
	"DTULTCONSULTASERASA" DATE, 
	"DTULTCONSULTASCI" DATE, 
	"CONSUMIDORFINAL" VARCHAR2(1), 
	"CODCANAL" NUMBER(6,0), 
	"CLASSECOMERCIAL" VARCHAR2(1), 
	"EMITENTECH" VARCHAR2(40), 
	"EMITENTECH2" VARCHAR2(40), 
	"VALORALUGUEL" NUMBER(14,2), 
	"EMPRESA" VARCHAR2(40), 
	"ENDEREMPR" VARCHAR2(40), 
	"MUNICEMPR" VARCHAR2(15), 
	"ESTEMPR" VARCHAR2(2), 
	"TELEMPR" VARCHAR2(13), 
	"CARGO" VARCHAR2(30), 
	"DTADMISSAO" DATE, 
	"RENDAMENSAL" NUMBER(14,2), 
	"NOMECONJUGE" VARCHAR2(40), 
	"CPFCONJUGE" VARCHAR2(15), 
	"EMPRESACONJUGE" VARCHAR2(40), 
	"ENDERCONJUGE" VARCHAR2(40), 
	"MUNICCONJUGE" VARCHAR2(15), 
	"ESTCONJUGE" VARCHAR2(2), 
	"TELCONJUGE" VARCHAR2(13), 
	"CARGOCONJUGE" VARCHAR2(30), 
	"DTADMISSAOCONJUGE" DATE, 
	"RENDAMENSALCONJUGE" NUMBER(14,2), 
	"VLOUTRASRENDAS" NUMBER(14,2), 
	"CLIENTEELETRO" VARCHAR2(1) DEFAULT 'N', 
	"GERENCIAMENTO" VARCHAR2(1), 
	"CALCULAST" VARCHAR2(1) DEFAULT 'S', 
	"DTULTCONTATOCOB" DATE, 
	"CODFUNCULTCONTATOCOB" NUMBER(8,0), 
	"DTPROXCONTATOCOB" DATE, 
	"ACEITACHTERCEIROS" VARCHAR2(1), 
	"CLIENTEFONTEST" VARCHAR2(1) DEFAULT 'N', 
	"RATINGSCI" VARCHAR2(2), 
	"OBSTESOURARIA" VARCHAR2(4000), 
	"OBSCALLCENTER" VARCHAR2(4000), 
	"OBSRECEPCAO" VARCHAR2(4000), 
	"LISTAPLPAG" VARCHAR2(20), 
	"TELCELENT" VARCHAR2(13), 
	"NUMCONCESSAO" VARCHAR2(12), 
	"ULTCODPLPAG" NUMBER(4,0), 
	"NUMREGIAOCLI" NUMBER(4,0), 
	"EANENTREGA" NUMBER(14,0), 
	"EANCOBRANCA" NUMBER(14,0), 
	"QTCHECKOUT" NUMBER(8,0), 
	"FREQDIAVISITA" NUMBER(4,0), 
	"SITE" VARCHAR2(80), 
	"CONDVENDA7" VARCHAR2(1), 
	"CONDVENDA8" VARCHAR2(1), 
	"CONDVENDA9" VARCHAR2(1), 
	"CONDVENDA10" VARCHAR2(1), 
	"CONDVENDA11" VARCHAR2(1), 
	"CONDVENDA12" VARCHAR2(1) DEFAULT 'N', 
	"CONDVENDA13" VARCHAR2(1), 
	"CONDVENDA14" VARCHAR2(1), 
	"PERCBONIFIC" NUMBER(5,2), 
	"CODSUFRAMA" VARCHAR2(30), 
	"CODPLPAG2" NUMBER(4,0), 
	"TIPOCUSTOTRANSF" VARCHAR2(1), 
	"PERACRESTRANSF" NUMBER(4,2), 
	"ANALISECRED" VARCHAR2(1) DEFAULT 'N', 
	"PLPAGNEG2" VARCHAR2(1) DEFAULT 'N', 
	"CODFUNCULTALTERCLIESP" NUMBER(8,0), 
	"DTULTALTERCLIESP" DATE, 
	"DESTACAFRETE" VARCHAR2(1) DEFAULT 'S', 
	"PERCBASEVENDQT" NUMBER(5,2), 
	"CODFILIALESTOQUE" VARCHAR2(1), 
	"TIPOCONVERSAOTV4" VARCHAR2(2) DEFAULT 'VL', 
	"APLICADESCNF" VARCHAR2(1) DEFAULT 'S', 
	"CODBARRACOB" NUMBER(14,0), 
	"CODBARRAENT" NUMBER(14,0), 
	"USAVLMINVENDABK" VARCHAR2(1) DEFAULT 'S', 
	"UTILIZAIESIMPLIFICADA" VARCHAR2(1) DEFAULT 'N', 
	"PRAZOADICIONAL2" NUMBER(4,0), 
	"PRAZOADICIONAL3" NUMBER(4,0), 
	"PRAZOADICIONAL4" NUMBER(4,0), 
	"PRAZOADICIONAL5" NUMBER(4,0), 
	"PRAZOADICIONAL6" NUMBER(4,0), 
	"PRAZOADICIONAL7" NUMBER(4,0), 
	"DTABERTCC1" DATE, 
	"DTABERTCC2" DATE, 
	"CONDVENDA20" VARCHAR2(1) DEFAULT 'N', 
	"CLIENTEMONITORADO" VARCHAR2(1) DEFAULT 'N', 
	"NUMALVARA" VARCHAR2(30), 
	"DTVENCALVARA" DATE, 
	"TIPOEMPRESA" VARCHAR2(4), 
	"CGCENTREGA" VARCHAR2(18), 
	"CODUSUR3" NUMBER(4,0), 
	"PARAIBASIM" VARCHAR2(1) DEFAULT 'N', 
	"DTENQUADRAMENTOMICROEMPRESA" DATE, 
	"ALIQICMS1" NUMBER(8,4), 
	"DTVENCSUFRAMA" DATE, 
	"CONTRIBUINTE" VARCHAR2(1) DEFAULT NULL, 
	"ORIGEMPRECO" VARCHAR2(1) DEFAULT 'F', 
	"ACEITAVENDAFRACAO" VARCHAR2(1) DEFAULT 'S', 
	"CODPLPAGPADRAO" NUMBER(4,0), 
	"EMITEDAE" VARCHAR2(1) DEFAULT 'N', 
	"CONDVENDA98" VARCHAR2(1), 
	"CONDVENDA99" VARCHAR2(1), 
	"ISENTOIPI" VARCHAR2(1) DEFAULT 'N', 
	"OBSERVACAO" VARCHAR2(2000), 
	"DTNASC" DATE, 
	"FILIACAOPAI" VARCHAR2(40), 
	"FILIACAOMAE" VARCHAR2(40), 
	"SEXO" VARCHAR2(1), 
	"DTNASCCONJ" DATE, 
	"FILIACAOPAICONJ" VARCHAR2(40), 
	"FILIACAOMAECONJ" VARCHAR2(40), 
	"RGCONJ" VARCHAR2(20), 
	"ORGAORGCONJ" VARCHAR2(4), 
	"CODMUNICIPIO" NUMBER(10,0), 
	"INCLUINOARQSCI" VARCHAR2(1) DEFAULT 'S', 
	"OBSGERENCIAL1" VARCHAR2(80), 
	"OBSGERENCIAL2" VARCHAR2(80), 
	"OBSGERENCIAL3" VARCHAR2(80), 
	"TIPOCLIMED" VARCHAR2(2), 
	"HORAPROXCONTATO" NUMBER(2,0), 
	"MINUTOPROXCONTATO" NUMBER(2,0), 
	"EXPORTARDADOSIMS" VARCHAR2(1) DEFAULT 'N', 
	"COMPLEMENTOENT" VARCHAR2(80), 
	"RESSARCIMENTOST" VARCHAR2(1) DEFAULT 'S', 
	"REPASSE" VARCHAR2(1) DEFAULT 'N', 
	"DTULTCONSULTASINTEGRA" DATE, 
	"MEDDTLIBTRIBUT" DATE, 
	"MEDCODFUNCLIBTRIBUT" NUMBER(8,0), 
	"RATINGSCI1" VARCHAR2(2), 
	"RATINGSCI2" VARCHAR2(2), 
	"PRAZOVALIDADE" NUMBER(4,0), 
	"DTULTCOMPNESTLE" DATE, 
	"DIRETORIOCLIENTE" VARCHAR2(100), 
	"CODCLIPALM" NUMBER(9,0), 
	"NUMALVARAFUNC" VARCHAR2(30), 
	"DTVENCALVARAFUNC" DATE, 
	"DTVENCPRAZOADICIONAL" DATE, 
	"CLIENTEDAN" VARCHAR2(1), 
	"IEST" VARCHAR2(15), 
	"NUMTARE" VARCHAR2(20), 
	"CODSTATUSCOB" NUMBER(4,0), 
	"USACROSS" VARCHAR2(1) DEFAULT 'N', 
	"VALIDAMAXVENDAPF" VARCHAR2(1), 
	"DIGAGENCIA2" VARCHAR2(1), 
	"CODCONDICAOVENDA" NUMBER(6,0), 
	"ROTEIROMASTERFOODS" VARCHAR2(20), 
	"CODCIDADE" NUMBER(6,0), 
	"ORGAOPUB" VARCHAR2(1), 
	"NUMSEQATU" NUMBER, 
	"UFRG" VARCHAR2(2), 
	"PRAZOMAXVALIDADE" NUMBER(6,0), 
	"VALIDARMULTIPLOVENDA" VARCHAR2(1) DEFAULT NULL, 
	"CLIENTPROTESTO" VARCHAR2(1) DEFAULT 'N', 
	"RFC" VARCHAR2(20), 
	"IVA" NUMBER(8,4), 
	"IEPS" NUMBER(8,4), 
	"EDOENT" VARCHAR2(3), 
	"EDOCOB" VARCHAR2(3), 
	"EDOCOM" VARCHAR2(3), 
	"SIGLADEC" VARCHAR2(5), 
	"CODFUNCLANCPOTENCIALLIMCRED" NUMBER(8,0), 
	"VLPOTENCIALLIMCRED" NUMBER(14,2), 
	"DTLANCPOTENCIALLIMCRED" DATE, 
	"VALIDARCAMPANHABRINDE" VARCHAR2(1) DEFAULT 'S', 
	"MOTIVOEXCLUSAO" VARCHAR2(40), 
	"USABKCNPJCODCLIPRINC" VARCHAR2(1) DEFAULT 'N', 
	"DTDESBLOQUEIO" DATE, 
	"ACEITATROCANEGATIVA" VARCHAR2(1) DEFAULT 'N', 
	"CLIENTE2" VARCHAR2(100), 
	"MUNICENT2" VARCHAR2(100), 
	"MUNICCOB2" VARCHAR2(100), 
	"MUNICCOM2" VARCHAR2(100), 
	"QTESTRELA" NUMBER(2,0), 
	"GRUPORAMOATIVI" VARCHAR2(2), 
	"DTCLASSIFICAESTRELA" DATE, 
	"DTCLASSIFICAGRUPO" DATE, 
	"INSCESTADUAL" VARCHAR2(20), 
	"TIPODESCISENCAO" VARCHAR2(1), 
	"SUPRIMIDO" VARCHAR2(1) DEFAULT 'N', 
	"CGEENTAUX" VARCHAR2(18), 
	"ENVIADADOSSERASA" VARCHAR2(1) DEFAULT 'S', 
	"BLOQUEIOSEFAZ" VARCHAR2(1) DEFAULT 'N', 
	"DTVALIDASEFAZ" DATE, 
	"USAIVAFONTEDIFERENCIADO" VARCHAR2(1) DEFAULT 'N', 
	"IVAFONTE" NUMBER(8,4), 
	"CODPRACACOB" NUMBER(6,0), 
	"CODFORNECFRETE" NUMBER(6,0), 
	"GEOTIPOPRECOST" VARCHAR2(2) DEFAULT 'PV', 
	"GEOTIPOEMBALAGEM" VARCHAR2(2) DEFAULT 'CX', 
	"ORGAOPUBFEDERAL" VARCHAR2(1), 
	"CODHIST" NUMBER(6,0), 
	"CODCOBTV1" VARCHAR2(4), 
	"CODCOBTV3" VARCHAR2(4), 
	"TIPODOCUMENTO" VARCHAR2(1), 
	"DTIMPORTINTEGRACAO" DATE, 
	"ISENTODIFALIQUOTAS" VARCHAR2(1), 
	"FRETEDESPACHO" VARCHAR2(1), 
	"OBSSUFRAMA" VARCHAR2(80), 
	"CODCNAE" VARCHAR2(60), 
	"VLFRETE" NUMBER(16,3), 
	"VLMAXCOBFRETE" NUMBER(12,2), 
	"CODREDE" NUMBER(4,0), 
	"TIPOCUSTOTRANSF_FILIAIS" VARCHAR2(1), 
	"ATUALIZASALDOCCDESCFIN" VARCHAR2(1), 
	"OBS_ADIC" CLOB, 
	"LIMCREDCPF" NUMBER(14,2), 
	"BLOQUEIODEFINITIVO" VARCHAR2(1) DEFAULT 'N', 
	"NUMREGISTROIMUNE" VARCHAR2(20), 
	"INVESTIMENTO" VARCHAR2(1), 
	"FOCO" VARCHAR2(1), 
	"FOTOGRAFIASUCESSO" VARCHAR2(1), 
	"PDVINVESTIMENTO" VARCHAR2(1), 
	"CONTAGEMESTOQUE" VARCHAR2(1), 
	"PARTICIPAFUNCEP" VARCHAR2(1), 
	"CODPROFISSIONAL" NUMBER(6,0), 
	"ATENDEDOMINGO" VARCHAR2(1), 
	"ATENDESEGUNDA" VARCHAR2(1), 
	"ATENDETERCA" VARCHAR2(1), 
	"ATENDEQUARTA" VARCHAR2(1), 
	"ATENDEQUINTA" VARCHAR2(1), 
	"ATENDESEXTA" VARCHAR2(1), 
	"ATENDESABADO" VARCHAR2(1), 
	"EMITEPVENDANFSEMDESC" VARCHAR2(1), 
	"CODCLIWEB" NUMBER(15,0), 
	"DTULTALTERSRVPRC" DATE, 
	"USACRECLIFAT" VARCHAR2(1), 
	"PERCOMFILIALBROKER" NUMBER(8,4), 
	"PERFRETEBROKER" NUMBER(8,4), 
	"BLOQVENDAPF" VARCHAR2(1), 
	"AREALOJAM2" NUMBER(8,0), 
	"PERMITEALTERCOBRANCACR" VARCHAR2(1) DEFAULT 'S', 
	"DTVALIDADECONV" DATE, 
	"BLOQUEIODATACHEQ" VARCHAR2(1) DEFAULT 'N', 
	"COMPLEMENTOCOM" VARCHAR2(80), 
	"NUMEROCOM" VARCHAR2(6), 
	"COMPLEMENTOCOB" VARCHAR2(80), 
	"NUMEROENT" VARCHAR2(6), 
	"NUMEROCOB" VARCHAR2(6), 
	"STATUSCONSULTASINTEGRA" VARCHAR2(1), 
	"DATACONSULTASINTEGRA" DATE, 
	"PERMINVALIDADE" NUMBER(7,4), 
	"DATACOLETA" DATE, 
	"LONGITUDE" VARCHAR2(20), 
	"LATITUDE" VARCHAR2(20), 
	"SACADOELETRONICO" VARCHAR2(1) DEFAULT 'N', 
	"PERCTOLVALIDADEPRODWMS" NUMBER(10,4), 
	"ANVISA" VARCHAR2(1), 
	"SUS" VARCHAR2(1), 
	"TIPOCUSTOTRANSF_FILIALVIRTUAL" VARCHAR2(1), 
	"GERARCREDITODEVCLI" VARCHAR2(1) DEFAULT 'S', 
	"RETENCAOISS" VARCHAR2(1) DEFAULT 'N', 
	"HORACADASTRO" DATE, 
	"CODCLIINT" NUMBER(10,0), 
	"PRAZOMEDIOPLPAG" NUMBER(4,0), 
	"UTILIZAPRAZOMEDIOPLPAG" VARCHAR2(1), 
	"NUMALVARASUS" VARCHAR2(30), 
	"DTVENCALVARASUS" DATE, 
	"OBSENTREGA4" VARCHAR2(75), 
	"IMPORTADOCRM" VARCHAR2(1), 
	"SIMPLESNACIONAL" VARCHAR2(1) DEFAULT 'N', 
	"BLOQUEIOSEFAZPED" VARCHAR2(1) DEFAULT 'N', 
	"ZONA" NUMBER(4,0), 
	"CODBAIRROENT" NUMBER(6,0), 
	"CODBAIRROCOM" NUMBER(6,0), 
	"CODBAIRROCOB" NUMBER(6,0), 
	"NUMCARTAOFIDELIDADE" VARCHAR2(20), 
	"CNPJCISP" VARCHAR2(8), 
	"PISCOFINSCUMULATIVO" VARCHAR2(1), 
	"ENVIONFEEMAILCOM" VARCHAR2(1), 
	"VLMINIMOST" NUMBER(18,6), 
	"TIPOTRATAMENTODESCFIN" VARCHAR2(2), 
	"QTDDIASAPLICDESCFIN" NUMBER(4,0), 
	"ACEITASIMILAR" VARCHAR2(1) DEFAULT 'S', 
	"DTVENCALVARAANVISA" DATE, 
	"DTVENCCRF" DATE, 
	"NUMALVARAANVISA" VARCHAR2(20), 
	"NUMCRF" VARCHAR2(20), 
	"GERATITULOST" VARCHAR2(1) DEFAULT 'N', 
	"PRAZOVENCST" NUMBER(3,0), 
	"AGREGARVALORSTDESCFIN" VARCHAR2(1) DEFAULT 'N', 
	"ENVIOPDFNFE" VARCHAR2(1), 
	"CODPAIS" NUMBER(6,0), 
	"USADESCFINSEPARADODESCCOM" VARCHAR2(1), 
	"UTILIZAPEDCLINFE" VARCHAR2(1), 
	"CODCONTAB" VARCHAR2(12), 
	"DIRETORIOCONTRATO" VARCHAR2(100), 
	"DTINIVISTORIA" DATE, 
	"PERIODVISTORIA" NUMBER(9,0), 
	"DTPROXVISTORIA" DATE, 
	"CODPLPAGETICO" NUMBER(4,0), 
	"CODPLPAGGENERICO" NUMBER(4,0), 
	"UTILIZAPLPAGMEDICAMENTO" VARCHAR2(1), 
	"PRECOUTILIZADONFE" VARCHAR2(2), 
	"NUMCRM" VARCHAR2(10), 
	"NUMALVARARETINOICO" VARCHAR2(30) DEFAULT NULL, 
	"DTVENCALVARARETINOICO" DATE, 
	"USAVENDAEXPORTACAO" VARCHAR2(1) DEFAULT 'N', 
	"BLOQREMCOB" VARCHAR2(1) DEFAULT 'N', 
	"CLIATACADO" VARCHAR2(1), 
	"SENHACONVECF" NVARCHAR2(25), 
	"ISENCAOSUFRAMA" VARCHAR2(1) DEFAULT NULL, 
	"REGISTROIBAMA" VARCHAR2(30), 
	"DTVALIDADEIBAMA" DATE, 
	"USADESCONTOICMS" VARCHAR2(1) DEFAULT 'N', 
	"CODGLN" NUMBER(13,0), 
	"TIPOATIVCLI" VARCHAR2(1), 
	"CODPLPAGAGRUPAUTOMATIC" NUMBER(4,0), 
	"PERIODICIDADEAGRUP" NUMBER(4,0), 
	"DTULTAGRUPAMENTO" DATE, 
	"TIPOVENDA" VARCHAR2(1), 
	"TAXABOLETONF" VARCHAR2(1), 
	"TURNOENTREGA" VARCHAR2(5), 
	"NOMEFARMACEUTICO" VARCHAR2(40), 
	"NUMALVARAESPEC" VARCHAR2(30), 
	"IDINTEGRACAOMYFROTA" RAW(16) DEFAULT SYS_GUID(), 
	"PERDESMAXPONDERADO" NUMBER(18,6), 
	"EMPRESACONVENIADA" VARCHAR2(1), 
	"DIAFECHACONVENIO" NUMBER(2,0), 
	"QTDIASCARENCIACONV" NUMBER(2,0), 
	"DTPROXDESDAGENDADO" DATE, 
	"APLICREDBASEICMSTRANSP" VARCHAR2(1) DEFAULT 'N', 
	"UTILIZACALCULOSTMT" VARCHAR2(1) DEFAULT 'N', 
	"TPCOMUNICADOSERASA" VARCHAR2(1), 
	"SERASAGERENCIE" VARCHAR2(1) DEFAULT 'N', 
	"DTSERASAGERENCIE" DATE, 
	"PRAZOSERASAGERENCIE" NUMBER(3,0) DEFAULT '0', 
	"DESCONSVALIDASEFAZ" VARCHAR2(1), 
	"USADEBCREDRCA" VARCHAR2(1) DEFAULT 'S', 
	"ORGAOPUBMUNICIPAL" VARCHAR2(1) DEFAULT 'N', 
	"CODBAIRRODELIV" NUMBER(6,0), 
	"CODCIDADECOM" NUMBER(6,0), 
	"RECEBERBOLETOPOREMAIL" VARCHAR2(1), 
	"DIAFATURAR" NUMBER(2,0), 
	"CODPROMOCAOMED" NUMBER(9,0), 
	"NILPLPAGSOBREPOEPLPAGDISTRIB" VARCHAR2(1), 
	"DTULTALTER1203" DATE, 
	"CODFUNCULTALTER1203" NUMBER(8,0), 
	"CLICRM" VARCHAR2(1) DEFAULT 'N', 
	"PARTICIPAFARMACIAPOPULAR" VARCHAR2(1), 
	"PRAZOVENDA" NUMBER(4,0), 
	"TV10USACUSTOPRODUTO" VARCHAR2(1) DEFAULT 'N', 
	"USASEGURO" VARCHAR2(1), 
	"TIPOSEGURO" VARCHAR2(1), 
	"USAREGIMEESPISENSTFONTE" VARCHAR2(1) DEFAULT 'N', 
	"EMAILCOB" VARCHAR2(100), 
	"NOTIFICACAOTGI" VARCHAR2(2), 
	"CODFUNCANALISECRED" NUMBER(8,0), 
	"VALPESOVARMAPAWMS" CHAR(1) DEFAULT 'N', 
	"PERMITEAGRUPAMENTO" VARCHAR2(1) DEFAULT 'S', 
	"BLOQUEIOINATIVIDADE" VARCHAR2(1) DEFAULT 'S', 
	"UTILIZATXDIFENTREGA" VARCHAR2(1) DEFAULT 'N', 
	"ISENTOTXENTREGA" VARCHAR2(1) DEFAULT 'N', 
	"RIOLOG" VARCHAR2(1) DEFAULT 'N', 
	"VENDALOCESTRANG" VARCHAR2(1) DEFAULT 'N', 
	"IDENTIFICESTRANG" VARCHAR2(20), 
	"VALIDARLIMBONIFIC" VARCHAR2(1) DEFAULT 'N', 
	"TIPOCUSTOMANIF" VARCHAR2(2) DEFAULT 'P', 
	"DIALIMITFATU" NUMBER(2,0), 
	"FORCECLIPF" CHAR(1) DEFAULT 'N', 
	"FORCACLIPJ" CHAR(1) DEFAULT 'N', 
	"ACIONAMENTOCLIENTE" NVARCHAR2(2), 
	"DTALTDADOSBANCARIOS" DATE, 
	"DTULTALTERCLASSE" DATE, 
	"MELDTABERTCC1" DATE, 
	"MELDTABERTCC2" DATE, 
	"MELDTABERTCC3" DATE, 
	"IDENTVALERIODOCE" VARCHAR2(40), 
	"CODCNES" VARCHAR2(10), 
	"USACMVDIFERENCIADO" VARCHAR2(1), 
	"SITUACAOECOMMERCEUNILEVER" VARCHAR2(3) DEFAULT 'NAO', 
	"PAGCHEQUEMORADIA" VARCHAR2(1), 
	"USATDE" VARCHAR2(1) DEFAULT 'N', 
	"CODUSURECOMMERCE" NUMBER(4,0), 
	"PERMITIRAGRUPARTITULO" VARCHAR2(1), 
	"NUMDIASPROTESTO" NUMBER(2,0), 
	"TIPODIAUTILROTA" VARCHAR2(1), 
	"LIMITECREDSUPPLI" NUMBER(12,2), 
	"CODROTAINSERVIVEL" NUMBER(6,0), 
	"PRAZOENTREGACARCACA" NUMBER(3,0), 
	"PROXNUMSEQEND" NUMBER(8,0), 
	"DTSYNCPATHFIND" DATE, 
	"ACEITAPEDMONTPATHFIND" VARCHAR2(1), 
	"ACEITAINSERIRPRODUTOAUT" VARCHAR2(1), 
	"COZINHAINDUSTRIAL" VARCHAR2(1) DEFAULT 'N', 
	"TV1OBRIGATORIOTV5" VARCHAR2(1), 
	"TIPODOCUMENTOENTREGAFUTURA" VARCHAR2(1), 
	"CRF" VARCHAR2(30), 
	"DIGAGENCIA1" VARCHAR2(2), 
	"EMAILNFE" VARCHAR2(3500), 
	"QTDIASVENCLIMCRED" NUMBER(4,0), 
	"CRF_AUX" VARCHAR2(30), 
	"DIGAGENCIA1_AUX" VARCHAR2(2), 
	"EMAILNFE_AUX" VARCHAR2(3500), 
	"AUX_QTDIASVENCLIMCRED" NUMBER(4,0), 
	"INCIDENCIACPRB" VARCHAR2(1) DEFAULT 'N', 
	"PERCREDICMS" NUMBER(18,6), 
	"DTULTCOMPANT" DATE, 
	"MOTIVOBLOQ" CLOB, 
	"PERCFRETEAUTON" NUMBER(6,2), 
	"USAREGIMEESPISENREDICMS" VARCHAR2(1) DEFAULT 'N', 
	"CHECKINAPP" DATE, 
	"IDSOFITVIEW" VARCHAR2(10), 
	"DTULTALTERSOFITVIEW" DATE, 
	"DTEXCLUSAOSOFITVIEW" DATE, 
	"CODCLASSE_DMS" VARCHAR2(30), 
	"CLIEXCLUSIVO_DMS" VARCHAR2(5), 
	"CODGRUPO_DMS" VARCHAR2(40), 
	"CODCANAL_DMS" VARCHAR2(50), 
	"CODSEGMENTACAO_DMS" VARCHAR2(50), 
	"CODTIPONEGOCIO_DMS" VARCHAR2(50), 
	"ENVIARCADINTEGRA_DMS" VARCHAR2(1), 
	"CODHOLDIN_DMS" VARCHAR2(20), 
	"CODBANDEIRA_DMS" VARCHAR2(20), 
	"FREQVISITA_DMS" VARCHAR2(10), 
	"CODTIPOVENDA_DMS" VARCHAR2(20), 
	"CLIMEIOPTANTESN" VARCHAR2(1) DEFAULT 'N', 
	"POSSUIBENFFISCAL" VARCHAR2(1) DEFAULT 'N', 
	"RAZAORECEBEDORENDENT" VARCHAR2(60), 
	"CEPRECEBEDORENDENT" NUMBER(8,0), 
	"IERECEBEDORENDENT" NUMBER(14,0), 
	"FONERECEBEDORENDENT" NUMBER(14,0), 
	"CODPAISRECEBEDORENDENT" NUMBER(6,0), 
	"EMAILRECEBEDORENDENT" VARCHAR2(60), 
	"QTDIASAVENCERPRODUTO" NUMBER(4,0), 
	"CODCONDCOMERCIAL" VARCHAR2(20), 
	"CODGRUPOCOMERCIALMED" NUMBER(4,0), 
	"CODCAMINHOENTREGAMED" NUMBER(4,0), 
	"CODMOTIVO_DMS" VARCHAR2(3), 
	"CODROTINAALT" VARCHAR2(40), 
	"AGREGARIPIBASEICMS" VARCHAR2(1) DEFAULT NULL, 
	"RETECAOIRORGPUB" VARCHAR2(1) DEFAULT 'S', 
	"RETECAOCSORGPUB" VARCHAR2(1) DEFAULT 'S', 
	"RETECAOPISORGPUB" VARCHAR2(1) DEFAULT 'S', 
	"RETECAOCOFINSORGPUB" VARCHAR2(1) DEFAULT 'S', 
	"RETECAOICMSSTORGPUB" VARCHAR2(1) DEFAULT 'S', 
	"RETECAOOUTDEDORGPUB" VARCHAR2(1) DEFAULT 'S', 
	"CLIENTEMAISNEGOCIOS" VARCHAR2(1) DEFAULT 'N', 
	"DATAHORACONSULTAMAISNEGOCIOS" DATE, 
	"PERMITEFATURARAPRAZOMAISNEG" VARCHAR2(1), 
	"LIMITELIBERADOMAISNEG" NUMBER(22,6), 
	"STATUSMAISNEG" VARCHAR2(1), 
	"GERAGRPRETTRIB" VARCHAR2(1), 
	 CONSTRAINT "PCCLIENT_PK" PRIMARY KEY ("CODCLI")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE"  ENABLE, 
	 CONSTRAINT "CK_PRAZO_SERASA_GERENCIE" CHECK (PRAZOSERASAGERENCIE IN (0,90,120,180,999)) ENABLE, 
	 CONSTRAINT "FK_PCCLIENT_PCCNAE" FOREIGN KEY ("CODCNAE")
	  REFERENCES "AJEL"."PCCNAE" ("CODCNAE") ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" 
 LOB ("OBS_ADIC") STORE AS BASICFILE (
  TABLESPACE "TS_DADOS" ENABLE STORAGE IN ROW CHUNK 8192 PCTVERSION 10
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("MOTIVOBLOQ") STORE AS BASICFILE (
  TABLESPACE "TS_DADOS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

CREATE OR REPLACE TRIGGER "AJEL"."TINS_PCCLIENT_ATUCX_BEF" 
BEFORE INSERT OR UPDATE ON PCCLIENT
FOR EACH ROW
DECLARE
  v_IdFilaAtualizacao   PCFILAATUALIZACX.ID%TYPE := NULL;
  v_IndrAtualizado      PCFILAATUALIZACX.INDRATUALIZADO%TYPE := NULL;
BEGIN
   -- Verificar se o NUMSEQATU é NULL. Em caso de INSERT será sempre NULL, mas em caso de UPDATE
   -- o campo pode estar ou não com valor NULL. Os registros que não sofreram alteração estarão com valor NULL.
   -- Se for, será gerado o número sequencial que será gravado na tabela de fila de atualização
   -- do caixa para posterior atualização. O número sequencial é uma forma de localizar facilmente o
   -- registro gravado.
   IF :NEW.NUMSEQATU IS NULL THEN
      SELECT DFSEQ_PCCLIENT_ATUCX.NEXTVAL
        INTO :NEW.NUMSEQATU
        FROM DUAL;
   END IF;
   -- Verificar a quantidade de caixas existentes para poder comparar com a quantidade de registros na fila.
   FOR C_Caixa IN (SELECT *
                     FROM PCCAIXA
                    WHERE EXISTS (SELECT 1
                                    FROM ALL_DB_LINKS
                                   WHERE OWNER = USER
                                     AND DB_LINK = 'DBLCAIXA'||PCCAIXA.NUMCAIXA))LOOP
      BEGIN
         -- Verificar se o registro inserido já está na tabela de fila de atualização.
         SELECT ID ,INDRATUALIZADO
           INTO v_IdFilaAtualizacao, v_IndrAtualizado
           FROM PCFILAATUALIZACX
          WHERE NOMETABELA = 'PCCLIENT'
            AND VALORSEQ = :NEW.NUMSEQATU
            AND NUMCAIXA = C_Caixa.NUMCAIXA
            AND ROWNUM   = 1;
      EXCEPTION 
         -- Caso não exista o registro, será criado.
         WHEN NO_DATA_FOUND THEN 
            INSERT INTO PCFILAATUALIZACX(NOMETABELA
                                        ,VALORSEQ
                                        ,NUMCAIXA)
                                 VALUES('PCCLIENT'
                                       ,:NEW.NUMSEQATU
                                       ,C_Caixa.NUMCAIXA);         
      END ;            
      -- Verificar se o registro encontrado já foi atualizado.
      -- Se o registro já houver sido atualizado, é alterado o status para forçar nova atualização.
      IF v_IdFilaAtualizacao IS NOT NULL AND v_IndrAtualizado = 'S' THEN
         -- Gerar registro na fila para todos os caixas.
         UPDATE PCFILAATUALIZACX SET INDRATUALIZADO = 'N' 
                               WHERE ID = v_IdFilaAtualizacao;    
      END IF;
   END LOOP;
END TINS_PCCLIENT_ATUCX_BEF; 
/
ALTER TRIGGER "AJEL"."TINS_PCCLIENT_ATUCX_BEF" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_GRAVAR_CGEENTAUX" 
  BEFORE INSERT OR UPDATE ON PCCLIENT
  REFERENCING OLD AS OLD NEW AS NEW
  FOR EACH ROW
DECLARE
  
BEGIN
  :NEW.CGEENTAUX := LPAD(REPLACE(REPLACE(REPLACE(:NEW.CGCENT,'/'),'.'),'-'), 14, '0');
END TRG_GRAVAR_CGEENTAUX;
/
ALTER TRIGGER "AJEL"."TRG_GRAVAR_CGEENTAUX" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_SRVPRC_PCCLIENT" 
 BEFORE 
 INSERT OR UPDATE
 ON PCCLIENT
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW 
BEGIN
   :NEW.dtultaltersrvprc := SYSDATE;
END;
/
ALTER TRIGGER "AJEL"."TRG_SRVPRC_PCCLIENT" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_PCCLIENT_PCLOGLC" 
  BEFORE INSERT OR UPDATE OR DELETE ON PCCLIENT
  REFERENCING OLD AS OLD NEW AS NEW
  FOR EACH ROW
DECLARE
  VSEQUIPAMENTO VARCHAR2(64);
  VSUSUARIO     VARCHAR2(30);
  VSPROGRAMA    VARCHAR2(48);
  vVUSURWIN     VARCHAR2(10);
  v_mensagem    varchar2(1000) := '';
  vCODEMITE     PCLOGLC.CODEMITE%TYPE;
  VALTERACOES   PCLOGALTERACAODADOS.OBSERVACOES2%TYPE;
  CLIENTEid VARCHAR2(64);

  PROCEDURE USURWIN is
  BEGIN

  IF vVUSURWIN IS NULL THEN
    CLIENTEid := SYS_CONTEXT('USERENV','CLIENT_INFO');
    SELECT NVL((SUBSTR(CLIENTEid
         , NVL(INSTR(CLIENTEid, ':'),0) + 1
         , LENGTH(CLIENTEid))),'')
    into vVUSURWIN FROM dual;

    IF vVUSURWIN IS NULL THEN
       vVUSURWIN := '0';
    END IF;
    END IF;

     begin
     vCODEMITE := to_number(vVUSURWIN);
    exception
      WHEN OTHERS THEN
        vCODEMITE := 0;
    end;
  END;
  PROCEDURE INSERIRPCLOGLC IS
  BEGIN
    USURWIN;
    INSERT INTO PCLOGLC
      (CODCLI,
       DATA,
       CODEMITE,
       PROGRAMA,
       BLOQUEIO,
       BLOQUEIOANT,
       LIMCRED,
       LIMCREDANT,
       DTREGLIMANT,
       DTVENCLIMCRED,
       DTVENCLIMANT,
       OBS,
       OBSANT,
       OBS1,
       OBS2,
       OBS3,
       OBS4,
       PRAZO,
       PRAZOANT,
       CODCOB,
       CODCOBANT,
       CODPLPAG,
       CODPLPAGANT,
       BLOQDEFINITIVO,
       BLOQDEFINITIVOANT,
       DTULTCOMP,
       DTULTCOMPANT,
       UTILIZAPLPAGMEDICAMENTO,
       UTILIZAPLPAGMEDICAMENTOANT,
       CODPLPAGETICO,
       CODPLPAGETICOANT,
       CODPLPAGGENERICO,
       CODPLPAGGENERICOANT,
       LIMCREDCPF,
       LIMCREDCPFANT)
    VALUES
      (:NEW.CODCLI,
       SYSDATE,
       vCODEMITE,
       SUBSTR(NVL(VSPROGRAMA, 'ND'), 1, 10),
       NVL(:NEW.BLOQUEIO, 'N'),
       NVL(:OLD.BLOQUEIO, 'N'),
       NVL(:NEW.LIMCRED, 0),
       NVL(:OLD.LIMCRED, 0),
       NVL(:OLD.DTREGLIM, TRUNC(SYSDATE)),
       NVL(:NEW.DTVENCLIMCRED, TRUNC(SYSDATE)),
       NVL(:OLD.DTVENCLIMCRED, NVL(:OLD.DTREGLIM, TRUNC(SYSDATE))),

       SUBSTR(NVL(:NEW.OBS, 'SEM OBS'), 1, 20),
       SUBSTR(NVL(:OLD.OBS, 'SEM OBS'), 1, 20),
       SUBSTR(NVL(:NEW.OBS2, 'SEM OBS'), 1, 60),
       SUBSTR(NVL(:NEW.OBS3, 'SEM OBS'), 1, 60),
       SUBSTR(NVL(:NEW.OBS4, 'SEM OBS'), 1, 60),

       (CASE WHEN NVL(:NEW.CODFUNCANALISECRED, 0) > 0 THEN
          SUBSTR(NVL(:NEW.OBS5, 'SEM OBS'), 1, 60) || 'Cód. Func. Análise Cred.: ' || :NEW.CODFUNCANALISECRED
        ELSE
          SUBSTR(NVL(:NEW.OBS5, 'SEM OBS'), 1, 60)
        END),

       NVL(:NEW.PRAZOADICIONAL, 1),
       NVL(:OLD.PRAZOADICIONAL, 1),
       NVL(:NEW.CODCOB, 'ND'),
       NVL(:OLD.CODCOB, 'ND'),
       NVL(:NEW.CODPLPAG, 0),
       NVL(:OLD.CODPLPAG, 0),
       NVL(:NEW.BLOQUEIODEFINITIVO, 'N'),
       NVL(:OLD.BLOQUEIODEFINITIVO, 'N'),
       :NEW.DTULTCOMP,
       :OLD.DTULTCOMP,
       NVL(:NEW.UTILIZAPLPAGMEDICAMENTO, 'N'),
       NVL(:OLD.UTILIZAPLPAGMEDICAMENTO, 'N'),
       :NEW.CODPLPAGETICO,
       :OLD.CODPLPAGETICO,
       :NEW.CODPLPAGGENERICO,
       :OLD.CODPLPAGGENERICO,
       :NEW.LIMCREDCPF,
       :OLD.LIMCREDCPF
    );
  END;
BEGIN

  begin
    VSEQUIPAMENTO := SUBSTR(SYS_CONTEXT('USERENV', 'TERMINAL'), 1, 64);
    VSUSUARIO     := SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 30);
    VSPROGRAMA    := TRIM(SUBSTR(REPLACE(REPLACE(SYS_CONTEXT('USERENV', 'MODULE'), '[', ''), ']', ''), 1, 10));

  exception
    WHEN OTHERS THEN
      VSEQUIPAMENTO := 'ND';
      VSUSUARIO     := 'ND';
      VSPROGRAMA    := 'ND';
      vVUSURWIN     := '0';
  end;

  begin

  IF (:NEW.BLOQUEIO<> :OLD.BLOQUEIO) OR(:NEW.LIMCRED<> :OLD.LIMCRED) OR
    (:NEW.PRAZOADICIONAL<> :OLD.PRAZOADICIONAL) OR(:NEW.CODCOB<> :OLD.CODCOB) OR
    (:NEW.CODPLPAG<> :OLD.CODPLPAG) OR(:NEW.BLOQUEIODEFINITIVO<> :OLD.BLOQUEIODEFINITIVO)OR
     (:NEW.DTULTCOMP<> :OLD.DTULTCOMP) THEN
    VALTERACOES := 'PROGRAMA=' || VSPROGRAMA;
    VALTERACOES := VALTERACOES || ';BLOQUEIO=' || :NEW.BLOQUEIO;
    VALTERACOES := VALTERACOES || ';LIMCRED=' || :NEW.LIMCRED;
    VALTERACOES := VALTERACOES || ';PRAZOADICIONAL=' || :NEW.PRAZOADICIONAL;
    VALTERACOES := VALTERACOES || ';CODCOB=' || :NEW.CODCOB;
    VALTERACOES := VALTERACOES || ';CODPLPAG=' || :NEW.CODPLPAG;
    VALTERACOES := VALTERACOES || ';BLOQUEIODEFINITIVO=' || :NEW.BLOQUEIODEFINITIVO;
    VALTERACOES := VALTERACOES || ';DTULTCOMP=' || :NEW.DTULTCOMP;

      insert into pclogalteracaodados(DATA, TABELA, OBSERVACOES, OBSERVACOES2, CODIGO, MAQUINA, OSUSER, PROGRAMA)
      values (sysdate, 'PCCLIENT', 'TRG_PCCLIENT_PCLOGLC', SUBSTR(VALTERACOES, 1, 2000), :NEW.CODCLI, VSEQUIPAMENTO, VSUSUARIO, VSPROGRAMA);
  END IF;
  EXCEPTION
    WHEN OTHERS THEN
      v_mensagem := SUBSTR(SQLERRM, 1, 1000);
      insert into pclogalteracaodados(DATA, TABELA, OBSERVACOES, OBSERVACOES2)
      values (sysdate, 'PCCLIENT', 'TRG_PCCLIENT_PCLOGLC', 'NÃO FOI POSSÍVEL INSERIR PCLOGLC ' || v_mensagem);
  END;

  BEGIN
    /*Geração de log quando ocorre atualização que não seja pelas rotinas 504 e 1203*/

    IF UPDATING
          AND (VSPROGRAMA NOT LIKE '%504%')
          AND (VSPROGRAMA NOT LIKE '%820%')
          AND (VSPROGRAMA NOT LIKE '%1203%')
          AND ( ( :NEW.BLOQUEIO is not null and :OLD.BLOQUEIO is null ) OR ( :NEW.BLOQUEIO is null and :OLD.BLOQUEIO is not null ) OR ( :NEW.BLOQUEIO <> :OLD.BLOQUEIO )
                or
                ( :NEW.LIMCRED is not null and :OLD.LIMCRED is null ) OR ( :NEW.LIMCRED is null and :OLD.LIMCRED is not null ) OR ( :NEW.LIMCRED <> :OLD.LIMCRED )
                or
                ( :NEW.OBS is not null and :OLD.OBS is null ) OR ( :NEW.OBS is null and :OLD.OBS is not null ) OR ( :NEW.OBS <> :OLD.OBS )
                or
                ( :NEW.PRAZOADICIONAL is not null and :OLD.PRAZOADICIONAL is null ) OR ( :NEW.PRAZOADICIONAL is null and :OLD.PRAZOADICIONAL is not null ) OR ( :NEW.PRAZOADICIONAL <> :OLD.PRAZOADICIONAL )
                or
                ( :NEW.CODCOB is not null and :OLD.CODCOB is null ) OR ( :NEW.CODCOB is null and :OLD.CODCOB is not null ) OR ( :NEW.CODCOB <> :OLD.CODCOB )
                or
                ( :NEW.CODPLPAG is not null and :OLD.CODPLPAG is null ) OR ( :NEW.CODPLPAG is null and :OLD.CODPLPAG is not null ) OR ( :NEW.CODPLPAG <> :OLD.CODPLPAG )
                or
                ( :NEW.BLOQUEIODEFINITIVO is not null and :OLD.BLOQUEIODEFINITIVO is null ) OR ( :NEW.BLOQUEIODEFINITIVO is null and :OLD.BLOQUEIODEFINITIVO is not null ) OR ( :NEW.BLOQUEIODEFINITIVO <> :OLD.BLOQUEIODEFINITIVO )
                or
                ( :NEW.DTULTCOMP is not null and :OLD.DTULTCOMP is null ) OR ( :NEW.DTULTCOMP is null and :OLD.DTULTCOMP is not null ) OR ( :NEW.DTULTCOMP <> :OLD.DTULTCOMP )
          ) THEN

      IF INSTR(UPPER(SYS_CONTEXT('USERENV', 'MODULE')), 'S504') = 0 THEN
        INSERIRPCLOGLC;
      END IF;

    END IF;--Updating

    IF UPDATING AND (VSPROGRAMA LIKE '%1203%') THEN
      INSERIRPCLOGLC;
    END IF;

    IF INSERTING AND (VSPROGRAMA NOT LIKE '%504%') AND (VSPROGRAMA NOT LIKE '%820%') THEN
      INSERIRPCLOGLC;
    END IF;--Inserting

    IF DELETING THEN
      insert into pclogalteracaodados(DATA, TABELA, OBSERVACOES, OBSERVACOES2)
      values (sysdate, 'PCCLIENT', 'TRG_PCCLIENT_PCLOGLC', 'CLIENTE FOI DELETADO PELO PROGRAMA ' || NVL(VSPROGRAMA,'ND'));
    END IF; --Deleting

  EXCEPTION
    WHEN OTHERS THEN
      v_mensagem := SUBSTR(SQLERRM, 1, 1000);

      insert into pclogalteracaodados(DATA, TABELA, OBSERVACOES, OBSERVACOES2)
      values (sysdate, 'PCCLIENT', 'TRG_PCCLIENT_PCLOGLC', 'NÃO FOI POSSÍVEL INSERIR PCLOGLC ' || v_mensagem);
  END;


END;
/
ALTER TRIGGER "AJEL"."TRG_PCCLIENT_PCLOGLC" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_GRAVAR_PCCLIENT_CGEENTAUX" 
 BEFORE
  INSERT OR UPDATE
 ON pcclient
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
DECLARE
  -- local variables here
BEGIN
  :NEW.CGEENTAUX := LPAD(REPLACE(REPLACE(REPLACE(:NEW.CGCENT,'/'),'.'),'-'), 14, '0');
END TRG_GRAVAR_PCCLIENT_CGEENTAUX;
/
ALTER TRIGGER "AJEL"."TRG_GRAVAR_PCCLIENT_CGEENTAUX" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_PCCLIENT_TRIBUT" 
Before INSERT OR UPDATE ON PCCLIENT
REFERENCING NEW AS newRow OLD AS oldRow
FOR EACH ROW
BEGIN
  IF  :newRow.CODATV1 = 21
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
        :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 29
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 20
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'S';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'S';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 19
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'S';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := 'F';
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 25
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'S';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := 'O';
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 28
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'S';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 15
    THEN
        :newRow.CONSUMIDORFINAL      := 'N';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'S';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'S';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 37
    THEN
        :newRow.CONSUMIDORFINAL      := 'N';
         :newRow.TIPOEMPRESA      := 'SN';
        :newRow.CONTRIBUINTE       := 'S';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'S';
        :newRow.CLIENTEFONTEST    := 'S';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 26
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'S';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'S';
        :newRow.TIPOATIVCLI     := 'C';
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
  		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 	ElsIF  :newRow.CODATV1 = 36
    THEN
        :newRow.CONSUMIDORFINAL      := 'N';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'S';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := 'C';
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 	ElsIF  :newRow.CODATV1 = 27
    THEN
        :newRow.CONSUMIDORFINAL      := 'N';
         :newRow.TIPOEMPRESA      := 'NRPA';
        :newRow.CONTRIBUINTE       := 'S';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := 'C';
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='S';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 	ElsIF  :newRow.CODATV1 = 18
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
        :newRow.TIPOEMPRESA      := 'NRPA';
        :newRow.CONTRIBUINTE       := 'S';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='S';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 17
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'S';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'S';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 42
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'S';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'S';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 7
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=	Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 12
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=	Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 13
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=	Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 14
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=	Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
  		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 11
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=	Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
  		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 31
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=	Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
  		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 32
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=	Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
  		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 38
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'S';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'S';
        :newRow.CLIENTEFONTEST    := 'S';
        :newRow.IVAFONTE  :=0;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 39
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  := Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 40
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  := Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 41
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  := Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 6
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'S';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'S';
        :newRow.CLIENTEFONTEST    := 'S';
        :newRow.IVAFONTE  :=0;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 24
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'NRPA';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := 'F';
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 5
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'NRPA';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := 'F';
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 16
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'NRPA';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := 'F';
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 22
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'NRPA';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := 'F';
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 8
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'NRPA';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := 'O';
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 35
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'NRPA';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := 'O';
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 34
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'NRPA';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := 'O';
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 10
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'NRPA';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 30
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'NRPA';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 33
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'NRPA';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';

 	ElsIF  :newRow.CODATV1 = 2 AND :newRow.ESTENT <> 'MT'
    THEN
        :newRow.CONSUMIDORFINAL      := 'N';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'S';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'S';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
		:newRow.NUMTARE      :='0';
	ElsIF  :newRow.CODATV1 = 2 AND :newRow.ESTENT = 'MT'
    THEN
        :newRow.CONSUMIDORFINAL      := 'N';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'S';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'S';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='S';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 9
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'S';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := 'C';
        :newRow.CALCULAST       := 'S';
        :newRow.CLIENTEFONTEST    := 'S';
        :newRow.IVAFONTE  :=0;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 4
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'PR';
        :newRow.CONTRIBUINTE       := 'S';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'S';
        :newRow.CLIENTEFONTEST    := 'S';
        :newRow.IVAFONTE  :=0;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
 	ElsIF  :newRow.CODATV1 = 3
    THEN
        :newRow.CONSUMIDORFINAL      := 'S';
         :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'S';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'S';
        :newRow.CLIENTEFONTEST    := 'S';
        :newRow.IVAFONTE  :=	0;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';

 	 Elsif  :newRow.CODATV1 = 1
 	  THEN
        :newRow.CONSUMIDORFINAL      := 'S';
        :newRow.TIPOEMPRESA      := 'O';
        :newRow.CONTRIBUINTE       := 'N';
        :newRow.FORCACLIPJ       := 'N';
        :newRow.FORCECLIPF       := 'N';
        :newRow.TIPOATIVCLI     := Null;
        :newRow.CALCULAST       := 'N';
        :newRow.CLIENTEFONTEST    := 'N';
        :newRow.IVAFONTE  :=Null;
   		:newRow.USACMVDIFERENCIADO   :='N';
   		:newRow.USAIVAFONTEDIFERENCIADO      :='N';
		:newRow.UTILIZACALCULOSTMT      :='N';
 		:newRow.NUMTARE      :='0';
	END IF;
	--dbms_output.put_line('Up.Cl:' || :newRow.codcli || ' Atv: '
    --                       || :newRow.CODATV1 );
	END TRG_PCCLIENT_TRIBUT;

/
ALTER TRIGGER "AJEL"."TRG_PCCLIENT_TRIBUT" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_PCCLIENT_PRACA" 
Before INSERT OR UPDATE ON PCCLIENT
REFERENCING NEW AS newRow OLD AS oldRow
FOR EACH ROW
BEGIN
    IF 	:newRow.CODCIDADE = 16540
    THEN
	       	:newRow.CODPRACA  			:=1;
	ELSIF :newRow.ESTENT <> 'GO'
	THEN
	 		:newRow.CODPRACA		  	:=2;
	ELSIF :newRow.CODCIDADE NOT IN (16461,16480,16537,16541,16602,16657,16678,16446,16464,16469,16477,16545,16550,16669) AND :newRow.ESTENT ='GO'
	THEN
	 		:newRow.CODPRACA		  	:=3;
	ELSIF :newRow.CODCIDADE IN (16461,16480,16537,16541,16602,16657,16678)
	THEN
	 		:newRow.CODPRACA		  	:=4;
	ELSIF :newRow.CODCIDADE IN (16446,16464,16469,16477,16545,16550,16669)
	THEN
	 		:newRow.CODPRACA		  	:=5;

	END IF;
	--dbms_output.put_line('Updated cliente:' || :newRow.codcli || ' CODCIDADE ANTIGO: '
    --                       	|| :oldRow.CODCIDADE || ' CODCIDADE NOVO: ' || :newRow.CODCIDADE
      --                    	|| ' CODPRACA ANTIGO: '
        --                   	|| :oldRow.CODPRACA || ' CODPRACA NOVO: ' || :newRow.CODPRACA);
END TRG_PCCLIENT_PRACA;

/
ALTER TRIGGER "AJEL"."TRG_PCCLIENT_PRACA" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_GKS_BLOQUEIOPJ" 
    BEFORE
    INSERT
    ON PCCLIENT
    REFERENCING OLD AS OLD NEW AS NEW
    FOR EACH ROW
BEGIN
    /*Pessoa fisisca Bloqueio*/
    IF :NEW.TIPOFJ='J' THEN
        :NEW.BLOQUEIO:='S';
        :NEW.BLOQUEIOSEFAZ:='S';
        :NEW.DTBLOQ:=TRUNC(SYSDATE);
        :NEW.DTREGLIM:=TRUNC (SYSDATE);
        :NEW.LIMCREDCPF:='0';
        :NEW.BLOQUEIOSEFAZPED:='S';
    END IF;
END;

/
ALTER TRIGGER "AJEL"."TRG_GKS_BLOQUEIOPJ" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_GKS_BLOQUEIOPF" 
    BEFORE
    INSERT
    ON PCCLIENT
    REFERENCING OLD AS OLD NEW AS NEW
    FOR EACH ROW
BEGIN
    /*Pessoa fisisca Bloqueio*/
    IF :NEW.TIPOFJ='F' THEN
        :NEW.BLOQUEIO:='S';
        :NEW.BLOQUEIOSEFAZ:='S';
        :NEW.DTBLOQ:=TRUNC(SYSDATE);
        :NEW.DTREGLIM:=TRUNC (SYSDATE);
        :NEW.LIMCREDCPF:='0';
        :NEW.BLOQUEIOSEFAZPED:='S';
    END IF;
END;

/
ALTER TRIGGER "AJEL"."TRG_GKS_BLOQUEIOPF" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_ECOMMERCE_PCCLIENT" 
 AFTER
   INSERT OR DELETE OR UPDATE OF SITUACAOECOMMERCEUNILEVER, BLOQUEIO
 ON PCCLIENT
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
DECLARE vsENVIARREGISTRO VARCHAR2(1);
BEGIN
  vsENVIARREGISTRO := 'N';
  --Se estiver usando os status: PEN, APV, RPV
  IF (NVL(:NEW.SITUACAOECOMMERCEUNILEVER,'NAO') <> 'NAO') THEN
     vsENVIARREGISTRO := 'S';
  ELSIF ((NVL(:NEW.SITUACAOECOMMERCEUNILEVER, 'NAO')  = 'NAO') --Se saiu dos status de controle e foi para não utilizado
    AND  (NVL(:OLD.SITUACAOECOMMERCEUNILEVER, 'NAO') <> 'NAO')) THEN
      vsENVIARREGISTRO := 'S';
  END IF;
  BEGIN
  if vsENVIARREGISTRO = 'S' THEN
   --Inserindo registros a ser enviado para todas as configurações validas
    INSERT INTO PCECOMMERCEUNILEVERFILA (CODFILIAL, TABELA, ID, DTINCLUSAO)
         SELECT PCECOMMERCEUNILEVERCLIENTE.CODFILIAL
              , 'SELECTCLIENTE'
              , :NEW.ROWID
              , SYSDATE
           FROM PCECOMMERCEUNILEVERCLIENTE
          WHERE PCECOMMERCEUNILEVERCLIENTE.CODCLI = :NEW.CODCLI;   
    END IF;           
  EXCEPTION
  WHEN DUP_VAL_ON_INDEX THEN
    NULL;
  END;
--  END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_ECOMMERCE_PCCLIENT" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_ECOMMERCE_BLOQUEIO_CLI" 
 BEFORE
   INSERT OR DELETE OR UPDATE OF SITUACAOECOMMERCEUNILEVER, BLOQUEIO, BLOQUEIOSEFAZ
 ON PCCLIENT
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
DECLARE
/*
INT-913  Fabrício Lima    11/05/2018
INT-839  Fabrício Lima    30/04/2018
*/
BEGIN
  IF NVL(:NEW.SITUACAOECOMMERCEUNILEVER,'NAO') = 'APV' AND
     ((NVL(:OLD.BLOQUEIO,'N')      = 'N' AND NVL(:NEW.BLOQUEIO,'N')      = 'S') OR
      (NVL(:OLD.BLOQUEIOSEFAZ,'N') = 'N' AND NVL(:NEW.BLOQUEIOSEFAZ,'N') = 'S'))
  THEN
    :NEW.SITUACAOECOMMERCEUNILEVER := 'RPV';
  ELSE
    IF NVL(:OLD.SITUACAOECOMMERCEUNILEVER,'NAO') = 'RPV' 
    THEN
      IF (NVL(:OLD.BLOQUEIO,'N') = 'S' AND NVL(:NEW.BLOQUEIO,'N') = 'N' AND
         NVL(:OLD.BLOQUEIOSEFAZ,'N') = 'N' AND NVL(:NEW.BLOQUEIOSEFAZ,'N') = 'N') OR
         (NVL(:OLD.BLOQUEIO,'N') = 'N' AND NVL(:NEW.BLOQUEIO,'N') = 'N' AND
         NVL(:OLD.BLOQUEIOSEFAZ,'N') = 'S' AND NVL(:NEW.BLOQUEIOSEFAZ,'N') = 'N') OR
         (NVL(:OLD.BLOQUEIO,'N') = 'S' AND NVL(:NEW.BLOQUEIO,'N') = 'N' AND
         NVL(:OLD.BLOQUEIOSEFAZ,'N') = 'S' AND NVL(:NEW.BLOQUEIOSEFAZ,'N') = 'N')
      THEN
        :NEW.SITUACAOECOMMERCEUNILEVER := 'APV';
      END IF;
    END IF;
  END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_ECOMMERCE_BLOQUEIO_CLI" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_ECOMMERCE_LIMITE" 
 AFTER
   INSERT OR DELETE OR UPDATE OF SITUACAOECOMMERCEUNILEVER, LIMCRED, DTULTCOMP, DTULTALTER1203, DTULTALTER, BLOQUEIO
 ON PCCLIENT
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
DECLARE vsENVIARREGISTRO VARCHAR2(1);
BEGIN
  vsENVIARREGISTRO := 'N';
  --Se estiver usando os status: PEN, APV, RPV
  IF (NVL(:NEW.SITUACAOECOMMERCEUNILEVER,'NAO') <> 'NAO') THEN
     vsENVIARREGISTRO := 'S';
  ELSIF ((NVL(:NEW.SITUACAOECOMMERCEUNILEVER, 'NAO')  = 'NAO') --Se saiu dos status de controle e foi para não utilizado
    AND  (NVL(:OLD.SITUACAOECOMMERCEUNILEVER, 'NAO') <> 'NAO')) THEN
      vsENVIARREGISTRO := 'S';
  END IF;

  IF ((NVL(:NEW.SITUACAOECOMMERCEUNILEVER, 'NAO')  = 'PEN') AND (NVL(:OLD.SITUACAOECOMMERCEUNILEVER, 'NAO') <> 'PEN')) THEN
      vsENVIARREGISTRO := 'N';
  END IF;
  
  IF ((NVL(:NEW.SITUACAOECOMMERCEUNILEVER, 'NAO')  = 'PEN') AND (NVL(:OLD.SITUACAOECOMMERCEUNILEVER, 'NAO') = 'PEN')) THEN
      vsENVIARREGISTRO := 'N';
  END IF;
  
  IF ((NVL(:NEW.SITUACAOECOMMERCEUNILEVER, 'NAO')  = 'RPV') AND (NVL(:OLD.SITUACAOECOMMERCEUNILEVER, 'NAO') <> 'RPV')) THEN
      vsENVIARREGISTRO := 'N';
  END IF;
  
  IF ((NVL(:NEW.SITUACAOECOMMERCEUNILEVER, 'NAO')  = 'RPV') AND (NVL(:OLD.SITUACAOECOMMERCEUNILEVER, 'NAO') = 'RPV')) THEN
      vsENVIARREGISTRO := 'N';
  END IF;

  IF vsENVIARREGISTRO = 'S' THEN
  BEGIN --Inserindo registros a ser enviado para todas as configurações validas
    INSERT INTO PCECOMMERCEUNILEVERFILA (CODFILIAL, TABELA, ID, DTINCLUSAO)
         SELECT PCECOMMERCEUNILEVERCLIENTE.CODFILIAL
              , 'SELECTLIMITE'
              , :NEW.ROWID
              , SYSDATE
           FROM PCECOMMERCEUNILEVERCLIENTE
          WHERE PCECOMMERCEUNILEVERCLIENTE.CODCLI = :NEW.CODCLI;
  EXCEPTION
  WHEN DUP_VAL_ON_INDEX THEN
    NULL;
  END;
  END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_ECOMMERCE_LIMITE" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_ECOMMERCEB2B_LIMITE" 
 AFTER
   INSERT OR DELETE OR UPDATE OF LIMCRED, DTULTCOMP, DTULTALTER1203, DTULTALTER, BLOQUEIO, BLOQUEIOSEFAZ
 ON PCCLIENT
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
DECLARE vsENVIARREGISTRO VARCHAR2(1);
BEGIN
  vsENVIARREGISTRO := 'S';
  
  IF vsENVIARREGISTRO = 'S' THEN
  BEGIN --Inserindo registros a ser enviado para todas as configurações validas
    INSERT INTO PCECOMMERCEB2BFILA (CODFILIAL, TIPOINTEGRACAO, TABELA, ID, DTINCLUSAO)
         SELECT PCECOMMERCEB2BCLIENTE.CODFILIAL
              , PCECOMMERCEB2BCLIENTE.TIPOINTEGRACAO
              , 'LIMITE'
              , :NEW.ROWID
              , SYSDATE
           FROM PCECOMMERCEB2BCLIENTE
          WHERE PCECOMMERCEB2BCLIENTE.CODCLI = :NEW.CODCLI;           
  EXCEPTION
  WHEN DUP_VAL_ON_INDEX THEN
    NULL;
  END;
  END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_ECOMMERCEB2B_LIMITE" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_ECOMMERCEB2B_BLOQUEIOCLI" 
   AFTER INSERT OR UPDATE OF BLOQUEIO, BLOQUEIOSEFAZ ON PCCLIENT
   REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
   VEXISTE NUMBER;
   VCODCLI PCCLIENT.CODCLI%TYPE;
   VAPV_RPV PCECOMMERCEB2BCLIENTE.SITUACAOECOMMERCEB2B%TYPE;
   VROWIDCLI VARCHAR2(50);
BEGIN
   IF (INSERTING) THEN
      VCODCLI := :NEW.CODCLI;
      VROWIDCLI := :NEW.ROWID;
   ELSE
      VCODCLI := :OLD.CODCLI;
      VROWIDCLI := :OLD.ROWID;
   END IF;

   BEGIN
      SELECT COUNT(*)
      INTO VEXISTE
      FROM PCECOMMERCEB2BCLIENTE
      WHERE CODCLI = VCODCLI;
   EXCEPTION WHEN OTHERS THEN
      VEXISTE := 0;
   END;

   IF (VEXISTE > 0) THEN
      IF ((NVL(:NEW.BLOQUEIO, 'N') = 'S') OR (NVL(:NEW.BLOQUEIOSEFAZ, 'N') = 'S')) THEN
         VAPV_RPV := 'RPV';
      ELSE
         VAPV_RPV := 'APV';
      END IF;

      UPDATE PCECOMMERCEB2BCLIENTE SET
         SITUACAOECOMMERCEB2B = VAPV_RPV,
         ROWIDCLI = VROWIDCLI      
      WHERE CODCLI = VCODCLI
        AND NVL(SITUACAOECOMMERCEB2B, 'NAO') IN ('APV', 'RPV')
        AND NVL(SITUACAOECOMMERCEB2B, 'NAO') <> VAPV_RPV;
   END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_ECOMMERCEB2B_BLOQUEIOCLI" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_INTEGRA_MYFROTA_PCCLIENT" 
  AFTER UPDATE OR INSERT ON pcclient
  REFERENCING NEW AS NEW OLD AS OLD
  FOR EACH ROW
DECLARE
  xmlvalor       clob;
  operacao       varchar2(50);
  CHAVETRANSACAO raw(16);

BEGIN
  SELECT SYS_GUID INTO CHAVETRANSACAO FROM DUAL;

  IF (UPDATING) THEN
    IF (:NEW.dtexclusao is not null and :OLD.dtexclusao is null) THEN
      SELECT xmltype.getclobval(XMLELEMENT("issuer",
                                           XMLATTRIBUTES(:NEW.IDINTEGRACAOMYFROTA AS
                                                         "SFT_External_Id"),
                                           XMLELEMENT("transp__SFT_Active__c",
                                                      0)))
        INTO xmlvalor
        FROM dual;
      SELECT 'ExcluirClienteMyFrota' into OPERACAO from dual;
    END IF;
    IF NOT (NVL(:NEW.CLIENTE, 0) = NVL(:OLD.CLIENTE, 0) AND
        NVL(:NEW.FANTASIA, 0) = NVL(:OLD.FANTASIA, 0) AND
        NVL(:NEW.CGCENT, 0) = NVL(:OLD.CGCENT, 0) AND
        NVL(:NEW.ENDERCOB, 0) = NVL(:OLD.ENDERCOB, 0) AND
        NVL(:NEW.MUNICCOB, 0) = NVL(:OLD.MUNICCOB, 0) AND
        NVL(:NEW.ESTCOB, 0) = NVL(:OLD.ESTCOB, 0) AND
        NVL(:NEW.CEPCOB, 0) = NVL(:OLD.CEPCOB, 0) AND 
        NVL(:NEW.DTEXCLUSAO, '') = NVL(:OLD.DTEXCLUSAO, '')) 

     THEN
      SELECT xmltype.getclobval(XMLELEMENT("issuer",
                                           XMLATTRIBUTES(:NEW.IDINTEGRACAOMYFROTA AS
                                                         "SFT_External_Id"),
                                           XMLELEMENT("name", :NEW.CLIENTE),
                                           XMLELEMENT("transp__SFT_Transaction_Number__c",
                                                      CHAVETRANSACAO),
                                           XMLELEMENT("transp__SFT_Nickname__c",
                                                      :NEW.FANTASIA),
                                           XMLELEMENT("transp__SFT_CNPJ__c",
                                                      :NEW.CGCENT),
                                           XMLELEMENT("transp__SFT_Address__c",
                                                      :NEW.ENDERCOB),
                                           XMLELEMENT("transp__SFT_City__c",
                                                      :NEW.MUNICCOB),
                                           XMLELEMENT("transp__SFT_State__c",
                                                      :NEW.ESTCOB),
                                           XMLELEMENT("transp__SFT_Country__c",
                                                      ' '),
                                           XMLELEMENT("transp__SFT_Zip_Code__c",
                                                      :NEW.CEPCOB),
                                           XMLELEMENT("transp__SFT_Issuer_Type__c",
                                                      'Cliente'),
                                           XMLELEMENT("transp__SFT_Active__c",
                                                      CAST(NVL(NVL(CAST(:NEW.DTEXCLUSAO AS
                                                                        VARCHAR2(10)),
                                                                   '1'),
                                                               '0') AS
                                                           VARCHAR(1)))))
        INTO xmlvalor
        FROM dual;
    
      SELECT 'AlterarClienteMyFrota' INTO operacao FROM dual;
    END IF;
  END IF;
  IF (INSERTING) THEN
    SELECT xmltype.getclobval(XMLELEMENT("issuer",
                                         XMLATTRIBUTES(:NEW.IDINTEGRACAOMYFROTA AS
                                                       "SFT_External_Id"),
                                         XMLELEMENT("name",
                                                    NVL(:NEW.CLIENTE, ' ')),
                                         XMLELEMENT("transp__SFT_Transaction_Number__c",
                                                    CHAVETRANSACAO),
                                         XMLELEMENT("transp__SFT_Nickname__c",
                                                    NVL(:NEW.FANTASIA, ' ')),
                                         XMLELEMENT("transp__SFT_CNPJ__c",
                                                    NVL(:NEW.CGCENT, ' ')),
                                         XMLELEMENT("transp__SFT_Address__c",
                                                    NVL(:NEW.ENDERCOB, ' ')),
                                         XMLELEMENT("transp__SFT_City__c",
                                                    NVL(:NEW.MUNICCOB, ' ')),
                                         XMLELEMENT("transp__SFT_State__c",
                                                    NVL(:NEW.ESTCOB, ' ')),
                                         XMLELEMENT("transp__SFT_Country__c",
                                                    ' '),
                                         XMLELEMENT("transp__SFT_Zip_Code__c",
                                                    NVL(:NEW.CEPCOB, ' ')),
                                         XMLELEMENT("transp__SFT_Issuer_Type__c",
                                                    'Cliente'),
                                         XMLELEMENT("transp__SFT_Active__c",
                                                    CAST(NVL(NVL(CAST(:NEW.DTEXCLUSAO AS
                                                                      VARCHAR2(10)),
                                                                 '1'),
                                                             '0') AS
                                                         VARCHAR(1)))))
      INTO xmlvalor
      FROM dual;
    SELECT 'IncluirClienteMyFrota' INTO operacao FROM dual;
  
  END IF;
  IF (OPERACAO IN ('IncluirClienteMyFrota', 'AlterarClienteMyFrota',
      'ExcluirClienteMyFrota')) THEN
    INSERT INTO PCMYFROTA_FILA
      (CHAVE, OPERACAO, DADOS)
    VALUES
      (CHAVETRANSACAO, operacao, xmlvalor);
  END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_INTEGRA_MYFROTA_PCCLIENT" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_INTEGRA_OSMOBILE_PCCLIENT" 
  AFTER UPDATE OR INSERT OF
        CLIENTE, DTEXCLUSAO, BLOQUEIO, CGCENT, ENDERENT, NUMEROENT, BAIRROENT, MUNICENT, ESTENT, TELENT, EMAIL  ON PCCLIENT
  REFERENCING NEW AS NEW OLD AS OLD
  FOR EACH ROW
DECLARE
  STATUS_OPERACAO varchar2(50);
  CHAVETRANSACAO raw(16);
BEGIN
  SELECT SYS_GUID INTO CHAVETRANSACAO FROM DUAL;

  IF (INSERTING) THEN
     SELECT 'INCLUIR' INTO STATUS_OPERACAO FROM DUAL;

  ELSIF (UPDATING) THEN

     IF (:NEW.DTEXCLUSAO IS NULL) THEN
        IF NOT (NVL(:NEW.CLIENTE, 0) = NVL(:OLD.CLIENTE, 0) AND
                NVL(:NEW.BLOQUEIO, 0) = NVL(:OLD.BLOQUEIO, 0) AND
                NVL(:NEW.CGCENT, 0) = NVL(:OLD.CGCENT, 0) AND
                NVL(:NEW.ENDERENT, 0) = NVL(:OLD.ENDERENT, 0) AND
                NVL(:NEW.NUMEROENT, 0) = NVL(:OLD.NUMEROENT, 0) AND
                NVL(:NEW.BAIRROENT, 0) = NVL(:OLD.BAIRROENT, 0) AND
                NVL(:NEW.MUNICENT, 0) = NVL(:OLD.MUNICENT, 0) AND
                NVL(:NEW.ESTENT, 0) = NVL(:OLD.ESTENT, 0) AND
                NVL(:NEW.TELENT, 0) = NVL(:OLD.TELENT, 0) AND
                NVL(:NEW.EMAIL, '') = NVL(:OLD.EMAIL, '')) THEN

           SELECT 'ALTERAR' INTO STATUS_OPERACAO FROM DUAL;
        END IF;
     ELSE
        SELECT 'EXCLUIR' INTO STATUS_OPERACAO FROM DUAL;
     END IF;
  END IF;

  IF (STATUS_OPERACAO IN ('INCLUIR', 'ALTERAR', 'EXCLUIR')) THEN
      INSERT INTO PCOSMOBILE_CLIENTE
        (ID, CODIGO, STATUSOPERACAO, DATA)
      VALUES
        (CHAVETRANSACAO, :NEW.CODCLI , STATUS_OPERACAO, TRUNC(SYSDATE));
  END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_INTEGRA_OSMOBILE_PCCLIENT" ENABLE;

CREATE INDEX "AJEL"."PCCLIENT_IDX8" ON "AJEL"."PCCLIENT" ("CODUSUR2") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX10" ON "AJEL"."PCCLIENT" ("DTPROXCONTATOCOB", "CODFUNCULTCONTATOCOB") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX6" ON "AJEL"."PCCLIENT" ("CODATV1") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE UNIQUE INDEX "AJEL"."PCCLIENT_PK" ON "AJEL"."PCCLIENT" ("CODCLI") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX3" ON "AJEL"."PCCLIENT" ("CODPRACA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX1" ON "AJEL"."PCCLIENT" ("CLIENTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX2" ON "AJEL"."PCCLIENT" ("DTCADASTRO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX7" ON "AJEL"."PCCLIENT" ("CODCLIPRINC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX11" ON "AJEL"."PCCLIENT" ("DTULTCOMP", "DTEXCLUSAO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX12" ON "AJEL"."PCCLIENT" ("CODCLI", "CODPRACA", "CODATV1") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX13" ON "AJEL"."PCCLIENT" ("CODCLI", "DTCADASTRO", "DTEXCLUSAO", "CODUSUR1", "CODUSUR2") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX16" ON "AJEL"."PCCLIENT" ("CODCOB", "CODCLI") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX4" ON "AJEL"."PCCLIENT" ("MUNICENT", "ESTENT", "CODCIDADE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX17" ON "AJEL"."PCCLIENT" ("CGEENTAUX") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX19" ON "AJEL"."PCCLIENT" ("IEENT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX15" ON "AJEL"."PCCLIENT" (NVL("BLOQUEIO",'N'), LTRIM(RTRIM("OBS")), NVL("RATINGSCI",'0')) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX18" ON "AJEL"."PCCLIENT" (SUBSTR("CGEENTAUX",1,8)) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX21" ON "AJEL"."PCCLIENT" ("CGCENT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX22" ON "AJEL"."PCCLIENT" ( REGEXP_REPLACE ("CGCENT",'[./-]','')) 
  PCTFREE 10 INITRANS 2 MAXTRANS 167 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX23" ON "AJEL"."PCCLIENT" ("CODCLI", "CODCLIPRINC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE UNIQUE INDEX "AJEL"."SYS_IL0000077466C00325$$" ON "AJEL"."PCCLIENT" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" 
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX25" ON "AJEL"."PCCLIENT" ("CODCLI", "ENDERCOM", "NUMEROCOM", "BAIRROCOM", "CEPCOM", "MUNICCOM", "ESTCOM", "CODCIDADECOM", "DTULTALTER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX26" ON "AJEL"."PCCLIENT" ("DTEXCLUSAO", "CODCLI") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE UNIQUE INDEX "AJEL"."SYS_IL0000077466C00523$$" ON "AJEL"."PCCLIENT" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" 
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX20" ON "AJEL"."PCCLIENT" (TO_CHAR("CODCLI")) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX24" ON "AJEL"."PCCLIENT" (NVL("BLOQUEIODEFINITIVO",'N'), "CODCLI") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" ;
  CREATE INDEX "AJEL"."PCCLIENT_IDX5" ON "AJEL"."PCCLIENT" ("CODUSUR1") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;

COMMENT ON COLUMN AJEL.PCCLIENT.RATINGSCI IS 'Indica o rating atual.|Campo do tipo caracter, de tamanho 2. ';
COMMENT ON COLUMN AJEL.PCCLIENT.TIPOCLIMED IS 'Indicar tipo cliente, se é hospital, farmácia, etc.';
COMMENT ON COLUMN AJEL.PCCLIENT.RATINGSCI1 IS 'Indica o rating anterior.|Campo do tipo caracter, de tamanho 2. ';
COMMENT ON COLUMN AJEL.PCCLIENT.RATINGSCI2 IS 'Indica o rating registro mês anterior.|Campo do tipo caracter, de tamanho 2. ';
COMMENT ON COLUMN AJEL.PCCLIENT.USABKCNPJCODCLIPRINC IS 'Indica se em Boleta Laser (1504) ou Remessas (1501) deverá ser impresso/enviado o CNPJ do cliente principal ou do cliente da venda.';
COMMENT ON COLUMN AJEL.PCCLIENT.DTDESBLOQUEIO IS 'Indica a data em que o cliente foi desbloqueado manualmente, através da rotina 1203 - Extrato do Cliente. ';
COMMENT ON COLUMN AJEL.PCCLIENT.ACEITATROCANEGATIVA IS 'Indica se aceita pedido de troca com valor negativo. ';
COMMENT ON COLUMN AJEL.PCCLIENT.INSCESTADUAL IS 'Código da Inscrição Estadual. ';
COMMENT ON COLUMN AJEL.PCCLIENT.TIPODESCISENCAO IS 'Indica o tipo de isenção de ICMS, que pode ser: N (Não Usar)  C (Por Cliente) ou T (Por Tributação). |Campo do tipo caracter, de tamanho 1.';
COMMENT ON COLUMN AJEL.PCCLIENT.ENVIADADOSSERASA IS 'Indica se são enviados os dados do cliente para o Serasa, através da rotina 1279 - Geração de Arquivo SERASA.';
COMMENT ON COLUMN AJEL.PCCLIENT.BLOQUEIOSEFAZ IS 'Campo de status de bloqueio na SEFAZ.';
COMMENT ON COLUMN AJEL.PCCLIENT.DTVALIDASEFAZ IS 'Campo de informação da data e hora de bloqueio ou desbloqueio na SEFAZ.';
COMMENT ON COLUMN AJEL.PCCLIENT.USAIVAFONTEDIFERENCIADO IS 'Indica se o calculo do st fonte para clientes fonte st sera realizado com IVA diferenciado informado por cliente.';
COMMENT ON COLUMN AJEL.PCCLIENT.IVAFONTE IS 'Iva diferenciado para calculo de st fonte.';
COMMENT ON COLUMN AJEL.PCCLIENT.CODPRACACOB IS 'Código da praça de cobrança.';
COMMENT ON COLUMN AJEL.PCCLIENT.CODFORNECFRETE IS 'Indica o código da transportadora padrão.';
COMMENT ON COLUMN AJEL.PCCLIENT.ORGAOPUBFEDERAL IS 'Indica se o cliente é orgão public federal.';
COMMENT ON COLUMN AJEL.PCCLIENT.CODHIST IS 'Código do histórico de bloqueio.';
COMMENT ON COLUMN AJEL.PCCLIENT.CODCOBTV1 IS 'Código de cobrança boleto para venda normal.';
COMMENT ON COLUMN AJEL.PCCLIENT.CODCOBTV3 IS 'Código de cobrança boleto para venda a faturar.';
COMMENT ON COLUMN AJEL.PCCLIENT.TIPODOCUMENTO IS 'indica se para o cliente emite Nota fiscal (N), Cupom fiscal (C) ou Ambos (A).';
COMMENT ON COLUMN AJEL.PCCLIENT.DTIMPORTINTEGRACAO IS 'Data da última importação do registro na filial de destino da informação.';
COMMENT ON COLUMN AJEL.PCCLIENT.ISENTODIFALIQUOTAS IS 'Isento de difereça de alíquotas.';
COMMENT ON COLUMN AJEL.PCCLIENT.FRETEDESPACHO IS 'Frete do cliente CIF ou FOB.';
COMMENT ON COLUMN AJEL.PCCLIENT.OBSSUFRAMA IS 'Observação cliente suframa.';
COMMENT ON COLUMN AJEL.PCCLIENT.CODCNAE IS 'Indica o código nacional de atividade econômica.';
COMMENT ON COLUMN AJEL.PCCLIENT.VLFRETE IS 'Indica o valor de frete por cliente.';
COMMENT ON COLUMN AJEL.PCCLIENT.VLMAXCOBFRETE IS 'Indica o valor máximo de pedido para cobrança de frete.';
COMMENT ON COLUMN AJEL.PCCLIENT.CODREDE IS 'Indica o código da rede do cliente.';
COMMENT ON COLUMN AJEL.PCCLIENT.TIPOCUSTOTRANSF_FILIAIS IS 'Indica o tipo de custo de transferência entre Filias.';
COMMENT ON COLUMN AJEL.PCCLIENT.ATUALIZASALDOCCDESCFIN IS 'Indicar se o RCA vai receber débito\crédito no desconto financeiro.';
COMMENT ON COLUMN AJEL.PCCLIENT.OBS_ADIC IS 'Indica a observação adicional.';
COMMENT ON COLUMN AJEL.PCCLIENT.LIMCREDCPF IS 'Indica se utiliza limite de crédito por CNPJ/CPF.';
COMMENT ON COLUMN AJEL.PCCLIENT.BLOQUEIODEFINITIVO IS 'Indica o bloqueio definitivo do cliente.';
COMMENT ON COLUMN AJEL.PCCLIENT.NUMREGISTROIMUNE IS 'Número do registro do cliente.';
COMMENT ON COLUMN AJEL.PCCLIENT.INVESTIMENTO IS 'Indica se cliente é de investimento.';
COMMENT ON COLUMN AJEL.PCCLIENT.FOCO IS 'Indica se cliente é foco.';
COMMENT ON COLUMN AJEL.PCCLIENT.FOTOGRAFIASUCESSO IS 'Indica se cliente é fotografia de sucesso.';
COMMENT ON COLUMN AJEL.PCCLIENT.PDVINVESTIMENTO IS 'Indica se cliente tem PDV com investimento.';
COMMENT ON COLUMN AJEL.PCCLIENT.CONTAGEMESTOQUE IS 'Indica se cliente deve ter estoque contado.';
COMMENT ON COLUMN AJEL.PCCLIENT.PARTICIPAFUNCEP IS 'Indica se o cliente participa do FUNCEP.';
COMMENT ON COLUMN AJEL.PCCLIENT.CODPROFISSIONAL IS 'Indica o código do profissional.';
COMMENT ON COLUMN AJEL.PCCLIENT.ATENDEDOMINGO IS 'Indica se o cliente e atendido no Domingo.';
COMMENT ON COLUMN AJEL.PCCLIENT.ATENDESEGUNDA IS 'Indica se o cliente e atendido na Segunda.';
COMMENT ON COLUMN AJEL.PCCLIENT.ATENDETERCA IS 'Indica se o cliente e atendido na Terça.';
COMMENT ON COLUMN AJEL.PCCLIENT.ATENDEQUARTA IS 'Indica se o cliente e atendido na Quarta.';
COMMENT ON COLUMN AJEL.PCCLIENT.ATENDEQUINTA IS 'Indica se o cliente e atendido na Quinta.';
COMMENT ON COLUMN AJEL.PCCLIENT.ATENDESEXTA IS 'Indica se o cliente e atendido na Sexta.';
COMMENT ON COLUMN AJEL.PCCLIENT.ATENDESABADO IS 'Indica se o cliente e atendido no Sábado.';
COMMENT ON COLUMN AJEL.PCCLIENT.EMITEPVENDANFSEMDESC IS 'Indica se preço na nota fiscal sem desconto.';
COMMENT ON COLUMN AJEL.PCCLIENT.CODCLIWEB IS 'Indica o código do cliente WEB.';
COMMENT ON COLUMN AJEL.PCCLIENT.DTULTALTERSRVPRC IS 'Indica a data da ultima alteração.';
COMMENT ON COLUMN AJEL.PCCLIENT.USACRECLIFAT IS 'Indica se utiliza o crédito de cliente.';
COMMENT ON COLUMN AJEL.PCCLIENT.PERCOMFILIALBROKER IS 'Indica o percentual de comissão a ser paga pela indústria para uma filial que seja Broker.';
COMMENT ON COLUMN AJEL.PCCLIENT.PERFRETEBROKER IS 'Indica o percentual de frete pago pela indústria para uma filial que seja Broker.';
COMMENT ON COLUMN AJEL.PCCLIENT.BLOQVENDAPF IS 'Indica se as vendas para pessoa física deverão ou não ser permitidas.';
COMMENT ON COLUMN AJEL.PCCLIENT.AREALOJAM2 IS 'Indica a area loja M2.';
COMMENT ON COLUMN AJEL.PCCLIENT.PERMITEALTERCOBRANCACR IS 'Indica se é permitido alterar a cobrança de títulos deste cliente (via rotina 1211).';
COMMENT ON COLUMN AJEL.PCCLIENT.DTVALIDADECONV IS 'Indica a data de validade para uso da cobrança CONV nas vendas.';
COMMENT ON COLUMN AJEL.PCCLIENT.BLOQUEIODATACHEQ IS 'Indica se o cliete foi bloqueado pleo Datacheq.';
COMMENT ON COLUMN AJEL.PCCLIENT.COMPLEMENTOCOM IS 'Indica o complemento comercial.';
COMMENT ON COLUMN AJEL.PCCLIENT.NUMEROCOM IS 'Indica o número do endereço para comercial.';
COMMENT ON COLUMN AJEL.PCCLIENT.COMPLEMENTOCOB IS 'Indica o complemento da cobrança.';
COMMENT ON COLUMN AJEL.PCCLIENT.NUMEROENT IS 'Indica o número do endereço para entrega.';
COMMENT ON COLUMN AJEL.PCCLIENT.NUMEROCOB IS 'Indica o número do endereço para cobrança.';
COMMENT ON COLUMN AJEL.PCCLIENT.STATUSCONSULTASINTEGRA IS 'Indica o status da consulta sintegra.';
COMMENT ON COLUMN AJEL.PCCLIENT.DATACONSULTASINTEGRA IS 'Indica a data da consulta sintegra.';
COMMENT ON COLUMN AJEL.PCCLIENT.PERMINVALIDADE IS 'Percentual mínimo de validade compra.';
COMMENT ON COLUMN AJEL.PCCLIENT.DATACOLETA IS 'Data da última coleta de dados GPS realizada.';
COMMENT ON COLUMN AJEL.PCCLIENT.LONGITUDE IS 'Localização geografica.';
COMMENT ON COLUMN AJEL.PCCLIENT.LATITUDE IS 'Localização geografica.';
COMMENT ON COLUMN AJEL.PCCLIENT.SACADOELETRONICO IS 'Sacado eletrônico.';
COMMENT ON COLUMN AJEL.PCCLIENT.PERCTOLVALIDADEPRODWMS IS 'Campo para armazenar percentual de tolerância para validade de produto, os valores possíveis são: de 0% a 100%. Campo utilizado apenas quando a filial utiliza WMS.';
COMMENT ON COLUMN AJEL.PCCLIENT.ANVISA IS 'Medicamento controlado pela anvisa.';
COMMENT ON COLUMN AJEL.PCCLIENT.SUS IS 'Sistema único de saude.';
COMMENT ON COLUMN AJEL.PCCLIENT.TIPOCUSTOTRANSF_FILIALVIRTUAL IS 'Tipo do custo para transferência filial virtual.';
COMMENT ON COLUMN AJEL.PCCLIENT.GERARCREDITODEVCLI IS 'Gerar Credito de Devolução.';
COMMENT ON COLUMN AJEL.PCCLIENT.RETENCAOISS IS 'Cliente isento de ISS.';
COMMENT ON COLUMN AJEL.PCCLIENT.HORACADASTRO IS 'Hora do Cadastro.';
COMMENT ON COLUMN AJEL.PCCLIENT.CODCLIINT IS 'Receber identificador do cliente.';
COMMENT ON COLUMN AJEL.PCCLIENT.PRAZOMEDIOPLPAG IS 'Prazo médio máximo de pagamento.';
COMMENT ON COLUMN AJEL.PCCLIENT.UTILIZAPRAZOMEDIOPLPAG IS 'Utiliza prazo médio máximo de pagamento.';
COMMENT ON COLUMN AJEL.PCCLIENT.NUMALVARASUS IS 'Número alvará sus.';
COMMENT ON COLUMN AJEL.PCCLIENT.DTVENCALVARASUS IS 'Data vencimento alvará sus.';
COMMENT ON COLUMN AJEL.PCCLIENT.OBSENTREGA4 IS 'Código de bairro de Cobrança.';
COMMENT ON COLUMN AJEL.PCCLIENT.IMPORTADOCRM IS 'Cliente que foi importado do CRM..';
COMMENT ON COLUMN AJEL.PCCLIENT.SIMPLESNACIONAL IS 'Informar se o cliente é optante do simples.';
COMMENT ON COLUMN AJEL.PCCLIENT.BLOQUEIOSEFAZPED IS 'Campo para Indentificar Clientes com Pedidos Bloqueados.';
COMMENT ON COLUMN AJEL.PCCLIENT.ZONA IS 'Número da zona de visita do cliente';
COMMENT ON COLUMN AJEL.PCCLIENT.CODBAIRROENT IS 'Código do bairro Comercial.';
COMMENT ON COLUMN AJEL.PCCLIENT.CODBAIRROCOM IS 'Código de bairro de Entrega.';
COMMENT ON COLUMN AJEL.PCCLIENT.CODBAIRROCOB IS 'Código de bairro de Cobrança.';
COMMENT ON COLUMN AJEL.PCCLIENT.NUMCARTAOFIDELIDADE IS 'Número cartão fidelidade.';
COMMENT ON COLUMN AJEL.PCCLIENT.CNPJCISP IS 'CNPJ para CISP.';
COMMENT ON COLUMN AJEL.PCCLIENT.PISCOFINSCUMULATIVO IS 'PIS/COFINS Cumulativo';
COMMENT ON COLUMN AJEL.PCCLIENT.ENVIONFEEMAILCOM IS 'Envio e-mail comercial';
COMMENT ON COLUMN AJEL.PCCLIENT.VLMINIMOST IS 'Valor Mínimo para gerar contas a receber da ST';
COMMENT ON COLUMN AJEL.PCCLIENT.TIPOTRATAMENTODESCFIN IS 'Tratamento desconto financeiro';
COMMENT ON COLUMN AJEL.PCCLIENT.QTDDIASAPLICDESCFIN IS 'Qtde de dias';
COMMENT ON COLUMN AJEL.PCCLIENT.ACEITASIMILAR IS 'Aceita o envio de produtos similares';
COMMENT ON COLUMN AJEL.PCCLIENT.DTVENCALVARAANVISA IS 'Dt. venc. Alvará anvisa';
COMMENT ON COLUMN AJEL.PCCLIENT.DTVENCCRF IS 'Dt. Venc CRF';
COMMENT ON COLUMN AJEL.PCCLIENT.NUMALVARAANVISA IS 'Num. Alvará anvisa';
COMMENT ON COLUMN AJEL.PCCLIENT.NUMCRF IS 'Num. CRF';
COMMENT ON COLUMN AJEL.PCCLIENT.GERATITULOST IS 'Gerar contas à receber sep. para ST';
COMMENT ON COLUMN AJEL.PCCLIENT.PRAZOVENCST IS 'Prazo venc. de contas à receber de ST';
COMMENT ON COLUMN AJEL.PCCLIENT.AGREGARVALORSTDESCFIN IS 'Desconto financeiro sem st';
COMMENT ON COLUMN AJEL.PCCLIENT.ENVIOPDFNFE IS 'Não enviar DANFE em PDF .';
COMMENT ON COLUMN AJEL.PCCLIENT.CODPAIS IS 'Código Pais';
COMMENT ON COLUMN AJEL.PCCLIENT.USADESCFINSEPARADODESCCOM IS 'Usa deconto financeiro separado do desconto comercial';
COMMENT ON COLUMN AJEL.PCCLIENT.UTILIZAPEDCLINFE IS 'Utiliza Pedido de Cliente NFE';
COMMENT ON COLUMN AJEL.PCCLIENT.CODCONTAB IS 'Indica o código da conta contábil para o cliente.';
COMMENT ON COLUMN AJEL.PCCLIENT.DIRETORIOCONTRATO IS 'Caminho do diretório do contrato';
COMMENT ON COLUMN AJEL.PCCLIENT.DTINIVISTORIA IS 'Data de inicio das vistorias de comodato';
COMMENT ON COLUMN AJEL.PCCLIENT.PERIODVISTORIA IS 'Periodicidade das vistorias de comodato';
COMMENT ON COLUMN AJEL.PCCLIENT.DTPROXVISTORIA IS 'Data da próxima vistoria de comodato';
COMMENT ON COLUMN AJEL.PCCLIENT.CODPLPAGETICO IS 'Este campo determina o plano de pagamento a ser utilizado para itens tipo medicamentos eticos do pedido';
COMMENT ON COLUMN AJEL.PCCLIENT.CODPLPAGGENERICO IS 'Este campo determina o plano de pagamento a ser utilizado para itens tipo medicamentos genericos do pedido';
COMMENT ON COLUMN AJEL.PCCLIENT.UTILIZAPLPAGMEDICAMENTO IS 'Flag que indica se vai ou não utilizar plano de pagamento para medicamento';
COMMENT ON COLUMN AJEL.PCCLIENT.PRECOUTILIZADONFE IS 'Preço Utilizado na NF-e';
COMMENT ON COLUMN AJEL.PCCLIENT.NUMCRM IS 'Número do Conselho Regional de Medicina';
COMMENT ON COLUMN AJEL.PCCLIENT.NUMALVARARETINOICO IS 'Alvará Retinóico / Numero alvará';
COMMENT ON COLUMN AJEL.PCCLIENT.DTVENCALVARARETINOICO IS 'Alvará Retinóico / Data de Vencimento';
COMMENT ON COLUMN AJEL.PCCLIENT.USAVENDAEXPORTACAO IS 'Habilita venda para exportação';
COMMENT ON COLUMN AJEL.PCCLIENT.SENHACONVECF IS 'Senha para clientes convênio do varejo';
COMMENT ON COLUMN AJEL.PCCLIENT.ISENCAOSUFRAMA IS 'Isenção Suframa';
COMMENT ON COLUMN AJEL.PCCLIENT.REGISTROIBAMA IS 'Nr Registro IBAMA';
COMMENT ON COLUMN AJEL.PCCLIENT.DTVALIDADEIBAMA IS 'Data validade IBAMA';
COMMENT ON COLUMN AJEL.PCCLIENT.USADESCONTOICMS IS 'Desconto ICMS';
COMMENT ON COLUMN AJEL.PCCLIENT.CODGLN IS 'Código GLN';
COMMENT ON COLUMN AJEL.PCCLIENT.TIPOATIVCLI IS 'Este campo é referente ao ramo de atividade do CNAE';
COMMENT ON COLUMN AJEL.PCCLIENT.CODPLPAGAGRUPAUTOMATIC IS 'Código Plano Pagamento Padrão para Agrupamento Agendado';
COMMENT ON COLUMN AJEL.PCCLIENT.PERIODICIDADEAGRUP IS 'Periodicidade do Agrupamento Agendado';
COMMENT ON COLUMN AJEL.PCCLIENT.DTULTAGRUPAMENTO IS 'Data do Último Agrupamento Agendado';
COMMENT ON COLUMN AJEL.PCCLIENT.TIPOVENDA IS 'Define o tipo de venda "Varejo" "Atacado"';
COMMENT ON COLUMN AJEL.PCCLIENT.TAXABOLETONF IS 'Cobrar taxa de boleto pelo método de agrup.títulos no financ.';
COMMENT ON COLUMN AJEL.PCCLIENT.TURNOENTREGA IS 'Define o turno de entrega do pedido do cliente';
COMMENT ON COLUMN AJEL.PCCLIENT.NOMEFARMACEUTICO IS 'Campo que define o nome do farmacêutico';
COMMENT ON COLUMN AJEL.PCCLIENT.NUMALVARAESPEC IS 'Campo que define o número do Alvará Especial';
COMMENT ON COLUMN AJEL.PCCLIENT.IDINTEGRACAOMYFROTA IS 'Identifica a integração com My Frota.';
COMMENT ON COLUMN AJEL.PCCLIENT.PERDESMAXPONDERADO IS 'Percentual de desconto ponderado do cliente.';
COMMENT ON COLUMN AJEL.PCCLIENT.EMPRESACONVENIADA IS 'Empresa Conveniada.';
COMMENT ON COLUMN AJEL.PCCLIENT.DIAFECHACONVENIO IS 'Dia de fechamento do convênio.';
COMMENT ON COLUMN AJEL.PCCLIENT.QTDIASCARENCIACONV IS 'Carência do convênio.';
COMMENT ON COLUMN AJEL.PCCLIENT.DTPROXDESDAGENDADO IS 'Data do Proximo Desdobramento Agendado.';
COMMENT ON COLUMN AJEL.PCCLIENT.APLICREDBASEICMSTRANSP IS 'Aplica Redução na Base ICMS de Transporte';
COMMENT ON COLUMN AJEL.PCCLIENT.UTILIZACALCULOSTMT IS 'Usa novo cálculo de ST para MT';
COMMENT ON COLUMN AJEL.PCCLIENT.TPCOMUNICADOSERASA IS 'Indicativo do Tipo de Comunicado ao Devedor.';
COMMENT ON COLUMN AJEL.PCCLIENT.SERASAGERENCIE IS 'Definir se o cliente esta incluso no sistema Gerencie SERASA.';
COMMENT ON COLUMN AJEL.PCCLIENT.DTSERASAGERENCIE IS 'Definir a data de inclusão do cliente no sistema gerencie Serasa.';
COMMENT ON COLUMN AJEL.PCCLIENT.PRAZOSERASAGERENCIE IS 'O prazo de monitoramento feito pelo sistema gerencie Serasa.';
COMMENT ON COLUMN AJEL.PCCLIENT.DESCONSVALIDASEFAZ IS 'Desconsiderar Validações do cliente junto a sefaz.';
COMMENT ON COLUMN AJEL.PCCLIENT.USADEBCREDRCA IS 'Usa débito e crédito de RCA no momento da venda.';
COMMENT ON COLUMN AJEL.PCCLIENT.ORGAOPUBMUNICIPAL IS 'Define se o cliente é orgão público múnicipal em atendimento a  Lei Federal nº 9.718.';
COMMENT ON COLUMN AJEL.PCCLIENT.CODBAIRRODELIV IS 'Rota de entrega para cliente.';
COMMENT ON COLUMN AJEL.PCCLIENT.CODCIDADECOM IS 'Cidade IBGE';
COMMENT ON COLUMN AJEL.PCCLIENT.RECEBERBOLETOPOREMAIL IS 'BOLETO, EMAIL';
COMMENT ON COLUMN AJEL.PCCLIENT.DIAFATURAR IS 'Dia do mês para iniciar faturamento.';
COMMENT ON COLUMN AJEL.PCCLIENT.CODPROMOCAOMED IS 'Cód. Promoção Med. Padrão';
COMMENT ON COLUMN AJEL.PCCLIENT.NILPLPAGSOBREPOEPLPAGDISTRIB IS 'Plano de pagamento do cliente sobrepõe Plano pagamento da distribuição';
COMMENT ON COLUMN AJEL.PCCLIENT.DTULTALTER1203 IS 'Data da ultima alteração da 1203';
COMMENT ON COLUMN AJEL.PCCLIENT.CODFUNCULTALTER1203 IS 'Código do funcionario que realizou a ultima alteração na 1203';
COMMENT ON COLUMN AJEL.PCCLIENT.PARTICIPAFARMACIAPOPULAR IS 'Se o cliente participa da Farmácia Popular.';
COMMENT ON COLUMN AJEL.PCCLIENT.TV10USACUSTOPRODUTO IS 'Utilizar custo p/ TV10 do cadastro do produto';
COMMENT ON COLUMN AJEL.PCCLIENT.USASEGURO IS 'Define se o cliente usa seguro ou não';
COMMENT ON COLUMN AJEL.PCCLIENT.TIPOSEGURO IS 'Define o tipo de seguro Valor(V) ou Percentual(P)';
COMMENT ON COLUMN AJEL.PCCLIENT.USAREGIMEESPISENSTFONTE IS 'Possui Regime Especial Isenção ST Fonte';
COMMENT ON COLUMN AJEL.PCCLIENT.EMAILCOB IS 'E-mail utilizado para cobranças';
COMMENT ON COLUMN AJEL.PCCLIENT.NOTIFICACAOTGI IS 'Tipo notificação do cliente com a integração TGI';
COMMENT ON COLUMN AJEL.PCCLIENT.CODFUNCANALISECRED IS 'Matricula do funcionário que solicitou a análise do crédito';
COMMENT ON COLUMN AJEL.PCCLIENT.IDENTIFICESTRANG IS 'Campo para cadastro da Documentação de cliente, caso o mesmo seja Estrangeiro';
COMMENT ON COLUMN AJEL.PCCLIENT.TIPOCUSTOMANIF IS 'Define o tipo de preço que será utilizado para os iens na venda manifesto';
COMMENT ON COLUMN AJEL.PCCLIENT.DIALIMITFATU IS 'Dia Limite para Faturar';
COMMENT ON COLUMN AJEL.PCCLIENT.ACIONAMENTOCLIENTE IS 'Este campo determina o plano de pagamento a ser utilizado para itens tipo medicamentos eticos do pedido';
COMMENT ON COLUMN AJEL.PCCLIENT.PAGCHEQUEMORADIA IS 'Define se o cliente faz pagamento usando cheque moradia';
COMMENT ON COLUMN AJEL.PCCLIENT.USATDE IS 'Usa TDE no cálculo do Frete';
COMMENT ON COLUMN AJEL.PCCLIENT.CODUSURECOMMERCE IS 'RCA e-commerce Unilever';
COMMENT ON COLUMN AJEL.PCCLIENT.PERMITIRAGRUPARTITULO IS 'Permitir agurpar titulos do cliente.';
COMMENT ON COLUMN AJEL.PCCLIENT.NUMDIASPROTESTO IS 'Campo utilizado para informar a quantidade de dias de protesto na geração da remessa.';
COMMENT ON COLUMN AJEL.PCCLIENT.TIPODIAUTILROTA IS 'Tipo dia útil para geração da rota';
COMMENT ON COLUMN AJEL.PCCLIENT.LIMITECREDSUPPLI IS 'Limite de credito suppliercard';
COMMENT ON COLUMN AJEL.PCCLIENT.CODROTAINSERVIVEL IS 'Rota de entrega inservível';
COMMENT ON COLUMN AJEL.PCCLIENT.PRAZOENTREGACARCACA IS 'Prazo para devolução de Carcaça (dias)';
COMMENT ON COLUMN AJEL.PCCLIENT.PROXNUMSEQEND IS 'Próximo código sequencial de identificação de endereço';
COMMENT ON COLUMN AJEL.PCCLIENT.DTSYNCPATHFIND IS 'Indica a Data de Sincronização com o Path Find';
COMMENT ON COLUMN AJEL.PCCLIENT.ACEITAPEDMONTPATHFIND IS 'Indica se o cliente aceita enviar pedido montado para a integração para o Path Find';
COMMENT ON COLUMN AJEL.PCCLIENT.ACEITAINSERIRPRODUTOAUT IS 'Permite Inserir Item no Pedido de Forma Automática';
COMMENT ON COLUMN AJEL.PCCLIENT.COZINHAINDUSTRIAL IS 'Define se o cliente é cozinha industrial';
COMMENT ON COLUMN AJEL.PCCLIENT.TV1OBRIGATORIOTV5 IS 'Define se é obrigatório informar um TV para pedidos TV5';
COMMENT ON COLUMN AJEL.PCCLIENT.TIPODOCUMENTOENTREGAFUTURA IS 'Tipo de documento para entrega futura';
COMMENT ON COLUMN AJEL.PCCLIENT.CRF IS 'CRF suppliercard - Parametrização de faturamento.';
COMMENT ON COLUMN AJEL.PCCLIENT.EMAILNFE IS 'E-mail para nota fiscal eletronica.';
COMMENT ON COLUMN AJEL.PCCLIENT.QTDIASVENCLIMCRED IS 'Qtd dias vencto limite crédito';
COMMENT ON COLUMN AJEL.PCCLIENT.INCIDENCIACPRB IS 'Incidencia de CPRB';
COMMENT ON COLUMN AJEL.PCCLIENT.PERCREDICMS IS 'Indica o percentual de redução da base de ICMS';
COMMENT ON COLUMN AJEL.PCCLIENT.MOTIVOBLOQ IS 'Motivo detalhado do bloqueio do cliente.';
COMMENT ON COLUMN AJEL.PCCLIENT.PERCFRETEAUTON IS 'Frete Autônomo';
COMMENT ON COLUMN AJEL.PCCLIENT.USAREGIMEESPISENREDICMS IS 'Possui Regime Especial Isenção Redução ICMS';
COMMENT ON COLUMN AJEL.PCCLIENT.CHECKINAPP IS 'Data do check in no APP';
COMMENT ON COLUMN AJEL.PCCLIENT.IDSOFITVIEW IS 'Indica o código do cliente na SofitView';
COMMENT ON COLUMN AJEL.PCCLIENT.DTULTALTERSOFITVIEW IS 'Indica a data que o cliente foi integrado com a SofitView';
COMMENT ON COLUMN AJEL.PCCLIENT.DTEXCLUSAOSOFITVIEW IS 'Indica a data que o cliente foi inativado na SofitView';
COMMENT ON COLUMN AJEL.PCCLIENT.CODCLASSE_DMS IS 'Código da classe de viabilidade DMS - Unilever';
COMMENT ON COLUMN AJEL.PCCLIENT.CLIEXCLUSIVO_DMS IS 'liente Exclusivo DMS - Unilever';
COMMENT ON COLUMN AJEL.PCCLIENT.CODGRUPO_DMS IS 'Código do grupo economico DMS - Unilever';
COMMENT ON COLUMN AJEL.PCCLIENT.CODCANAL_DMS IS 'Código do canal DMS - Unilever';
COMMENT ON COLUMN AJEL.PCCLIENT.CODSEGMENTACAO_DMS IS 'Código de segmentação DMS - Unilever';
COMMENT ON COLUMN AJEL.PCCLIENT.CODTIPONEGOCIO_DMS IS 'Código do tipo de negocio DMS - Unilever';
COMMENT ON COLUMN AJEL.PCCLIENT.ENVIARCADINTEGRA_DMS IS 'Enviar cadastro para integração DMS - Unilever';
COMMENT ON COLUMN AJEL.PCCLIENT.CODHOLDIN_DMS IS 'Código de holdin DMS - Unilever';
COMMENT ON COLUMN AJEL.PCCLIENT.CODBANDEIRA_DMS IS 'Código de bandeira DMS - Unilever';
COMMENT ON COLUMN AJEL.PCCLIENT.FREQVISITA_DMS IS 'Frequencia de visita DMS - Unilever';
COMMENT ON COLUMN AJEL.PCCLIENT.CODTIPOVENDA_DMS IS 'Código Do tipo de venda DMS - Unilever';
COMMENT ON COLUMN AJEL.PCCLIENT.CLIMEIOPTANTESN IS 'Indica se o cliente MEI é optante do simples nacional.';
COMMENT ON COLUMN AJEL.PCCLIENT.POSSUIBENFFISCAL IS 'Possui BenefÍcio Fiscal';
COMMENT ON COLUMN AJEL.PCCLIENT.RAZAORECEBEDORENDENT IS 'Razão Social';
COMMENT ON COLUMN AJEL.PCCLIENT.CEPRECEBEDORENDENT IS 'CEP Recebedor';
COMMENT ON COLUMN AJEL.PCCLIENT.IERECEBEDORENDENT IS 'IE Recebedor';
COMMENT ON COLUMN AJEL.PCCLIENT.FONERECEBEDORENDENT IS 'Telefone Recebedor';
COMMENT ON COLUMN AJEL.PCCLIENT.CODPAISRECEBEDORENDENT IS 'Codigo Pais';
COMMENT ON COLUMN AJEL.PCCLIENT.EMAILRECEBEDORENDENT IS 'E-mail';
COMMENT ON COLUMN AJEL.PCCLIENT.QTDIASAVENCERPRODUTO IS 'Dias vencimento do produto';
COMMENT ON COLUMN AJEL.PCCLIENT.CODCONDCOMERCIAL IS 'Código da Condição Comercial (Indústria)';
COMMENT ON COLUMN AJEL.PCCLIENT.CODGRUPOCOMERCIALMED IS 'Codigo do grupo comercial';
COMMENT ON COLUMN AJEL.PCCLIENT.CODCAMINHOENTREGAMED IS 'Codigo do caminho de entrega';
COMMENT ON COLUMN AJEL.PCCLIENT.CODMOTIVO_DMS IS 'Código de Motivo de encerramento - DMS Unilever';
COMMENT ON COLUMN AJEL.PCCLIENT.CODROTINAALT IS 'Código da rotina que alterou o registro';
COMMENT ON COLUMN AJEL.PCCLIENT.AGREGARIPIBASEICMS IS 'Agregar Valor de IPI na Base de ICMS';
COMMENT ON COLUMN AJEL.PCCLIENT.RETECAOIRORGPUB IS 'Retenção Imp. Renda ref. desc. fin. Bx.Cr. para Órg.Público';
COMMENT ON COLUMN AJEL.PCCLIENT.RETECAOCSORGPUB IS 'Retenção Cont. Social ref. desc. fin. Bx.Cr. para Órg.Público';
COMMENT ON COLUMN AJEL.PCCLIENT.RETECAOPISORGPUB IS 'Retenção PIS ref. desc. fin. Bx.Cr. para Órg.Público';
COMMENT ON COLUMN AJEL.PCCLIENT.RETECAOCOFINSORGPUB IS 'Retenção COFINS ref. desc. fin. Bx.Cr. para Órg.Público';
COMMENT ON COLUMN AJEL.PCCLIENT.RETECAOICMSSTORGPUB IS 'Retenção ICMS Retido(ST) ref. desc. fin. Bx.Cr. para Órg.Público';
COMMENT ON COLUMN AJEL.PCCLIENT.RETECAOOUTDEDORGPUB IS 'Retenção Outras Deduções ref. desc. fin. Bx.Cr. para Órg.Público';
COMMENT ON COLUMN AJEL.PCCLIENT.CLIENTEMAISNEGOCIOS IS 'Cliente Mais Negócios';
COMMENT ON COLUMN AJEL.PCCLIENT.DATAHORACONSULTAMAISNEGOCIOS IS 'Data consulta no Mais Negócio';
COMMENT ON COLUMN AJEL.PCCLIENT.PERMITEFATURARAPRAZOMAISNEG IS 'Permite Venda a Prazo Mais Negócios';
COMMENT ON COLUMN AJEL.PCCLIENT.LIMITELIBERADOMAISNEG IS 'Limite Liberado Venda Mais Negócios';
COMMENT ON COLUMN AJEL.PCCLIENT.STATUSMAISNEG IS 'Status Mais Negócios';
COMMENT ON COLUMN AJEL.PCCLIENT.GERAGRPRETTRIB IS 'Gerar Grupo Retenções de Tributos  no XML';



-- AJEL.PCBARRA definition

CREATE TABLE "AJEL"."PCBARRA" 
   (	"CODPROD" NUMBER(6,0) NOT NULL ENABLE, 
	"CODBARRA" NUMBER(20,0) NOT NULL ENABLE, 
	"DTULTALT" DATE, 
	"CODFUNCALT" NUMBER(8,0), 
	"DTCADASTRO" DATE, 
	"CODFUNCCAD" NUMBER(8,0), 
	"DTEXCLUSAO" DATE, 
	"CODFUNCEXCLUSAO" NUMBER(8,0), 
	 CONSTRAINT "PCBARRA_PK" PRIMARY KEY ("CODPROD", "CODBARRA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" ;

CREATE UNIQUE INDEX "AJEL"."PCBARRA_PK" ON "AJEL"."PCBARRA" ("CODPROD", "CODBARRA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;


  -- AJEL.PCEST definition

CREATE TABLE "AJEL"."PCEST" 
   (	"CODFILIAL" VARCHAR2(2) NOT NULL ENABLE, 
	"CODPROD" NUMBER(6,0) DEFAULT NULL NOT NULL ENABLE, 
	"QTEST" NUMBER(22,8), 
	"ESTMIN" NUMBER(16,3), 
	"DTULTENT" DATE, 
	"DTULTSAIDA" DATE, 
	"QTVENDMES" NUMBER(16,3) DEFAULT 0, 
	"QTVENDMES1" NUMBER(16,3) DEFAULT 0, 
	"QTVENDMES2" NUMBER(16,3) DEFAULT 0, 
	"QTVENDMES3" NUMBER(16,3) DEFAULT 0, 
	"QTPERDADIA" NUMBER(16,3) DEFAULT 0, 
	"QTPERDAMES" NUMBER(16,3) DEFAULT 0, 
	"VLVENDMES" NUMBER(12,2) DEFAULT 0, 
	"QTVENDDIA" NUMBER(16,3) DEFAULT 0, 
	"VLVENDDIA" NUMBER(12,2) DEFAULT 0, 
	"QTPEDIDA" NUMBER(16,3) DEFAULT 0, 
	"VLCUSTODIAREAL" NUMBER(12,2) DEFAULT 0, 
	"VLCUSTOMESREAL" NUMBER(12,2) DEFAULT 0, 
	"VLCUSTODIAFIN" NUMBER(12,2) DEFAULT 0, 
	"VLCUSTOMESFIN" NUMBER(12,2) DEFAULT 0, 
	"QTESTANT" NUMBER(16,3) DEFAULT 0, 
	"PCUSTOANT" NUMBER(18,6) DEFAULT 0, 
	"QTRESERV" NUMBER(22,8) DEFAULT 0, 
	"QTULTENT" NUMBER(16,3) DEFAULT 0, 
	"CUSTOULTENT" NUMBER(18,6) DEFAULT 0, 
	"QTESTGER" NUMBER(22,8) DEFAULT 0, 
	"QTENTDIA" NUMBER(16,3) DEFAULT 0, 
	"QTENTMES" NUMBER(16,3) DEFAULT 0, 
	"VLVENDDIAREAL" NUMBER(12,2) DEFAULT 0, 
	"VLVENDMESREAL" NUMBER(12,2) DEFAULT 0, 
	"CUSTOCONT" NUMBER(18,6) DEFAULT 0, 
	"QTBLOQUEADA" NUMBER(20,6) DEFAULT 0, 
	"FIMESTOQUE" VARCHAR2(1), 
	"QTINDENIZ" NUMBER(20,6) DEFAULT 0, 
	"QTULTINVENT" NUMBER(16,3) DEFAULT 0, 
	"QTVENDAPERDIDA" NUMBER(16,3) DEFAULT 0, 
	"CUSTOREAL" NUMBER(18,6) DEFAULT 0, 
	"CUSTOFIN" NUMBER(18,6) DEFAULT 0, 
	"CUSTOREP" NUMBER(18,6) DEFAULT 0, 
	"VALORULTENT" NUMBER(18,6), 
	"QTBLOQTRANSF" NUMBER(16,3), 
	"QTPENDENTE" NUMBER(16,3) DEFAULT 0, 
	"QTVENDSEMANA" NUMBER(16,3), 
	"QTVENDSEMANA1" NUMBER(16,3), 
	"QTVENDSEMANA2" NUMBER(16,3), 
	"QTVENDSEMANA3" NUMBER(16,3), 
	"QTGIRODIA" NUMBER(16,3), 
	"PERCEVOLUCAOVENDA" NUMBER(12,4), 
	"VLVENDMESANT" NUMBER(14,2), 
	"VLCUSTOMESFINANT" NUMBER(14,2), 
	"VLCUSTOMESREALANT" NUMBER(14,2), 
	"NUMNOTAULTENT" NUMBER(10,0), 
	"PCOMPRAULTENT" NUMBER(18,6), 
	"VLSTULTENT" NUMBER(18,6), 
	"MODULO" NUMBER(2,0), 
	"RUA" NUMBER(4,0), 
	"APTO" NUMBER(4,0), 
	"DTULTINVENT" DATE, 
	"CUSTODOLAR" NUMBER(18,6) DEFAULT '0', 
	"CUSTOULTENTMED" NUMBER(18,6), 
	"VALORULTENTMED" NUMBER(18,6), 
	"QTRESERVMED" NUMBER(16,3), 
	"QTREQUISICAO" NUMBER(16,3), 
	"CUSTOREALSEMST" NUMBER(18,6), 
	"DTULTPEDCOMPRA" DATE, 
	"CUSTOULTPEDCOMPRA" NUMBER(18,6), 
	"CUSTOULTENTFIN" NUMBER(18,6), 
	"DTULTDESDOBRA" DATE, 
	"CORREDOR" NUMBER(4,0), 
	"QTLOJA" NUMBER(20,8), 
	"BASEBCR" NUMBER(18,6), 
	"STBCR" NUMBER(18,6), 
	"CUSTOPROXIMACOMPRA" NUMBER(18,6), 
	"NUMTRANSENTULTENT" NUMBER(10,0), 
	"CUSTOULTENTANT" NUMBER(18,6), 
	"MOTIVOBLOQESTOQUE" VARCHAR2(80), 
	"CODDEVOL" NUMBER(4,0), 
	"QTDEVOLMES" NUMBER(16,3) DEFAULT '0', 
	"QTDEVOLMES1" NUMBER(16,3) DEFAULT '0', 
	"QTDEVOLMES2" NUMBER(16,3) DEFAULT '0', 
	"QTDEVOLMES3" NUMBER(16,3) DEFAULT '0', 
	"ESTMAX" NUMBER(16,3), 
	"VLULTENTCONTSEMST" NUMBER(18,6) DEFAULT '0', 
	"CUSTOULTENTLIQ" NUMBER(18,6) DEFAULT '0', 
	"CUSTOREALLIQ" NUMBER(18,6) DEFAULT '0', 
	"MODULOCX" NUMBER(2,0), 
	"RUACX" NUMBER(4,0), 
	"APTOCX" NUMBER(4,0), 
	"DTULTFAT" DATE, 
	"VLULTPCOMPRA" NUMBER(18,6), 
	"ESTIDEAL" NUMBER(16,3), 
	"DTULTALTERSRVPRC" DATE, 
	"DTPRIMCOMPRA" DATE, 
	"CUSTONFSEMST" NUMBER(18,6), 
	"BASEICMSULTENT" NUMBER(18,6), 
	"CUSTOULTENTCONT" NUMBER(18,6), 
	"QTTRANSITO" NUMBER(22,8), 
	"VLSTULTENTTAB" NUMBER(18,6), 
	"VLSTGUIAULTENTTAB" NUMBER(18,6), 
	"CUSTONFSEMSTTAB" NUMBER(18,6), 
	"CUSTONFSEMSTGUIAULTENTTAB" NUMBER(18,6), 
	"IVAULTENTTAB" NUMBER(8,4), 
	"ALIQICMS1ULTENTTAB" NUMBER(12,4), 
	"ALIQICMS2ULTENTTAB" NUMBER(12,4), 
	"REDBASEIVAULTENTTAB" NUMBER(18,6), 
	"PERCICMSFRETEFOBSTULTENTTAB" NUMBER(12,4), 
	"VLFRETECONHECULTENTTAB" NUMBER(18,6), 
	"PERCALIQEXTGUIAULTENTTAB" NUMBER(12,4), 
	"VLSTGUIAULTENT" NUMBER(18,6), 
	"CUSTONFSEMSTGUIAULTENT" NUMBER(18,6), 
	"IVAULTENT" NUMBER(8,4), 
	"ALIQICMS1ULTENT" NUMBER(12,4), 
	"ALIQICMS2ULTENT" NUMBER(12,4), 
	"REDBASEIVAULTENT" NUMBER(18,6), 
	"PERCICMSFRETEFOBSTULTENT" NUMBER(12,4), 
	"VLFRETECONHECULTENT" NUMBER(18,6), 
	"PERCALIQEXTGUIAULTENT" NUMBER(12,4), 
	"BASEICMSULTENTTAB" NUMBER(18,6), 
	"DTALTERACAO1107" DATE, 
	"DTEMISSAOULTENT" DATE, 
	"ROTINALANC" VARCHAR2(48), 
	"PERCMVAORIGULTENT" NUMBER(12,4), 
	"PERCMVAORIGTAB" NUMBER(12,4), 
	"ASSINATURA" VARCHAR2(255), 
	"QTESTORNOPRODUZDIA" NUMBER(22,8), 
	"QTESTORNOPRODUZMES" NUMBER(22,8), 
	"QTPRODUZIDADIA" NUMBER(22,8), 
	"QTPRODUZIDAMES" NUMBER(22,8), 
	"CUSTOFORNEC" NUMBER(12,6), 
	"QTGIROCURVATURA" NUMBER(16,3), 
	"QTGIROCURVATURAANT" NUMBER(16,3), 
	"QTFRENTELOJA" NUMBER(22,6), 
	"NUMFCI" VARCHAR2(36), 
	"VLPARCELAIMPFCI" NUMBER(18,6), 
	"PERCCONTEUDOIMPFCI" NUMBER(5,2), 
	"VLIMPORTACAOFCI" NUMBER(18,6), 
	"CUSTOFORNECSEMST" NUMBER(18,6), 
	"CUSTOPROXIMACOMPRASEMST" NUMBER(18,6), 
	"CUSTOFINSEMST" NUMBER(18,6), 
	"CUSTOULTENTFINSEMST" NUMBER(18,6), 
	"CUSTOULTENTSEMST" NUMBER(18,6), 
	"CUSTOULTPEDCOMPRASEMST" NUMBER(18,6), 
	"BASEIPIULTENT" NUMBER(18,6), 
	"VLIPIULTENT" NUMBER(18,6), 
	"PERCIPIULTENT" NUMBER(18,6), 
	"QTTRANSITOTV13" NUMBER(22,8), 
	"CODCEST" VARCHAR2(7), 
	"IDENTIFICADOR" NUMBER(16,0), 
	"TEMESTOQUEECOMMERCE" VARCHAR2(1), 
	"QTINDUSTRIA" NUMBER(20,6) DEFAULT '0', 
	"VLFCPICMSULTENTTAB" NUMBER(18,6), 
	"VLFCPSTULTENTTAB" NUMBER(18,6), 
	"VLBASEFCPSTULTENTTAB" NUMBER(18,6), 
	"VLBCFCPSTRET" NUMBER(18,6), 
	"PERFCPSTRET" NUMBER(12,4), 
	"VLFCPSTRET" NUMBER(18,6), 
	"PERCREDBASEEFET" NUMBER(8,4), 
	"VLBASEEFET" NUMBER(18,6), 
	"PERCICMSEFET" NUMBER(8,4), 
	"VLICMSEFET" NUMBER(18,6), 
	"NUMTRANSULTENTET" NUMBER(10,0), 
	"NUMTRANSULTENTED" NUMBER(10,0), 
	"ALIQICMS1" NUMBER(12,4), 
	"NUMTRANSULTENTST" NUMBER(16,0), 
	"ESTBONIFIC" VARCHAR2(1), 
	"VLICMSBCR" NUMBER(18,6), 
	"BASEICMSBCR" NUMBER(18,6), 
	"NUMTRANSENTULTENTBNF" NUMBER(12,0), 
	"TIPOCURVA" VARCHAR2(1), 
	"CURVA" VARCHAR2(250), 
	"SUBCURVA" VARCHAR2(250), 
	"FREQUENCIA" VARCHAR2(250), 
	"QTCROSSDOCK" NUMBER(22,8), 
	"QTESTOQUEEMTERCEIRO" NUMBER(22,8), 
	"QTESTOQUEDETERCEIRO" NUMBER(22,8), 
	"QTTRANSITOTV10" NUMBER(22,8), 
	"DTHORAULTSAIDA" DATE, 
	"DTHORAULTALTDISP" DATE, 
	"NUMERO" NUMBER(9,2), 
	"NUMEROCX" NUMBER(9,2), 
	 CONSTRAINT "PCEST_PK" PRIMARY KEY ("CODFILIAL", "CODPROD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" ;

CREATE OR REPLACE TRIGGER "AJEL"."GRAVAR_PCLOGESTOQUE" 
  BEFORE INSERT OR UPDATE ON PCEST
  FOR EACH ROW
DECLARE
  VSMAQUINA     VARCHAR2(80);
  VSUSUARIO     VARCHAR2(80);
  VSPROGRAMA    VARCHAR2(80);
  VSCLIENT_INFO VARCHAR(100);
BEGIN

  -- Na decisao estava dando erro trazendo mais de um registro para a mesma sessao, por isso a
  -- utilização do rownum. Se a alteração for disparada por um usuário com permissão de sysdba
  -- ou for um job cadastrado por este usuário, o USERENV('SESSIONID') deste usuário é null.

  VSMAQUINA  := SUBSTR(SYS_CONTEXT('USERENV', 'TERMINAL'), 1, 80);
  VSUSUARIO  := SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 80);
  VSPROGRAMA := SUBSTR(SYS_CONTEXT('USERENV', 'MODULE'), 1, 80);

  IF VSPROGRAMA IS NULL THEN
    VSPROGRAMA := 'Client do oracle desatualizado';
  END IF;

  DBMS_APPLICATION_INFO.READ_CLIENT_INFO(VSCLIENT_INFO);

  IF ((VSPROGRAMA NOT LIKE '%PCSIS552%') OR
     ((VSPROGRAMA LIKE '%PCSIS552%') AND
     ((:OLD.QTBLOQUEADA <> :NEW.QTBLOQUEADA) OR
     (:OLD.CUSTONFSEMST <> :NEW.CUSTONFSEMST) OR
     (:NEW.CUSTOFIN <> :OLD.CUSTOFIN)))) AND

     ((VSPROGRAMA NOT LIKE '%PCSIS506%') OR
     ((VSPROGRAMA LIKE '%PCSIS506%') AND
     ((:OLD.QTVENDMES <> :NEW.QTVENDMES)))) THEN
    INSERT INTO PCLOGESTOQUE
      (CODPROD,
       CODFILIAL,
       DATA,
       QTESTGERANT,
       QTESTGER,
       QTESTANT,
       QTEST,
       QTRESERVANT,
       QTRESERV,
       QTBLOQUEADAANT,
       QTBLOQUEADA,
       QTINDENIZANT,
       QTINDENIZ,
       QTPENDENTEANT,
       QTPENDENTE,
       QTPEDIDAANT,
       QTPEDIDA,
       PROGRAMA,
       USUARIO,
       MAQUINA,
       CUSTOCONT,
       CUSTOCONT_ANT,
       CUSTODOLAR,
       CUSTODOLAR_ANT,
       CUSTOFIN,
       CUSTOFIN_ANT,
       CUSTOREAL,
       CUSTOREAL_ANT,
       CUSTOREALSEMST,
       CUSTOREALSEMST_ANT,
       CUSTOREP,
       CUSTOREP_ANT,
       CUSTOULTENT,
       CUSTOULTENT_ANT,
       CUSTOULTENTFIN,
       CUSTOULTENTFIN_ANT,
       QTVENDADIA,
       QTVENDADIAANT,
       QTVENDAMES,
       QTVENDAMESANT,
       CUSTONFSEMST_ANT,
       CUSTONFSEMST,
       OBSAPLICACAO,
       OBSAPLICACAO_ANT,
       VALORULTENT,
       VALORULTENT_ANT,
       VLULTENTCONTSEMST,
       VLULTENTCONTSEMST_ANT,
       CUSTOULTENTCONT,
       CUSTOULTENTCONT_ANT,
       QTTRANSITO,
       QTTRANSITO_ANT,
       QTTRANSITOTV13,
       QTTRANSITOTV13_ANT,
       QTFRENTELOJA,
       QTFRENTELOJAANT,
       QTINDUSTRIA,
       QTINDUSTRIAANT,
       ESTBONIFIC,
       ESTBONIFICANT,
       IDENTIFICADOR,
       QTESTOQUEEMTERCEIRO,
       QTESTOQUEEMTERCEIRO_ANT,
       QTESTOQUEDETERCEIRO,
       QTESTOQUEDETERCEIRO_ANT,
       QTTRANSITOTV10,
       QTTRANSITOTV10_ANT)
    VALUES
      (:NEW.CODPROD,
       :NEW.CODFILIAL,
       SYSDATE,
       :OLD.QTESTGER,
       :NEW.QTESTGER,
       :OLD.QTEST,
       :NEW.QTEST,
       :OLD.QTRESERV,
       :NEW.QTRESERV,
       :OLD.QTBLOQUEADA,
       :NEW.QTBLOQUEADA,
       :OLD.QTINDENIZ,
       :NEW.QTINDENIZ,
       :OLD.QTPENDENTE,
       :NEW.QTPENDENTE,
       :OLD.QTPEDIDA,
       :NEW.QTPEDIDA,
       SUBSTR(VSPROGRAMA, 1, 80),
       VSUSUARIO,
       VSMAQUINA,
       :NEW.CUSTOCONT,
       :OLD.CUSTOCONT,
       :NEW.CUSTODOLAR,
       :OLD.CUSTODOLAR,
       :NEW.CUSTOFIN,
       :OLD.CUSTOFIN,
       :NEW.CUSTOREAL,
       :OLD.CUSTOREAL,
       :NEW.CUSTOREALSEMST,
       :OLD.CUSTOREALSEMST,
       :NEW.CUSTOREP,
       :OLD.CUSTOREP,
       :NEW.CUSTOULTENT,
       :OLD.CUSTOULTENT,
       :NEW.CUSTOULTENTFIN,
       :OLD.CUSTOULTENTFIN,
       :NEW.QTVENDDIA,
       :OLD.QTVENDDIA,
       :NEW.QTVENDMES,
       :OLD.QTVENDMES,
       :OLD.CUSTONFSEMST,
       :NEW.CUSTONFSEMST,
       SUBSTR(VSCLIENT_INFO, 1, 200),
       NULL,
       :NEW.VALORULTENT,
       :OLD.VALORULTENT,
       :NEW.VLULTENTCONTSEMST,
       :OLD.VLULTENTCONTSEMST,
       :NEW.CUSTOULTENTCONT,
       :OLD.CUSTOULTENTCONT,
       :NEW.QTTRANSITO,
       :OLD.QTTRANSITO,
       :NEW.QTTRANSITOTV13,
       :OLD.QTTRANSITOTV13,
       :NEW.QTFRENTELOJA,
       :OLD.QTFRENTELOJA,
       :NEW.QTINDUSTRIA,
       :OLD.QTINDUSTRIA,
       :NEW.ESTBONIFIC,
       :OLD.ESTBONIFIC,
       :NEW.IDENTIFICADOR,
       :NEW.QTESTOQUEEMTERCEIRO,
       :OLD.QTESTOQUEEMTERCEIRO,
       :NEW.QTESTOQUEDETERCEIRO,
       :OLD.QTESTOQUEDETERCEIRO,
       :NEW.QTTRANSITOTV10,
       :OLD.QTTRANSITOTV10);
  END IF;

  IF ((:OLD.QTESTGER <> :NEW.QTESTGER) OR (:OLD.QTEST <> :NEW.QTEST) OR
     (:OLD.CUSTOCONT <> :NEW.CUSTOCONT) OR
     (:OLD.CUSTOFIN <> :NEW.CUSTOFIN) OR
     (:OLD.CUSTOREAL <> :NEW.CUSTOREAL) OR
     (:OLD.CUSTOREP <> :NEW.CUSTOREP) OR
     (:OLD.CUSTOULTENT <> :NEW.CUSTOULTENT) OR
     (:OLD.CUSTOULTENTFIN <> :NEW.CUSTOULTENTFIN) OR
     (:OLD.QTTRANSITOTV13 <> :NEW.QTTRANSITOTV13) OR
     (:OLD.QTTRANSITO <> :NEW.QTTRANSITO)) THEN

    UPDATE PCPRODFILIAL
       SET GERARPCHISTEST = 'S'
     WHERE CODFILIAL = :NEW.CODFILIAL
       AND CODPROD = :NEW.CODPROD;

  END IF;

END GRAVAR_PCLOGESTOQUE;
/
ALTER TRIGGER "AJEL"."GRAVAR_PCLOGESTOQUE" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_SRVPRC_PCEST" 
 BEFORE 
 INSERT OR UPDATE
 ON PCEST
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW 
BEGIN
   :NEW.dtultaltersrvprc := SYSDATE;
END;
/
ALTER TRIGGER "AJEL"."TRG_SRVPRC_PCEST" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_BF_UPDATE_FILIAL_PCEST" 
  before update on pcest
  for each row
begin
  /* Trigger criada em 16.03.2015 por Daniel Costa *** Não desabilitar ou alterar ***
   Incluída uma trava para que não se possa alterar a filial da PCEST. Solicitação 2975.029013.2015 Makro Service
   Em visita ao cliente foi identificado que um lock no banco do cliente causou uma mudança não espontânea no
   código da filial, parando as vendas do cliente.*/
  if :new.codfilial <> :old.codfilial then
      Raise_application_error(-20000,'Não é possível alterar o código filial. Existem movimentações para esta filial.');
  end if; 
end TRG_BF_UPDATE_FILIAL_PCEST;
/
ALTER TRIGGER "AJEL"."TRG_BF_UPDATE_FILIAL_PCEST" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_PCEST_QTVENDA" 

BEFORE UPDATE OF QTVENDMES, QTVENDMES1, QTVENDMES2, QTVENDMES3, QTGIRODIA ON PCEST
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW


DECLARE
   VSMAQUINA    VARCHAR2(80);
   VSUSUARIO    VARCHAR2(80);
   VSPROGRAMA   VARCHAR2(80);


BEGIN

   IF     UPDATING
      AND ( (NVL(:NEW.QTVENDMES, 0) <> NVL(:OLD.QTVENDMES, 0) )
           OR NVL(:NEW.QTVENDMES1, 0) <> NVL(:OLD.QTVENDMES1, 0)
           OR NVL(:NEW.QTVENDMES2, 0) <> NVL(:OLD.QTVENDMES2, 0)
           OR NVL(:NEW.QTVENDMES3,0) <> NVL(:OLD.QTVENDMES3,0)
           OR NVL(:NEW.QTGIRODIA,0) <> NVL(:OLD.QTGIRODIA,0))
   THEN
      BEGIN
          VSMAQUINA  := SUBSTR(SYS_CONTEXT('USERENV', 'TERMINAL'), 1, 80);
          VSUSUARIO  := SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 80);
          VSPROGRAMA := SUBSTR(SYS_CONTEXT('USERENV', 'MODULE'), 1, 80);

          IF VSPROGRAMA IS NULL THEN
            VSPROGRAMA := 'Client do oracle desatualizado';
          END IF;
      END;

      INSERT INTO PCLOGGIRO
                  (USUARIO
                 , MAQUINA
                 , PROGRAMA
                 , DATA
                 , CODPROD
                 , CODFILIAL
                 , QTVENDMES_ANT
                 , QTVENDMES
                 , QTVENDMES1_ANT
                 , QTVENDMES1
                 , QTVENDMES2_ANT
                 , QTVENDMES2
                 , QTVENDMES3_ANT
                 , QTVENDMES3
                 , QTGIRODIA_ANT
                 , QTGIRODIA)
           VALUES (VSUSUARIO
                 , VSMAQUINA
                 , VSPROGRAMA
                 , SYSDATE
                 , :OLD.CODPROD
                 , :OLD.CODFILIAL
                 , :OLD.QTVENDMES
                 , :NEW.QTVENDMES
                 , :OLD.QTVENDMES1
                 , :NEW.QTVENDMES1
                 , :OLD.QTVENDMES2
                 , :NEW.QTVENDMES2
                 , :OLD.QTVENDMES3
                 , :NEW.QTVENDMES3
                 , :OLD.QTGIRODIA
                 , :NEW.QTGIRODIA
                 );
   END IF;


END;

/
ALTER TRIGGER "AJEL"."TRG_PCEST_QTVENDA" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_ECOMMERCE_PCEST" 
   BEFORE INSERT OR UPDATE OF QTESTGER, QTBLOQUEADA, QTRESERV ON PCEST
   REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE 
   vnSALDO NUMBER;
   vnUSAALIENACAOPRODUTO NUMBER;        
   vROWID VARCHAR2(100);
   vUSAECOMMERCEUNILEVER PCPRODUT.USAECOMMERCEUNILEVER%TYPE;
   vCODFILIAL VARCHAR2(2);
   vCONTEMREG NUMBER;
BEGIN
   --Verificando se teve mudança no estoque em relação como esta no E-commerce
   vnSALDO := NVL(:NEW.QTESTGER,0) - NVL(:NEW.QTBLOQUEADA,0) - NVL(:NEW.QTRESERV,0);
  
   BEGIN 
      SELECT COUNT(1)
        INTO vnUSAALIENACAOPRODUTO
        FROM PCECOMMERCEUNILEVERPRODUTO
        WHERE PCECOMMERCEUNILEVERPRODUTO.CODPROD = :NEW.CODPROD;
   EXCEPTION
   WHEN NO_DATA_FOUND THEN
      vnUSAALIENACAOPRODUTO := 0;
   END;  
   --Ajustando o controlado do estoque no E-Commerce
   IF vnSALDO > 0 THEN  
      :NEW.TEMESTOQUEECOMMERCE := 'S';
   ELSE
      :NEW.TEMESTOQUEECOMMERCE := 'N';
   END IF;    
   --Inserindo registros a ser enviado para todas as configurações validas
   BEGIN
      SELECT P.ROWID, 
             NVL(P.USAECOMMERCEUNILEVER,'N')
      INTO vROWID,
           vUSAECOMMERCEUNILEVER
      FROM PCPRODUT P
      WHERE CODPROD = :NEW.CODPROD;
   EXCEPTION
   WHEN NO_DATA_FOUND THEN
      vROWID := '';
      vUSAECOMMERCEUNILEVER := 'N';
   END;  

   IF (NVL(vUSAECOMMERCEUNILEVER,'N') = 'S') THEN 
      -- Verificando se a filial existe na tabela PCECOMMERCEUNILEVERPRODUTO
      BEGIN
         SELECT PCECOMMERCEUNILEVER.CODFILIAL
         INTO vCODFILIAL
         FROM PCECOMMERCEUNILEVER
         WHERE PCECOMMERCEUNILEVER.CODFILIAL = :NEW.CODFILIAL
           AND ((vnUSAALIENACAOPRODUTO = 0) 
            OR ((vnUSAALIENACAOPRODUTO >= 1) 
           AND EXISTS (SELECT 1
                       FROM PCECOMMERCEUNILEVERPRODUTO
                       WHERE PCECOMMERCEUNILEVERPRODUTO.CODPROD = :NEW.CODPROD
                         AND PCECOMMERCEUNILEVERPRODUTO.CODFILIAL = PCECOMMERCEUNILEVER.CODFILIAL)));
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
         vCODFILIAL := '';
      END;  
       
      IF (vCODFILIAL IS NOT NULL) AND (vROWID IS NOT NULL) THEN
         --Enviar estoque
         BEGIN
           SELECT COUNT(*)
              INTO vCONTEMREG
            FROM PCECOMMERCEUNILEVERFILA
            WHERE CODFILIAL  = vCODFILIAL
              AND TABELA     = 'SELECTESTOQUE' 
              AND ID         = vROWID;       
         
            IF (vCONTEMREG = 0) THEN 
              INSERT INTO PCECOMMERCEUNILEVERFILA(CODFILIAL, TABELA, ID, DTINCLUSAO)
                                           VALUES(vCODFILIAL, 'SELECTESTOQUE', vROWID, SYSDATE);
            END IF;                               
         EXCEPTION
         WHEN OTHERS THEN
            NULL;
         END;  
      END IF;
   END IF;   
END;
/
ALTER TRIGGER "AJEL"."TRG_ECOMMERCE_PCEST" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_ECOMMERCEB2B_PCEST" 
 BEFORE
   INSERT OR UPDATE OF QTESTGER, QTBLOQUEADA, QTRESERV
 ON PCEST
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
DECLARE VSMODIFICOU VARCHAR2(1); 
        vnSALDO NUMBER;
BEGIN
  --Verificando se teve mudança no estoque em relação como esta no E-commerce
  vnSALDO := NVL(:NEW.QTESTGER,0) - NVL(:NEW.QTBLOQUEADA,0) - NVL(:NEW.QTRESERV,0);
  
    FOR REGISTROS IN ( SELECT DISTINCT
                               PCECOMMERCEB2BPRODUTO.CODFILIAL
                              ,PCECOMMERCEB2BPRODUTO.TIPOINTEGRACAO
                              ,PCPRODUT.ROWID ID
                        FROM PCECOMMERCEB2BPRODUTO, PCPRODUT
                       WHERE PCECOMMERCEB2BPRODUTO.CODPROD = PCPRODUT.CODPROD
                         AND PCECOMMERCEB2BPRODUTO.CODPROD = :NEW.CODPROD
                         AND PCECOMMERCEB2BPRODUTO.CODFILIAL = :NEW.CODFILIAL )
    LOOP
      --Enviar estoque
      INSERT INTO PCECOMMERCEB2BFILA (CODFILIAL, TIPOINTEGRACAO, TABELA, ID, DTINCLUSAO)
         VALUES ( REGISTROS.CODFILIAL, REGISTROS.TIPOINTEGRACAO, 'ESTOQUE', REGISTROS.ID, SYSDATE );
      
    END LOOP;                                
 
END;
/
ALTER TRIGGER "AJEL"."TRG_ECOMMERCEB2B_PCEST" ENABLE;

CREATE INDEX "AJEL"."PCEST_IDX2" ON "AJEL"."PCEST" ("CODPROD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE UNIQUE INDEX "AJEL"."PCEST_PK" ON "AJEL"."PCEST" ("CODFILIAL", "CODPROD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCEST_IDX3" ON "AJEL"."PCEST" ("CODPROD", "CODFILIAL", "NUMTRANSENTULTENT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;

COMMENT ON COLUMN AJEL.PCEST.CODDEVOL IS 'Código do motivo de devolução que é cadastrada na rotina 518 onde o tipo é BO.';
COMMENT ON COLUMN AJEL.PCEST.VLULTENTCONTSEMST IS 'Valor última entrada contábil. ';
COMMENT ON COLUMN AJEL.PCEST.CUSTOULTENTLIQ IS 'Custo da última entrada sempre deduzindo o crédito de icms e pis/cofins, independente dos parâmetros da filial. ';
COMMENT ON COLUMN AJEL.PCEST.CUSTOREALLIQ IS 'Custo real sempre deduzindo o crédito de icms e pis/cofins, independente dos parâmetros da filial. ';
COMMENT ON COLUMN AJEL.PCEST.MODULOCX IS 'Indica o modulo do endereço do produto.';
COMMENT ON COLUMN AJEL.PCEST.RUACX IS 'Indica rua do endereço do produto.';
COMMENT ON COLUMN AJEL.PCEST.APTOCX IS 'Indica o apto do endereço do produto.';
COMMENT ON COLUMN AJEL.PCEST.DTULTFAT IS 'Indica a data do último faturamento.';
COMMENT ON COLUMN AJEL.PCEST.VLULTPCOMPRA IS 'Indica o valor do último preço de compra.';
COMMENT ON COLUMN AJEL.PCEST.ESTIDEAL IS 'Indica o estoque ideal por filial.';
COMMENT ON COLUMN AJEL.PCEST.DTULTALTERSRVPRC IS 'Indica a data da ultima alteração nesta tabela.';
COMMENT ON COLUMN AJEL.PCEST.DTPRIMCOMPRA IS 'Indica a data da primeira compra.';
COMMENT ON COLUMN AJEL.PCEST.CUSTONFSEMST IS 'Custo da NF sem ST';
COMMENT ON COLUMN AJEL.PCEST.BASEICMSULTENT IS 'Base de ICMS para última entrada';
COMMENT ON COLUMN AJEL.PCEST.CUSTOULTENTCONT IS 'Custo da última entrada utilizado para cálculo do custo contábil';
COMMENT ON COLUMN AJEL.PCEST.QTTRANSITO IS 'Quantidade em Trânsito';
COMMENT ON COLUMN AJEL.PCEST.VLSTULTENTTAB IS 'Valor do ST futuro.';
COMMENT ON COLUMN AJEL.PCEST.VLSTGUIAULTENTTAB IS 'Valor do ST GUIA futuro.';
COMMENT ON COLUMN AJEL.PCEST.CUSTONFSEMSTTAB IS 'Custo da NF sem ST futuro.';
COMMENT ON COLUMN AJEL.PCEST.CUSTONFSEMSTGUIAULTENTTAB IS 'Base de cálculo ST GUIA futuro.';
COMMENT ON COLUMN AJEL.PCEST.IVAULTENTTAB IS 'Valor do IVA futuro.';
COMMENT ON COLUMN AJEL.PCEST.ALIQICMS1ULTENTTAB IS 'Alíquota ICMS interna futuro.';
COMMENT ON COLUMN AJEL.PCEST.ALIQICMS2ULTENTTAB IS 'Alíquota ICMS externa futuro.';
COMMENT ON COLUMN AJEL.PCEST.REDBASEIVAULTENTTAB IS 'Redução da base cálculo ST futuro.';
COMMENT ON COLUMN AJEL.PCEST.PERCICMSFRETEFOBSTULTENTTAB IS 'Percentual ICMS frete FOB ST futuro.';
COMMENT ON COLUMN AJEL.PCEST.VLFRETECONHECULTENTTAB IS 'Valor frete FOB futuro.';
COMMENT ON COLUMN AJEL.PCEST.PERCALIQEXTGUIAULTENTTAB IS 'Percentual alíquota externa GUIA futuro.';
COMMENT ON COLUMN AJEL.PCEST.VLSTGUIAULTENT IS 'Valor do ST GUIA da última entrada.';
COMMENT ON COLUMN AJEL.PCEST.CUSTONFSEMSTGUIAULTENT IS 'Base de cálculo ST GUIA.';
COMMENT ON COLUMN AJEL.PCEST.IVAULTENT IS 'IVA.';
COMMENT ON COLUMN AJEL.PCEST.ALIQICMS1ULTENT IS 'Alíquota ICMS interna.';
COMMENT ON COLUMN AJEL.PCEST.ALIQICMS2ULTENT IS 'Alíquota ICMS externa.';
COMMENT ON COLUMN AJEL.PCEST.REDBASEIVAULTENT IS 'Redução base de cálculo do ST.';
COMMENT ON COLUMN AJEL.PCEST.PERCICMSFRETEFOBSTULTENT IS '% ICMS frete FOB ST.';
COMMENT ON COLUMN AJEL.PCEST.VLFRETECONHECULTENT IS 'Valor frete FOB.';
COMMENT ON COLUMN AJEL.PCEST.PERCALIQEXTGUIAULTENT IS '% aliq. externa guia.';
COMMENT ON COLUMN AJEL.PCEST.BASEICMSULTENTTAB IS 'Base do ICMS Futuro.';
COMMENT ON COLUMN AJEL.PCEST.DTALTERACAO1107 IS 'Dt. Alteração pela rotina 1107';
COMMENT ON COLUMN AJEL.PCEST.DTEMISSAOULTENT IS 'Data da última NF de Entrada';
COMMENT ON COLUMN AJEL.PCEST.ROTINALANC IS 'ROTINA QUE GRAVOU A INFORMACAO';
COMMENT ON COLUMN AJEL.PCEST.PERCMVAORIGULTENT IS 'Percentual de MVA Original para cálculo do MVA ajustado - Última entrada';
COMMENT ON COLUMN AJEL.PCEST.PERCMVAORIGTAB IS 'Percentual de MVA Original para cálculo do MVA ajustado - Futuro';
COMMENT ON COLUMN AJEL.PCEST.ASSINATURA IS 'Código MD-5.';
COMMENT ON COLUMN AJEL.PCEST.QTESTORNOPRODUZDIA IS 'QUANTIDADE ESTORNADA NO DIA.';
COMMENT ON COLUMN AJEL.PCEST.QTESTORNOPRODUZMES IS 'QUANTIDADE ESTORNADA NO MES.';
COMMENT ON COLUMN AJEL.PCEST.QTPRODUZIDADIA IS 'QUANTIDADE PRODUZIDA NO DIA.';
COMMENT ON COLUMN AJEL.PCEST.QTPRODUZIDAMES IS 'QUANTIDADE PRODUZIDA NO MES.';
COMMENT ON COLUMN AJEL.PCEST.CUSTOFORNEC IS 'Custo fornecedor';
COMMENT ON COLUMN AJEL.PCEST.QTGIROCURVATURA IS 'Qtde de giro curvatura';
COMMENT ON COLUMN AJEL.PCEST.QTGIROCURVATURAANT IS 'Qtde de giro curvatura anterior ';
COMMENT ON COLUMN AJEL.PCEST.QTFRENTELOJA IS 'Quantidade no estoque da loja';
COMMENT ON COLUMN AJEL.PCEST.NUMFCI IS 'Ficha de Conteúdo de Importação.';
COMMENT ON COLUMN AJEL.PCEST.VLPARCELAIMPFCI IS 'Valor da Parcela Importada.';
COMMENT ON COLUMN AJEL.PCEST.PERCCONTEUDOIMPFCI IS 'Conteúdo de Importação.';
COMMENT ON COLUMN AJEL.PCEST.VLIMPORTACAOFCI IS 'Valor de Importação.';
COMMENT ON COLUMN AJEL.PCEST.CUSTOFORNECSEMST IS 'Valor do Custo Fornecedor sem ST.';
COMMENT ON COLUMN AJEL.PCEST.CUSTOPROXIMACOMPRASEMST IS 'Valor do Custo da próxima compra sem ST.';
COMMENT ON COLUMN AJEL.PCEST.CUSTOFINSEMST IS 'Valor do Custo médio Financeiro sem ST NF e GUIA.';
COMMENT ON COLUMN AJEL.PCEST.CUSTOULTENTFINSEMST IS 'Custo Ult.Entrada Financeira sem ST.';
COMMENT ON COLUMN AJEL.PCEST.CUSTOULTENTSEMST IS 'Custo Ult.Entrada sem ST.';
COMMENT ON COLUMN AJEL.PCEST.CUSTOULTPEDCOMPRASEMST IS 'Custo Ult.Pedido de Compra sem ST.';
COMMENT ON COLUMN AJEL.PCEST.BASEIPIULTENT IS 'Base de IPI da ultima entrada';
COMMENT ON COLUMN AJEL.PCEST.VLIPIULTENT IS 'Valor de IPI da ultima entrada';
COMMENT ON COLUMN AJEL.PCEST.PERCIPIULTENT IS 'Percentual de IPI da ultima entrada';
COMMENT ON COLUMN AJEL.PCEST.QTTRANSITOTV13 IS 'Quantidade de estoque em trânsito';
COMMENT ON COLUMN AJEL.PCEST.IDENTIFICADOR IS 'Identificar o número da transação que realizou a ultima alteração';
COMMENT ON COLUMN AJEL.PCEST.TEMESTOQUEECOMMERCE IS 'Identifica se tem ou não estoque no e-commerce (InfraCommerce/Unilever)';
COMMENT ON COLUMN AJEL.PCEST.QTINDUSTRIA IS 'Estoque físico da industria no estoque geral';
COMMENT ON COLUMN AJEL.PCEST.VLFCPICMSULTENTTAB IS 'Valor do Fundo de Combate a Pobreza ICMS';
COMMENT ON COLUMN AJEL.PCEST.VLFCPSTULTENTTAB IS 'Valor do Fundo de Combate a Pobreza ST';
COMMENT ON COLUMN AJEL.PCEST.VLBASEFCPSTULTENTTAB IS 'Valor de base de calculo do Fundo de Combate a Pobreza ST';
COMMENT ON COLUMN AJEL.PCEST.VLBCFCPSTRET IS 'Valor da base de calculo do FCP retido anteriormente por ST';
COMMENT ON COLUMN AJEL.PCEST.PERFCPSTRET IS 'Percentual do FCP retido anteriormente por Substituição Tributaria';
COMMENT ON COLUMN AJEL.PCEST.VLFCPSTRET IS 'Valor do FCP retido por Substituição Tributária';
COMMENT ON COLUMN AJEL.PCEST.PERCREDBASEEFET IS 'Percentual de redução de base de calculo efetiva';
COMMENT ON COLUMN AJEL.PCEST.VLBASEEFET IS 'Valor da base de calculo efetiva';
COMMENT ON COLUMN AJEL.PCEST.PERCICMSEFET IS 'Percentual do ICMS efetivo';
COMMENT ON COLUMN AJEL.PCEST.VLICMSEFET IS 'Valor do ICMS efetivo';
COMMENT ON COLUMN AJEL.PCEST.NUMTRANSULTENTET IS 'Transação de entrada de transferência';
COMMENT ON COLUMN AJEL.PCEST.NUMTRANSULTENTED IS 'Transação de entrada de devolução';
COMMENT ON COLUMN AJEL.PCEST.ALIQICMS1 IS 'Alíquota interna de ICMS para cálculo de ST.';
COMMENT ON COLUMN AJEL.PCEST.NUMTRANSULTENTST IS 'Transação da última entrada com ST Retido';
COMMENT ON COLUMN AJEL.PCEST.ESTBONIFIC IS 'ESTOQUE BONIFICADO';
COMMENT ON COLUMN AJEL.PCEST.VLICMSBCR IS 'Valor de ICMS Substituto.';
COMMENT ON COLUMN AJEL.PCEST.BASEICMSBCR IS 'Base de ICMS Substituto.';
COMMENT ON COLUMN AJEL.PCEST.NUMTRANSENTULTENTBNF IS 'Última transação de entrada bonificada';
COMMENT ON COLUMN AJEL.PCEST.TIPOCURVA IS 'Tipo de Curva para giro customizado';
COMMENT ON COLUMN AJEL.PCEST.CURVA IS 'Chave da Curva para giro customizado';
COMMENT ON COLUMN AJEL.PCEST.SUBCURVA IS 'Chave da Sub-Curva para giro customizado';
COMMENT ON COLUMN AJEL.PCEST.FREQUENCIA IS 'Chave da Frequencia para giro customizado';
COMMENT ON COLUMN AJEL.PCEST.QTCROSSDOCK IS 'Saldo Estoque em Crossdocking';
COMMENT ON COLUMN AJEL.PCEST.QTESTOQUEEMTERCEIRO IS 'Quantidade de estoque em terceiros.';
COMMENT ON COLUMN AJEL.PCEST.QTESTOQUEDETERCEIRO IS 'Quantidade de estoque de terceiros.';
COMMENT ON COLUMN AJEL.PCEST.QTTRANSITOTV10 IS 'Quantidade em transito com o tipo de venda igual a 10 - Transferência.';
COMMENT ON COLUMN AJEL.PCEST.DTHORAULTSAIDA IS 'Data e hora da última movimentação de saida do estoque';
COMMENT ON COLUMN AJEL.PCEST.DTHORAULTALTDISP IS 'Data e hora da ultima alteração do disponível 	';
COMMENT ON COLUMN AJEL.PCEST.NUMEROCX IS 'Indica o numero do endereço do produto.';


-- AJEL.PCEMPR definition

CREATE TABLE "AJEL"."PCEMPR" 
   (	"MATRICULA" NUMBER(8,0) DEFAULT NULL NOT NULL ENABLE, 
	"NOME" VARCHAR2(40) NOT NULL ENABLE, 
	"DT_EXCLUSAO" DATE, 
	"NOME_GUERRA" VARCHAR2(15), 
	"ADMISSAO" DATE DEFAULT NULL NOT NULL ENABLE, 
	"ENDERECO" VARCHAR2(40), 
	"BAIRRO" VARCHAR2(25), 
	"CIDADE" VARCHAR2(20), 
	"ESTADO" VARCHAR2(2), 
	"FONE" VARCHAR2(13), 
	"CODSETOR" NUMBER(6,0) NOT NULL ENABLE, 
	"USUARIOBD" VARCHAR2(15), 
	"SENHABD" VARCHAR2(32), 
	"SITUACAO" VARCHAR2(1) DEFAULT 'A', 
	"CPF" VARCHAR2(20), 
	"TIPOVENDA" VARCHAR2(1) DEFAULT 'T', 
	"CODFILIAL" VARCHAR2(2), 
	"CODUSUR" NUMBER(4,0), 
	"CELULAR" VARCHAR2(13), 
	"NUMBANCO" NUMBER(3,0), 
	"NUMAGENCIA" NUMBER(4,0), 
	"NUMCCORRENTE" VARCHAR2(15), 
	"NUMCENTRALPA" NUMBER(4,0), 
	"NUMCENTRALTEL" VARCHAR2(20), 
	"PERMITEALTJUROSBX" VARCHAR2(1) DEFAULT 'S', 
	"VLAUMENTOLIMCRED" NUMBER(14,2), 
	"TIPO" VARCHAR2(1), 
	"RG" VARCHAR2(20), 
	"CTPS" VARCHAR2(20), 
	"PIS" VARCHAR2(20), 
	"FUNCAO" VARCHAR2(30), 
	"EMAIL" VARCHAR2(50), 
	"FATORCOMISSAO" NUMBER(10,6) DEFAULT NULL, 
	"DTEXPIRASENHA" DATE, 
	"VLCOMISSTON" NUMBER(14,2), 
	"VLCOMISSENT" NUMBER(14,2), 
	"VLLIMCREDCOMPRA" NUMBER(14,2), 
	"DTINICIOLIMCREDCOMPRA" DATE, 
	"DTFIMLIMCREDCOMPRA" DATE, 
	"CODCONFERENTE" NUMBER(8,0), 
	"CODFUNCAO" NUMBER(4,0), 
	"SERIECTPS" VARCHAR2(15), 
	"GERACCCARD" VARCHAR2(1) DEFAULT 'N', 
	"MATRICULACCCARD" NUMBER(10,0), 
	"VLSALCARTEIRA" NUMBER(10,2), 
	"VLSALARIO" NUMBER(10,2), 
	"RESCISAO" DATE, 
	"NUMFILHOS" NUMBER(2,0), 
	"COMPLEMENTO" VARCHAR2(40), 
	"OBSERVACAO" VARCHAR2(100), 
	"PERCVT" NUMBER(5,2), 
	"VLPLANOSAUDE" NUMBER(10,2), 
	"VLSALFAMILIA" NUMBER(10,2), 
	"PERCINSS" NUMBER(5,2), 
	"VLPENSAOALIMENTICIA" NUMBER(10,2), 
	"VLADICIONAL" NUMBER(10,2), 
	"VLVALES" NUMBER(10,2), 
	"VLMAXLIBPEDIDO" NUMBER(16,3), 
	"CNH" VARCHAR2(15), 
	"UFCNH" VARCHAR2(2), 
	"TIPOENVIO" VARCHAR2(1), 
	"CODFORNEC" NUMBER(6,0), 
	"PERCOMMOT" NUMBER(5,2), 
	"VLFRETEENTREGA" NUMBER(10,4), 
	"CODVEICULO" NUMBER(4,0), 
	"PERMITEALTDESCBX" VARCHAR2(1) DEFAULT 'N', 
	"REFERENCIAPESSOAL" VARCHAR2(100), 
	"DDDTEL" NUMBER(3,0), 
	"NOMEPAI" VARCHAR2(60), 
	"NOMEMAE" VARCHAR2(60), 
	"CATEGORIACNH" VARCHAR2(3), 
	"TIPOMOTORISTA" VARCHAR2(1), 
	"SEXO" VARCHAR2(1) DEFAULT 'M', 
	"DTNASC" DATE, 
	"DTVALIDADECNH" DATE, 
	"ORGAOEMISSORRG" VARCHAR2(20), 
	"NACIONALIDADE" VARCHAR2(40), 
	"ESTADOCIVIL" VARCHAR2(25), 
	"PROFISSAO" VARCHAR2(30), 
	"USUARIOLOGADO" VARCHAR2(1), 
	"NUMDVAGENCIA" VARCHAR2(2), 
	"NUMCONEXOES" NUMBER(4,0), 
	"NUMCONEXOESATUAL" NUMBER(4,0), 
	"GRUPOEMAIL" VARCHAR2(10), 
	"NOMEEMAIL" VARCHAR2(40), 
	"PERCMINJUROSMORA" NUMBER(8,4) DEFAULT '0', 
	"PERCMAXJUROSMORA" NUMBER(8,4) DEFAULT '0', 
	"CODIDIOMA" VARCHAR2(6) DEFAULT 'PT-BR', 
	"PERCEXCLIMCRED" NUMBER(8,4), 
	"ENVIAFV" VARCHAR2(1), 
	"PERCREDUZCOMISRCA" NUMBER(6,2), 
	"VLSALDOLIMALTCREDITO" NUMBER(14,2) DEFAULT '999999999999', 
	"DTINICIO" DATE, 
	"TIPOATENDE" VARCHAR2(1), 
	"IPRF" VARCHAR2(14), 
	"GRUPOOS" NUMBER(15,0), 
	"CODBARRA" VARCHAR2(20), 
	"OBSINATIVO" VARCHAR2(100), 
	"NUMDIASPAGTORETROATIVO" NUMBER(4,0) DEFAULT '0', 
	"VENDAASSISTIDA" VARCHAR2(1) DEFAULT 'N', 
	"NUMCAIXABALCAO" NUMBER(8,0), 
	"CODIGOPERFIL" NUMBER(20,0), 
	"MAXTEMPOSECAOOCIOSA" NUMBER(6,0), 
	"USARATEIOCOMISSAOOPERADOR" VARCHAR2(1), 
	"OBS" VARCHAR2(60), 
	"PERMITEPERSONCAD" VARCHAR2(1) DEFAULT 'N', 
	"NUMIDENTIFICADORECF" VARCHAR2(13), 
	"TIPOAGENTECOB" VARCHAR2(1) DEFAULT 'N', 
	"DIASCOB" NUMBER(6,0), 
	"LIMITEDESCONTO561" NUMBER(5,2), 
	"NUMINSS" VARCHAR2(12), 
	"USABIOMETRIAMENU" VARCHAR2(1) DEFAULT 'N', 
	"PERCDESC" NUMBER(10,4), 
	"NUMDVCONTA" VARCHAR2(2), 
	"AREAATUACAO" VARCHAR2(40), 
	"NUMDIASMAXPRORROG" NUMBER(4,0), 
	"TIPOCOMISSAO" VARCHAR2(1), 
	"COMISSAOFIXA" NUMBER(10,2), 
	"USAAVISOAUTOMENU" VARCHAR2(1) DEFAULT 'S', 
	"RESPLIBCADASTRO" VARCHAR2(1), 
	"PERCMAXDESCTITULO" NUMBER(10,4), 
	"USATABELACLIENTE" VARCHAR2(1) DEFAULT 'N', 
	"VLMAXLIMCREDCLI" NUMBER(14,2), 
	"ORGAOEMISSORCNH" VARCHAR2(20), 
	"QTDEPENDENTES" NUMBER(4,0), 
	"CODIGOCENTROCUSTO" VARCHAR2(40), 
	"CONCEDERABATIMENTO" VARCHAR2(1) DEFAULT 'N', 
	"USUARIOLOGADORF" VARCHAR2(1) DEFAULT 'N', 
	"CODPERFIL" NUMBER(6,0), 
	"IDINTEGRACAOMYFROTA" RAW(16) DEFAULT SYS_GUID(), 
	"CODCIDADE" NUMBER(6,0), 
	"VLLIMMAXPEDCOMPRA" NUMBER(14,2), 
	"DTDEMISSAO" DATE, 
	"CHAPA_RM" VARCHAR2(16), 
	"AUTOCHEQUEBLOQVENDA" VARCHAR2(1), 
	"SENHAHASH" VARCHAR2(32), 
	"MOTIVOINATIVACAO" VARCHAR2(2000), 
	"VLRLIMAPROVARSOLICITACAO" NUMBER(14,2), 
	"RAMAL" NUMBER(6,0), 
	"FIID" VARCHAR2(50), 
	"AREAATUACAO_COMPRA" VARCHAR2(1), 
	"AREAATUACAO_VENDAS" VARCHAR2(1), 
	"AREAATUACAO_FINANCEIRO" VARCHAR2(1), 
	"AREAATUACAO_LOGISTICA" VARCHAR2(1), 
	"AREAATUACAO_EXPEDICAO" VARCHAR2(1), 
	"AREAATUACAO_RH" VARCHAR2(1), 
	"AREAATUACAO_FISCAL" VARCHAR2(1), 
	"AREAATUACAO_CONTABIL" VARCHAR2(1), 
	"AREAATUACAO_OUTROS" VARCHAR2(1), 
	"TIPOCARGO" VARCHAR2(100), 
	"CEP" VARCHAR2(8), 
	"LIM_REDUCAOCREDITO" NUMBER(12,6), 
	"LIM_AUMENTOCREDITO" NUMBER(12,6), 
	"PERIODO_ALTERACAOCREDITO" NUMBER(3,0), 
	"PERDESCMAXITEM" NUMBER(6,2), 
	"PERDESCMAXRODAPE" NUMBER(6,2), 
	"DIGITALPOLEGAR" BLOB, 
	"DIGITALINDICADOR" BLOB, 
	"DIGITALMEDIO" BLOB, 
	"DIGITALANELAR" BLOB, 
	"DIGITALMINIMO" BLOB, 
	"DEDOPRIORITARIO" VARCHAR2(1), 
	"SITUACAO_CCW" VARCHAR2(1), 
	"USERMYAUDIT" VARCHAR2(200), 
	"SENHAMYAUDIT" VARCHAR2(100), 
	"USERMYBI" VARCHAR2(200), 
	"SENHAMYBI" VARCHAR2(100), 
	"USERGOGEO" VARCHAR2(200), 
	"SENHAGOGEO" VARCHAR2(100), 
	"EMITIRPEDIDO" VARCHAR2(1) DEFAULT 'S', 
	"EMITIRORCAMENTO" VARCHAR2(1) DEFAULT 'S', 
	"PERSONALEMBRETE" DATE, 
	"IDSOFITVIEW" VARCHAR2(10), 
	"DTULTALTERSOFITVIEW" TIMESTAMP (6), 
	"DTEXCLUSAOSOFITVIEW" TIMESTAMP (6), 
	"VOIPMUNDOIPTOKEN" VARCHAR2(100), 
	"VOIPMUNDOIPKEY" VARCHAR2(100), 
	"TELEFONERAMAL" VARCHAR2(15), 
	"VOIPMUNDOIDCHAMADA" VARCHAR2(20), 
	"HASHSENHAWINTHOR" VARCHAR2(250), 
	"DTULTALTER" DATE, 
	"ACESSOWEBCOMPRAS" VARCHAR2(1), 
	"ACESSOWEBVERBAS" VARCHAR2(1), 
	"LIMITEFUNDONEGATIVO" NUMBER(18,6) DEFAULT 0 NOT NULL ENABLE, 
	"CODIBGE" NUMBER(10,0), 
	 CONSTRAINT "PCEMPR_PK" PRIMARY KEY ("MATRICULA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE"  ENABLE, 
	 CONSTRAINT "USUARIOBD_UPP" CHECK ( USUARIOBD = UPPER(USUARIOBD)) ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" 
 LOB ("DIGITALPOLEGAR") STORE AS BASICFILE (
  TABLESPACE "TS_DADOS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DIGITALINDICADOR") STORE AS BASICFILE (
  TABLESPACE "TS_DADOS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DIGITALMEDIO") STORE AS BASICFILE (
  TABLESPACE "TS_DADOS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DIGITALANELAR") STORE AS BASICFILE (
  TABLESPACE "TS_DADOS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DIGITALMINIMO") STORE AS BASICFILE (
  TABLESPACE "TS_DADOS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

CREATE OR REPLACE TRIGGER "AJEL"."T_PCEMPR_VALIDA" 
 BEFORE UPDATE OR INSERT
 OF USUARIOBD
 ON PCEMPR
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
begin
  if UPPER(:new.USUARIOBD) = 'SUPERVISOR' 
  then  
    :new.MATRICULA := NULL;
  end if;
end; -- Ricardo 02/09/2013
/
ALTER TRIGGER "AJEL"."T_PCEMPR_VALIDA" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_PCEMPR_DTULTALTER" 
   BEFORE INSERT OR UPDATE ON PCEMPR  REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
DECLARE                                                                                                                                                              
   VSEQUIPAMENTO VARCHAR2(64);                                                                                                                                 
   VSUSUARIO     VARCHAR2(30);                                                                                                                                 
   VSPROGRAMA    VARCHAR2(48);                                                                                                                                 
   VSTIPO        VARCHAR2(20);                                                                                                                                 
   VVUSURWIN     VARCHAR2(20);
   CLIENTEid     VARCHAR2(64);
   VSCODROTINA   NUMBER(6);
                                                                                                                                                              
PROCEDURE GERARLOG(pNOMECOLUNA VARCHAR2, pOLDValue VARCHAR2, pNEWValue VARCHAR2, VVUSURWIN VARCHAR2) 
IS

BEGIN                                                                                                                                                       
   IF NVL(pOLDValue, 'X') <> NVL(pNEWValue, 'X') THEN                                                                                                    
      INSERT INTO PCLOGALTERACAODADOS(                                                                                                                        
        DATA,                                                                                                                                                 
        TABELA,                                                                                                                                               
        COLUNA,                                                                                                                                               
        OBSERVACOES,                                                                                                                                          
        PROGRAMA,                                                                                                                                             
        TERMINAL,                                                                                                                                             
        OSUSER,                                                                                                                                               
        VALORALFAANT,                                                                                                                                         
        VALORALFA, 
        CODFUNC,
        MAQUINA,
        CODIGO,
        CODROTINA                                                                                                                                            
      )                                                                                                                                                       
      VALUES(                                                                                                                                                 
        SYSDATE,                                                                                                                                              
        'PCEMPR',                                                                                                                                          
        pNOMECOLUNA,                                                                                                                                          
        'Antigo: ' || :OLD.CODFILIAL || ',' || 'Novo: ' || :NEW.CODFILIAL,                                                                               
        VSPROGRAMA,                                                                                                                                           
        VSEQUIPAMENTO,                                                                                                                                        
        VSUSUARIO,                                                                                                                                            
        pOLDValue,                                                                                                                                            
        pNEWValue,
        VVUSURWIN,
        VSEQUIPAMENTO,
        :NEW.MATRICULA,
        VSCODROTINA                                                                                                                                            
      );                                                                                                                                                      
   END IF;
END; 

BEGIN
   IF NVL(:OLD.DTULTALTERSOFITVIEW,TO_DATE('01/01/1900','DD/MM/YYYY HH24:MI:SS')) = NVL(:NEW.DTULTALTERSOFITVIEW,TO_DATE('01/01/1900','DD/MM/YYYY HH24:MI:SS')) AND 
      NVL(:OLD.DTEXCLUSAOSOFITVIEW,TO_DATE('01/01/1900','DD/MM/YYYY HH24:MI:SS')) = NVL(:NEW.DTEXCLUSAOSOFITVIEW,TO_DATE('01/01/1900','DD/MM/YYYY HH24:MI:SS')) AND
      NVL(:OLD.IDSOFITVIEW,0) = NVL(:NEW.IDSOFITVIEW,0) THEN
      :NEW.DTULTALTER := SYSDATE;
   END IF;

   IF (INSERTING OR UPDATING) AND (NVL(:OLD.CODFILIAL,0) <> NVL(:NEW.CODFILIAL,0)) THEN
      BEGIN
         VSEQUIPAMENTO := SUBSTR(SYS_CONTEXT('USERENV', 'TERMINAL'), 1, 64);
         VSUSUARIO     := SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 30);
         VSPROGRAMA    := SUBSTR(SYS_CONTEXT('USERENV', 'MODULE'), 1, 48);
         CLIENTEID     := SYS_CONTEXT('USERENV','CLIENT_INFO');

         SELECT NVL((SUBSTR(CLIENTEID
              , NVL(INSTR(CLIENTEID, ':'),0) + 1
              , LENGTH(CLIENTEid))),'')
         INTO vVUSURWIN
         FROM DUAL;
      EXCEPTION WHEN OTHERS THEN
         VVUSURWIN := '0';
      END;

      BEGIN
         VSCODROTINA := NVL(TO_NUMBER(TRIM(SUBSTR(VSPROGRAMA, (INSTR(VSPROGRAMA, 'PCSIS', 1)) + 5,4))),0);
      EXCEPTION WHEN OTHERS THEN
         VSCODROTINA := 0;
      END;
   END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_PCEMPR_DTULTALTER" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_INTEGRA_MYFROTA_PCEMPR" 
  AFTER UPDATE OR INSERT ON pcempr
  REFERENCING NEW AS NEW OLD AS OLD
  FOR EACH ROW
DECLARE
  xmlvalor       clob;
  operacao       varchar2(50);
  CHAVETRANSACAO raw(16);
  USAMYFROTA     varchar2(1);
BEGIN

/*
08-04-2014 - Carlos Costa -  Implementado condição para tratar erro quando empregado 
                             esta cadastrodo com código do setor igual a zero
*/
 IF NOT NVL(:NEW.CODSETOR, 0) = 0 THEN 
  SELECT PCSETOR.USAMYFROTA
    INTO USAMYFROTA
    FROM PCSETOR
   WHERE PCSETOR.CODSETOR =  :NEW.CODSETOR;
  END IF; 

  IF NVL(USAMYFROTA,'N') = 'S' THEN
  
    SELECT SYS_GUID INTO CHAVETRANSACAO FROM DUAL;
    IF (UPDATING) THEN
      IF (:NEW.dt_exclusao is not null and :OLD.dt_exclusao is null) THEN
        SELECT xmltype.getclobval(XMLELEMENT("employee",
                                             XMLATTRIBUTES(:NEW.IDINTEGRACAOMYFROTA AS
                                                           "SFT_External_Id"),
                                             XMLELEMENT("transp__SFT_Active__c",
                                                        0)))
          INTO xmlvalor
          FROM dual;
        SELECT 'ExcluirFuncionarioMyFrota' into OPERACAO from dual;
      END IF;
    
      IF NOT (NVL(:NEW.MATRICULA, 0) = NVL(:OLD.MATRICULA, 0) AND
          NVL(:NEW.CODFILIAL, 0) = NVL(:OLD.CODFILIAL, 0) AND
          NVL(:NEW.NOME, 0) = NVL(:OLD.NOME, 0) AND
          NVL(:NEW.CNH, 0) = NVL(:OLD.CNH, 0) AND
          NVL(:NEW.DTVALIDADECNH, '') = NVL(:OLD.DTVALIDADECNH, '') AND
          NVL(:NEW.CATEGORIACNH, 0) = NVL(:OLD.CATEGORIACNH, 0) AND
          NVL(:NEW.DT_EXCLUSAO, '') = NVL(:OLD.DT_EXCLUSAO, '')) THEN
        SELECT xmltype.getclobval(XMLELEMENT("employee",
                                             XMLATTRIBUTES(:NEW.IDINTEGRACAOMYFROTA AS
                                                           "SFT_External_Id"),
                                             XMLELEMENT("transp__SFT_Transaction_Number__c",
                                                        CHAVETRANSACAO),
                                             XMLELEMENT("transp__SFT_Registration__c",
                                                        :NEW.MATRICULA),
                                             XMLELEMENT("transp__SFT_Company_Code__c",
                                                        :NEW.CODFILIAL),
                                             XMLELEMENT("name", :NEW.NOME),
                                             XMLELEMENT("transp__SFT_Employee_Function__c",
                                                        'A Definir'),
                                             XMLELEMENT("transp__SFT_HabilitationCode__c",
                                                        :NEW.CNH),
                                             XMLELEMENT("transp__SFT_HabilitationDueDate__c",
                                                        :NEW.DTVALIDADECNH),
                                             XMLELEMENT("transp__SFT_Category__c",
                                                        :NEW.CATEGORIACNH),
                                             XMLELEMENT("transp__SFT_IssuingEntity__c",
                                                        ' '),
                                             XMLELEMENT("transp__SFT_Active__c",
                                                        CAST(NVL(NVL(CAST(:NEW.DT_EXCLUSAO AS
                                                                          VARCHAR2(10)),
                                                                     '1'),
                                                                 '0') AS
                                                             VARCHAR(1)))))
          INTO xmlvalor
          FROM dual;
        SELECT 'AlterarFuncionarioMyFrota' INTO operacao FROM dual;
      END IF;
    END IF;
    IF (INSERTING) THEN
      SELECT xmltype.getclobval(XMLELEMENT("employee",
                                           XMLATTRIBUTES(:NEW.IDINTEGRACAOMYFROTA AS
                                                         "SFT_External_Id"),
                                           XMLELEMENT("transp__SFT_Transaction_Number__c",
                                                      CHAVETRANSACAO),
                                           XMLELEMENT("transp__SFT_Registration__c",
                                                      NVL(CAST(:NEW.MATRICULA AS
                                                               VARCHAR2(50)),
                                                          ' ')),
                                           XMLELEMENT("transp__SFT_Company_Code__c",
                                                      NVL(CAST(:NEW.CODFILIAL AS
                                                               VARCHAR2(50)),
                                                          ' ')),
                                           XMLELEMENT("name",
                                                      NVL(:NEW.NOME, ' ')),
                                           XMLELEMENT("transp__SFT_Employee_Function__c",
                                                      'A Definir'),
                                           XMLELEMENT("transp__SFT_HabilitationCode__c",
                                                      NVL(CAST(:NEW.CNH AS
                                                               VARCHAR2(50)),
                                                          ' ')),
                                           XMLELEMENT("transp__SFT_HabilitationDueDate__c",
                                                      NVL(CAST(:NEW.DTVALIDADECNH AS
                                                               VARCHAR2(10)),
                                                          ' ')),
                                           XMLELEMENT("transp__SFT_Category__c",
                                                      NVL(:NEW.CATEGORIACNH,
                                                          ' ')),
                                           XMLELEMENT("transp__SFT_IssuingEntity__c",
                                                      ' '),
                                           XMLELEMENT("transp__SFT_Active__c",
                                                      CAST(NVL(NVL(CAST(:NEW.DT_EXCLUSAO AS
                                                                        VARCHAR2(10)),
                                                                   '1'),
                                                               '0') AS
                                                           VARCHAR(1)))))
        INTO xmlvalor
        FROM dual;
      SELECT 'IncluirFuncionarioMyFrota' INTO operacao FROM dual;
    END IF;
  
    IF (OPERACAO IN
       ('IncluirFuncionarioMyFrota', 'AlterarFuncionarioMyFrota',
        'ExcluirFuncionarioMyFrota')) THEN
      INSERT INTO PCMYFROTA_FILA
        (CHAVE, OPERACAO, DADOS)
      VALUES
        (CHAVETRANSACAO, operacao, xmlvalor);
    END IF;
  END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_INTEGRA_MYFROTA_PCEMPR" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_INTEGRA_OSMOBILE_PCEMPR" 
  AFTER UPDATE OF
    USUARIOBD, SENHABD ON PCEMPR
  REFERENCING NEW AS NEW OLD AS OLD
  FOR EACH ROW
DECLARE
  STATUS_OPERACAO varchar2(50);
  CHAVETRANSACAO raw(16);
  CONTADOR        NUMBER(6);
BEGIN
  SELECT SYS_GUID INTO CHAVETRANSACAO FROM DUAL;
  
  SELECT COUNT(1)
  INTO CONTADOR
  FROM PCUSUARI
  WHERE PCUSUARI.CODUSUR = :NEW.CODUSUR
  AND :NEW.USUARIOBD IS NOT NULL
  AND :NEW.SENHABD IS NOT NULL;
  
  IF (CONTADOR > 0) THEN  
  
    IF (UPDATING) THEN
    
      IF NOT (NVL(:NEW.USUARIOBD, 0) = NVL(:OLD.USUARIOBD, 0) AND
              NVL(:NEW.SENHABD, 0) = NVL(:OLD.SENHABD, 0)) THEN
        SELECT 'ALTERAR' INTO STATUS_OPERACAO FROM DUAL;
      END IF;
    
    END IF;
    
    IF (STATUS_OPERACAO IN ('INCLUIR', 'ALTERAR', 'EXCLUIR')) THEN
      INSERT INTO PCOSMOBILE_USUARIO
        (ID, CODIGO, STATUSOPERACAO, DATA)
      VALUES
        (CHAVETRANSACAO, :NEW.CODUSUR, STATUS_OPERACAO, TRUNC(SYSDATE));
    END IF;
  END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_INTEGRA_OSMOBILE_PCEMPR" ENABLE;

CREATE UNIQUE INDEX "AJEL"."PCEMPR_USUBD" ON "AJEL"."PCEMPR" ("USUARIOBD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE UNIQUE INDEX "AJEL"."PCEMPR_PK" ON "AJEL"."PCEMPR" ("MATRICULA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE UNIQUE INDEX "AJEL"."SYS_IL0000077955C00157$$" ON "AJEL"."PCEMPR" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" 
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE UNIQUE INDEX "AJEL"."SYS_IL0000077955C00158$$" ON "AJEL"."PCEMPR" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" 
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE UNIQUE INDEX "AJEL"."SYS_IL0000077955C00159$$" ON "AJEL"."PCEMPR" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" 
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE UNIQUE INDEX "AJEL"."SYS_IL0000077955C00160$$" ON "AJEL"."PCEMPR" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" 
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE UNIQUE INDEX "AJEL"."SYS_IL0000077955C00161$$" ON "AJEL"."PCEMPR" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" 
  PARALLEL (DEGREE 0 INSTANCES 0) ;

COMMENT ON COLUMN AJEL.PCEMPR.BAIRRO IS 'Bairro do cadastro de usuário';
COMMENT ON COLUMN AJEL.PCEMPR.NUMDIASPAGTORETROATIVO IS 'Número de Dias Máximo permitido ao usuário para pagamento retroativo de título através da rotina 1207. ';
COMMENT ON COLUMN AJEL.PCEMPR.VENDAASSISTIDA IS 'Indica que o usuário é de venda assistida (a rotina 316 irá pedir Usuário e senha ao iniciar o Pedido).';
COMMENT ON COLUMN AJEL.PCEMPR.NUMCAIXABALCAO IS 'Número do Caixa Balcão. Usado na rotina 528 e 1432. ';
COMMENT ON COLUMN AJEL.PCEMPR.CODIGOPERFIL IS 'Código do Perfil para WMS. ';
COMMENT ON COLUMN AJEL.PCEMPR.MAXTEMPOSECAOOCIOSA IS 'Tempo máximo para o menu ficar aberto com usuário ocioso.';
COMMENT ON COLUMN AJEL.PCEMPR.USARATEIOCOMISSAOOPERADOR IS 'Incica se usa rateio de comissão com operador.';
COMMENT ON COLUMN AJEL.PCEMPR.OBS IS 'Observação do motorista.';
COMMENT ON COLUMN AJEL.PCEMPR.PERMITEPERSONCAD IS 'Informa se o usuário tem permissão para personalizar os cadastros.';
COMMENT ON COLUMN AJEL.PCEMPR.NUMIDENTIFICADORECF IS 'Indica a numeração do funcionário para impressão de Cód. Barra';
COMMENT ON COLUMN AJEL.PCEMPR.TIPOAGENTECOB IS 'Definir o tipo de agente de cobrança entre interno e externo.';
COMMENT ON COLUMN AJEL.PCEMPR.DIASCOB IS 'Indica o número de dias de atraso título p/ cobrança externa.';
COMMENT ON COLUMN AJEL.PCEMPR.LIMITEDESCONTO561 IS 'Indica o limite de desconto.';
COMMENT ON COLUMN AJEL.PCEMPR.NUMINSS IS 'Indica o número do INSS do motorista.';
COMMENT ON COLUMN AJEL.PCEMPR.USABIOMETRIAMENU IS 'Indica se utiliza controle biometria login.';
COMMENT ON COLUMN AJEL.PCEMPR.PERCDESC IS 'Indica o percentual máximo a ser aplicado.';
COMMENT ON COLUMN AJEL.PCEMPR.NUMDVCONTA IS 'Indica o digito verificador da conta corrente.';
COMMENT ON COLUMN AJEL.PCEMPR.AREAATUACAO IS 'Indica a área de atuação do funciónario.';
COMMENT ON COLUMN AJEL.PCEMPR.NUMDIASMAXPRORROG IS 'Numero máximo de dias para Prorrogação por usuário. Cadastrado na 528 e verificado na 1231.';
COMMENT ON COLUMN AJEL.PCEMPR.TIPOCOMISSAO IS 'Indica o tipo de comissão ([P]-Percentual, [V]-Valor).';
COMMENT ON COLUMN AJEL.PCEMPR.COMISSAOFIXA IS 'Indica o valor de comissão fixa.';
COMMENT ON COLUMN AJEL.PCEMPR.USAAVISOAUTOMENU IS 'Atualiza aviso automaticamente no menu.';
COMMENT ON COLUMN AJEL.PCEMPR.RESPLIBCADASTRO IS 'RESPONSÁVEL OU NÃO PELA LIBERAÇÃO DO CADASTRAMENTO DE CONTATO/ SÓCIO DO CLIENTE';
COMMENT ON COLUMN AJEL.PCEMPR.PERCMAXDESCTITULO IS 'Percentual máximo de desconto de título';
COMMENT ON COLUMN AJEL.PCEMPR.USATABELACLIENTE IS 'Utilizar Tabela de Preço por Cliente';
COMMENT ON COLUMN AJEL.PCEMPR.VLMAXLIMCREDCLI IS 'Valor Máximo de Limite de Crédito do Cliente';
COMMENT ON COLUMN AJEL.PCEMPR.ORGAOEMISSORCNH IS 'Campo referente ao Orgão emissor da CNH';
COMMENT ON COLUMN AJEL.PCEMPR.QTDEPENDENTES IS 'Quantidade de dependentes do funcionário';
COMMENT ON COLUMN AJEL.PCEMPR.CODIGOCENTROCUSTO IS 'Código do centro de custo';
COMMENT ON COLUMN AJEL.PCEMPR.CONCEDERABATIMENTO IS 'Armazena se o funcionário tem permissão para conceder ou não abatimento nas vendas';
COMMENT ON COLUMN AJEL.PCEMPR.USUARIOLOGADORF IS 'Informa se esta logado no RF';
COMMENT ON COLUMN AJEL.PCEMPR.CODPERFIL IS 'Código do Perfil';
COMMENT ON COLUMN AJEL.PCEMPR.IDINTEGRACAOMYFROTA IS 'Identifica a integração com My Frota.';
COMMENT ON COLUMN AJEL.PCEMPR.CODCIDADE IS 'Código da cidade.';
COMMENT ON COLUMN AJEL.PCEMPR.VLLIMMAXPEDCOMPRA IS 'Limite Máximo Liberação Pedido Compra';
COMMENT ON COLUMN AJEL.PCEMPR.DTDEMISSAO IS 'Data de demissão.';
COMMENT ON COLUMN AJEL.PCEMPR.CHAPA_RM IS 'Número chapa integração RM.';
COMMENT ON COLUMN AJEL.PCEMPR.AUTOCHEQUEBLOQVENDA IS 'Autorizar cheque bloqueado venda';
COMMENT ON COLUMN AJEL.PCEMPR.SENHAHASH IS 'Senha de acesso ao Winthor, utilizando nova forma de criptografia';
COMMENT ON COLUMN AJEL.PCEMPR.MOTIVOINATIVACAO IS 'Motivo Inativação';
COMMENT ON COLUMN AJEL.PCEMPR.VLRLIMAPROVARSOLICITACAO IS 'Vl. lim. de aprovação de solicitação';
COMMENT ON COLUMN AJEL.PCEMPR.RAMAL IS 'Ramal do Operador';
COMMENT ON COLUMN AJEL.PCEMPR.FIID IS 'Identificação da usuário no FLUIG Identity';
COMMENT ON COLUMN AJEL.PCEMPR.AREAATUACAO_COMPRA IS 'Aréa de atuação do funcionario: compras';
COMMENT ON COLUMN AJEL.PCEMPR.AREAATUACAO_VENDAS IS 'Aréa de atuação do funcionario: vendas';
COMMENT ON COLUMN AJEL.PCEMPR.AREAATUACAO_FINANCEIRO IS 'Aréa de atuação do funcionario: financeiro';
COMMENT ON COLUMN AJEL.PCEMPR.AREAATUACAO_LOGISTICA IS 'Aréa de atuação do funcionario: logistica';
COMMENT ON COLUMN AJEL.PCEMPR.AREAATUACAO_EXPEDICAO IS 'Aréa de atuação do funcionario: expedição';
COMMENT ON COLUMN AJEL.PCEMPR.AREAATUACAO_RH IS 'Aréa de atuação do funcionario: RH';
COMMENT ON COLUMN AJEL.PCEMPR.AREAATUACAO_FISCAL IS 'Aréa de atuação do funcionario: fiscal';
COMMENT ON COLUMN AJEL.PCEMPR.AREAATUACAO_CONTABIL IS 'Aréa de atuação do funcionario: contabil';
COMMENT ON COLUMN AJEL.PCEMPR.AREAATUACAO_OUTROS IS 'Aréa de atuação do funcionario: outros';
COMMENT ON COLUMN AJEL.PCEMPR.TIPOCARGO IS 'Cargo atual';
COMMENT ON COLUMN AJEL.PCEMPR.LIM_REDUCAOCREDITO IS '% limite de redução de crédito de cliente por determinado funcionário';
COMMENT ON COLUMN AJEL.PCEMPR.LIM_AUMENTOCREDITO IS '% limite de aumento de crédito de cliente por determinado funcionário';
COMMENT ON COLUMN AJEL.PCEMPR.PERIODO_ALTERACAOCREDITO IS 'Período mínimo entre alterações de crédito de certo cliente por determinado funcionário';
COMMENT ON COLUMN AJEL.PCEMPR.PERDESCMAXITEM IS 'Percentual maximo de desconto por item';
COMMENT ON COLUMN AJEL.PCEMPR.PERDESCMAXRODAPE IS 'Percentual maximo de desconto rodape';
COMMENT ON COLUMN AJEL.PCEMPR.DIGITALPOLEGAR IS 'Digital dedo polegar';
COMMENT ON COLUMN AJEL.PCEMPR.DIGITALINDICADOR IS 'Digital dedo indicado';
COMMENT ON COLUMN AJEL.PCEMPR.DIGITALMEDIO IS 'Digital dedo medio';
COMMENT ON COLUMN AJEL.PCEMPR.DIGITALANELAR IS 'Digital dedo anelar';
COMMENT ON COLUMN AJEL.PCEMPR.DIGITALMINIMO IS 'Digital dedo minimo';
COMMENT ON COLUMN AJEL.PCEMPR.DEDOPRIORITARIO IS 'Digital prioritaria';
COMMENT ON COLUMN AJEL.PCEMPR.SITUACAO_CCW IS 'Situação de acesso a central controle do Wintor';
COMMENT ON COLUMN AJEL.PCEMPR.USERMYAUDIT IS 'Usuário de acesso ao myAudit';
COMMENT ON COLUMN AJEL.PCEMPR.SENHAMYAUDIT IS 'Senha de acesso ao myAudit';
COMMENT ON COLUMN AJEL.PCEMPR.USERMYBI IS 'Usuário de acesso ao myBI';
COMMENT ON COLUMN AJEL.PCEMPR.SENHAMYBI IS 'Senha de acesso ao myBI';
COMMENT ON COLUMN AJEL.PCEMPR.USERGOGEO IS 'Usuário de acesso ao GoGeo';
COMMENT ON COLUMN AJEL.PCEMPR.SENHAGOGEO IS 'Senha de acesso ao GoGeo2';
COMMENT ON COLUMN AJEL.PCEMPR.EMITIRPEDIDO IS 'O usuário podera emitir pedido';
COMMENT ON COLUMN AJEL.PCEMPR.EMITIRORCAMENTO IS 'O usuário podera emitir orcamento';
COMMENT ON COLUMN AJEL.PCEMPR.PERSONALEMBRETE IS 'Controla a data de lembrete para preenchimento dos dados de persona no WTA.';
COMMENT ON COLUMN AJEL.PCEMPR.IDSOFITVIEW IS 'Indica o código do funcionário na SofitView';
COMMENT ON COLUMN AJEL.PCEMPR.DTULTALTERSOFITVIEW IS 'Indica a data que o funcionário foi integrado com a SofitView';
COMMENT ON COLUMN AJEL.PCEMPR.DTEXCLUSAOSOFITVIEW IS 'Indica a data que o funcionário foi inativado na SofitView';
COMMENT ON COLUMN AJEL.PCEMPR.VOIPMUNDOIPTOKEN IS 'IP token de conexão ao Voip mundo';
COMMENT ON COLUMN AJEL.PCEMPR.VOIPMUNDOIPKEY IS 'IP key de conexão ao Voip mundo';
COMMENT ON COLUMN AJEL.PCEMPR.TELEFONERAMAL IS 'Número do telefone/ramal do operador para recebimento de ligações externas e/ou internas, utilizado também no projeto VOIP';
COMMENT ON COLUMN AJEL.PCEMPR.VOIPMUNDOIDCHAMADA IS 'ID utilizado para realizar a chamada e identificador na conexão com o VoipMundo';
COMMENT ON COLUMN AJEL.PCEMPR.HASHSENHAWINTHOR IS 'Campo para armezenar hash da senha referente ao usuário do winthor';
COMMENT ON COLUMN AJEL.PCEMPR.DTULTALTER IS 'Data da última alteração';
COMMENT ON COLUMN AJEL.PCEMPR.ACESSOWEBCOMPRAS IS 'verifica se tem acesso ao WebCompras';
COMMENT ON COLUMN AJEL.PCEMPR.ACESSOWEBVERBAS IS 'verifica se tem acesso ao WebVerbas';
COMMENT ON COLUMN AJEL.PCEMPR.LIMITEFUNDONEGATIVO IS 'Campo para informar o limite para o fundo multifilial negativo';
COMMENT ON COLUMN AJEL.PCEMPR.CODIBGE IS 'Código de IBGE';



-- AJEL.PCMARCA definition

CREATE TABLE "AJEL"."PCMARCA" 
   (	"CODMARCA" NUMBER(8,0), 
	"MARCA" VARCHAR2(40), 
	"ATIVO" VARCHAR2(1) DEFAULT 'S', 
	"CODADWORDS" VARCHAR2(200), 
	"DESCRICAOECOMMERCE" VARCHAR2(400), 
	"CODCAMPLOMADEE" VARCHAR2(200), 
	"TITULO" VARCHAR2(200), 
	"DTULTALTER" DATE, 
	"DTCADASTRO" DATE, 
	"CODCOMPRADOR" NUMBER(8,0), 
	 CONSTRAINT "PCMARCA_PK" PRIMARY KEY ("CODMARCA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" ;

CREATE UNIQUE INDEX "AJEL"."PCMARCA_PK" ON "AJEL"."PCMARCA" ("CODMARCA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;

COMMENT ON COLUMN AJEL.PCMARCA.CODMARCA IS 'Indica o código da marca.';
COMMENT ON COLUMN AJEL.PCMARCA.MARCA IS 'Indica o descrição da marca.';
COMMENT ON COLUMN AJEL.PCMARCA.ATIVO IS 'Indica se a marca esta ativa ou inativa.';
COMMENT ON COLUMN AJEL.PCMARCA.CODADWORDS IS 'Código do AdWords';
COMMENT ON COLUMN AJEL.PCMARCA.DESCRICAOECOMMERCE IS 'Descrição da marca apresentado no ecommerce';
COMMENT ON COLUMN AJEL.PCMARCA.CODCAMPLOMADEE IS 'Código campanha Lomadee';
COMMENT ON COLUMN AJEL.PCMARCA.TITULO IS 'Titulo da marca apresentado no ecommerce';
COMMENT ON COLUMN AJEL.PCMARCA.DTULTALTER IS 'Data da ultima alteração do registro.';
COMMENT ON COLUMN AJEL.PCMARCA.DTCADASTRO IS 'Data de cadastro';
COMMENT ON COLUMN AJEL.PCMARCA.CODCOMPRADOR IS 'Código do comprador';



-- AJEL.PCNFSAID definition

CREATE TABLE "AJEL"."PCNFSAID" 
   (	"ESPECIE" VARCHAR2(2), 
	"SERIE" VARCHAR2(5), 
	"NUMNOTA" NUMBER(10,0), 
	"DTSAIDA" DATE NOT NULL ENABLE, 
	"VLTOTAL" NUMBER(12,2), 
	"CODCONT" VARCHAR2(8) NOT NULL ENABLE, 
	"CODFISCAL" NUMBER(8,0) NOT NULL ENABLE, 
	"CODCLI" NUMBER(9,0) NOT NULL ENABLE, 
	"CAIXA" NUMBER(8,0) NOT NULL ENABLE, 
	"CODUSUR" NUMBER(4,0) NOT NULL ENABLE, 
	"DTENTREGA" DATE, 
	"COMISSAO" NUMBER(12,2), 
	"VLTOTGER" NUMBER(12,2), 
	"VLTABELA" NUMBER(12,2), 
	"CODFILIAL" VARCHAR2(2) NOT NULL ENABLE, 
	"VLDESCONTO" NUMBER(12,2), 
	"TIPOVENDA" VARCHAR2(2) NOT NULL ENABLE, 
	"OBS" VARCHAR2(120), 
	"VLCUSTOREAL" NUMBER(14,2), 
	"VLCUSTOFIN" NUMBER(14,2), 
	"VLFRETE" NUMBER(14,2), 
	"VLOUTRASDESP" NUMBER(14,2), 
	"TOTPESO" NUMBER(18,6), 
	"TOTVOLUME" NUMBER(18,6), 
	"CODPRACA" NUMBER(6,0) NOT NULL ENABLE, 
	"NUMITENS" NUMBER(4,0), 
	"CODEMITENTE" NUMBER(8,0), 
	"DTCANCEL" DATE, 
	"NUMCAR" NUMBER(8,0), 
	"CODCOB" VARCHAR2(4), 
	"NUMPED" NUMBER(10,0), 
	"STRIBUT" NUMBER(14,2), 
	"ICMSRETIDO" NUMBER(14,2), 
	"BCST" NUMBER(14,2), 
	"CODDEVOL" NUMBER(4,0), 
	"NFFORNEC" NUMBER(10,0), 
	"CODFORNEC" NUMBER(6,0), 
	"CODDOC" VARCHAR2(4), 
	"NUMTRANSVENDA" NUMBER(10,0) NOT NULL ENABLE, 
	"CODPLPAG" NUMBER(4,0), 
	"CODFUNCCANCEL" NUMBER(8,0), 
	"NUMTAB" NUMBER(4,0), 
	"NUMSEQ" NUMBER(20,0), 
	"CODSUPERVISOR" NUMBER(4,0), 
	"CONDVENDA" NUMBER(5,0), 
	"VLDEVOLUCAO" NUMBER(14,2), 
	"VLBASEIPI" NUMBER(14,2), 
	"VLIPI" NUMBER(12,2), 
	"VLICMSANTECIPADO" NUMBER(12,2), 
	"CODEPTO" NUMBER(6,0), 
	"VLTOTALNF" NUMBER(12,2), 
	"CODFILIALNF" VARCHAR2(2), 
	"UF" VARCHAR2(2), 
	"VLBASE" NUMBER(12,2), 
	"VLICMS" NUMBER(12,2), 
	"VLISENTAS" NUMBER(12,2), 
	"VLOUTRAS" NUMBER(12,2), 
	"NUMIDF" VARCHAR2(30), 
	"NUMFORMULARIO" NUMBER(10,0), 
	"VLCUSTOREP" NUMBER(14,2), 
	"VLCUSTOCONT" NUMBER(14,2), 
	"DTDEVOL" DATE, 
	"NUMSELONF" NUMBER(10,0), 
	"NUMSEQMONTAGEM" NUMBER(4,0), 
	"NUMVOLUME" NUMBER(8,0), 
	"NUMCUPOM" NUMBER(10,0), 
	"VLRECEBIDODIN" NUMBER(10,2), 
	"VLRECEBIDOCH" NUMBER(10,2), 
	"VLRECEBIDOBOLETO" NUMBER(10,2), 
	"VLTROCO" NUMBER(10,2), 
	"CODFUNCLIBENT" NUMBER(8,0), 
	"DTLIBENT" DATE, 
	"VLDESCPROM" NUMBER(12,2), 
	"NUMVIAS" NUMBER(4,0), 
	"CODCONTRATO" NUMBER(6,0), 
	"FRETEDESPACHO" VARCHAR2(1), 
	"FRETEREDESPACHO" VARCHAR2(1), 
	"CODFORNECFRETE" NUMBER(6,0), 
	"VLRECEBIDOCARTAO" NUMBER(12,2), 
	"NUMTRANSVENDAORIGEM" NUMBER(10,0), 
	"CODFUNCLANC" NUMBER(8,0), 
	"DTCANHOTO" DATE, 
	"NUMTRANSVENDADESTINO" NUMBER(10,0), 
	"CODUSUR3" NUMBER(4,0), 
	"CODUSUR2" NUMBER(4,0), 
	"HORALANC" VARCHAR2(2), 
	"MINUTOLANC" VARCHAR2(2), 
	"ROTINALANC" VARCHAR2(48), 
	"EQUIPLANC" VARCHAR2(64), 
	"FUNCLANC" VARCHAR2(30), 
	"DTWMS" DATE, 
	"PRAZOMEDIO" NUMBER(4,0), 
	"PRAZOADICIONAL" NUMBER(4,0), 
	"VLFRETENF" NUMBER(12,2), 
	"CODSUPERVISOR2" NUMBER(4,0), 
	"CODSUPERVISOR3" NUMBER(4,0), 
	"COMISSAO2" NUMBER(12,2), 
	"COMISSAO3" NUMBER(12,2), 
	"VLISS" NUMBER(18,6), 
	"NUMLANCCP" NUMBER(8,0), 
	"PRAZOPONDERADO" VARCHAR2(1) DEFAULT 'N', 
	"NUMNFTRANSF" NUMBER(10,0), 
	"SERIEECF" VARCHAR2(2), 
	"NUMSERIEEQUIP" VARCHAR2(30), 
	"VLBONIFIC" NUMBER(16,3), 
	"BCSTGNRE" NUMBER(14,2), 
	"ICMSRETIDOGNRE" NUMBER(14,2), 
	"TIPODEVOL" VARCHAR2(2), 
	"CODCLINF" NUMBER(9,0), 
	"VLIR" NUMBER(18,6), 
	"PERCFRETE" NUMBER(8,4), 
	"NUMREGIAOFRETE" NUMBER(4,0), 
	"CODCONDICAOVENDA" NUMBER(6,0), 
	"TOTVLDESCFIN" NUMBER(18,6), 
	"TOTVLDESCCOM" NUMBER(18,6), 
	"TOTVLBONIFIC" NUMBER(18,6), 
	"TOTVLDESCFLEX" NUMBER(18,6), 
	"TOTVLREDCOMISS" NUMBER(18,6), 
	"NUMVIASPU" NUMBER(4,0), 
	"NUMORCA" NUMBER(10,0), 
	"COMISSAOSUP" NUMBER(18,6), 
	"TOTVLREDCOMISSSUP" NUMBER(18,6), 
	"DTEMISSAONFFORNEC" DATE, 
	"TIPOFRETE" VARCHAR2(1), 
	"BROKER" VARCHAR2(1), 
	"PERBASEREDOUTRASDESP" NUMBER(8,2), 
	"NUMCAIXAFISCAL" NUMBER(4,0), 
	"DTHORACHEGADA" DATE, 
	"DTHORASAIDA" DATE, 
	"KMFINALENTREGA" NUMBER(12,2), 
	"VLPIS" NUMBER(18,6), 
	"PERDESCFIN" NUMBER(12,6), 
	"CODCLIRECEBEDOR" NUMBER(9,0), 
	"NUMREGIAO" NUMBER(4,0), 
	"NUMORCAFILIAL" NUMBER(10,0), 
	"APRESENTOUCUPOMPROMOCAO" VARCHAR2(1), 
	"NSU" NUMBER(10,0), 
	"DTNSU" DATE, 
	"RESERVARITENSTV7" VARCHAR2(1), 
	"NUMPREVENDA" NUMBER(10,0), 
	"GERACAORAZAOAUXILIAR" VARCHAR2(1), 
	"DTPGTOCAMPANHA" DATE, 
	"NUMECF" NUMBER(10,0), 
	"GERACP" VARCHAR2(1) DEFAULT 'N', 
	"VLVERBACMVCLI" NUMBER(18,6), 
	"DTEXPORTACAOSERVINT" DATE, 
	"EXPORTADOSERVINT" VARCHAR2(1), 
	"IMPORTADOSERVPRINC" VARCHAR2(1), 
	"DTIMPORTACAOSERVPRINC" DATE, 
	"NUMTRANSVENDAECF" NUMBER(10,0), 
	"CHAVENFE" VARCHAR2(45), 
	"SITUACAONFE" NUMBER(10,0), 
	"PROTOCOLONFE" VARCHAR2(16), 
	"DTHORANFE" DATE, 
	"IEENT" VARCHAR2(15), 
	"NUMLOTENFE" VARCHAR2(15), 
	"PERCCOMPROFISSIONAL" NUMBER(8,4), 
	"TIPOEMISSAO" VARCHAR2(1) DEFAULT '1', 
	"ENVIADA" VARCHAR2(1), 
	"USAINTEGRACAOWMS" VARCHAR2(1), 
	"ENVIADANFE" VARCHAR2(1), 
	"AUTENTPGTOGNRE" VARCHAR2(200), 
	"BANCOPGTOGNRE" VARCHAR2(50), 
	"AGENCIAPGTOGNRE" VARCHAR2(30), 
	"VENDAASSISTIDA" VARCHAR2(1), 
	"CODEMITENTEPEDIDO" NUMBER(8,0), 
	"NUMOP" NUMBER(8,0), 
	"ALIQUOTA" NUMBER(7,2), 
	"CODCONSIGNATARIOFRETE" NUMBER(8,0), 
	"CODEXPORTADOR" NUMBER(6,0), 
	"UFDESEMBARACO" VARCHAR2(2), 
	"LOCALDESEMBARACO" VARCHAR2(30), 
	"CODREMETENTEFRETE" NUMBER(9,0), 
	"CODDESTINATARIOFRETE" NUMBER(9,0), 
	"CODVEICULO" NUMBER(4,0), 
	"CODMOTORISTA" NUMBER(8,0), 
	"CODPRACADESTFRETE" NUMBER(6,0), 
	"OBSCONHECFRETE" VARCHAR2(400), 
	"VLSECCAT" NUMBER(18,6), 
	"VLDESPACHO" NUMBER(18,6), 
	"VLLTR" NUMBER(18,6), 
	"VLPEDAGIO" NUMBER(18,6), 
	"VLSEGURO" NUMBER(18,6), 
	"TENTATIVAENVIONFE" NUMBER(4,0), 
	"CLIENTE" VARCHAR2(60), 
	"CGC" VARCHAR2(18), 
	"IE" VARCHAR2(15), 
	"TIPOFJ" VARCHAR2(1), 
	"CONSUMIDORFINAL" VARCHAR2(1), 
	"CODATV1" NUMBER(6,0), 
	"CODPAIS" NUMBER(6,0), 
	"DESCPAIS" VARCHAR2(60), 
	"CGCFILIAL" VARCHAR2(14), 
	"IEFILIAL" VARCHAR2(20), 
	"UFFILIAL" VARCHAR2(2), 
	"AGREGARSTPRODSINTEGRA" VARCHAR2(1), 
	"TIPOALIQOUTRASDESP" VARCHAR2(1), 
	"IESUBSTTRIBUT" VARCHAR2(20), 
	"UFCODIGO" VARCHAR2(2), 
	"HISTORICO" VARCHAR2(1), 
	"SUBSERIE" VARCHAR2(2), 
	"ESPECIEVOLUME" VARCHAR2(100), 
	"MARCARVOLUME" VARCHAR2(100), 
	"NUMCONTRATO" NUMBER(8,0), 
	"DTFECHACCRCA" DATE, 
	"CONTRIBUINTE" VARCHAR2(1), 
	"DTCANCELWMS" DATE, 
	"VLCOFINS" NUMBER(18,6), 
	"CODFISCALNF" NUMBER(8,0), 
	"DTLANCTO" DATE, 
	"RECARGA" VARCHAR2(1), 
	"PROTOCOLONFECAN" VARCHAR2(16), 
	"PROTOCOLONFEAUTO" VARCHAR2(16), 
	"COMISSAOMOT" NUMBER(12,2), 
	"DTPAGCOMISSAOPROF" DATE, 
	"CODUSUR4" NUMBER(6,0), 
	"COMISSAO4" NUMBER(12,2), 
	"CLIENTEFONTEST" VARCHAR2(1), 
	"ORGAOPUB" VARCHAR2(1), 
	"TRANSPORTADORA" VARCHAR2(60), 
	"CODCLIFILIAL" NUMBER(9,0), 
	"CGCFRETE" VARCHAR2(18), 
	"IEFRETE" VARCHAR2(15), 
	"UFFRETE" VARCHAR2(2), 
	"VLPAUTAFRETE" NUMBER(12,2), 
	"COBRANCA" VARCHAR2(30), 
	"ENDERECO" VARCHAR2(40), 
	"BAIRRO" VARCHAR2(40), 
	"MUNICIPIO" VARCHAR2(30), 
	"CEP" VARCHAR2(10), 
	"SULFRAMA" VARCHAR2(15), 
	"CODMUNICIPIO" NUMBER(10,0), 
	"PLACAVEIC" VARCHAR2(10), 
	"CODCONTCLI" NUMBER(10,0), 
	"CODIBGE" NUMBER(10,0), 
	"TIPOEMPRESA" VARCHAR2(4), 
	"CODFISCALFRETE" NUMBER(4,0), 
	"PERCICMFRETE" NUMBER(4,2), 
	"CODFISCALOUTRASDESP" NUMBER(4,0), 
	"ALIQICMOUTRASDESP" NUMBER(4,2), 
	"ATACADISTA" VARCHAR2(1), 
	"VLINSS" NUMBER(18,6), 
	"NUMCARANTERIOR" NUMBER(8,0), 
	"OBSNFE" CLOB, 
	"TOTDIFALIQUOTAS" NUMBER(14,2), 
	"DTHORARECIBODPEC" DATE, 
	"NUMTRANSVENDACONHEC" NUMBER(14,2), 
	"VLDESPDENTRONF" NUMBER(14,2), 
	"DTHORAAUTORIZACAOSEFAZ" DATE, 
	"RECIBONFE" VARCHAR2(20), 
	"LOTEDPEC" VARCHAR2(20), 
	"RECIBODPEC" VARCHAR2(20), 
	"AMBIENTE" VARCHAR2(1), 
	"PROTOCOLOCANCELAMENTO" VARCHAR2(20), 
	"DTHORACANCELAMENTOSEFAZ" DATE, 
	"DTFECHA" DATE, 
	"VENDATRIANGULAR" VARCHAR2(1), 
	"SITUACAOCTE" NUMBER(10,0), 
	"RECIBOCTE" VARCHAR2(20), 
	"PROTOCOLOCTE" VARCHAR2(16), 
	"CHAVECTE" VARCHAR2(44), 
	"NUMLOTECTE" VARCHAR2(15), 
	"DTA_HORAENVIOSEFAZ" DATE, 
	"AMBIENTECTE" VARCHAR2(1), 
	"AMBIENTENFE" VARCHAR2(1), 
	"NUMSEQENTREGA" NUMBER(20,0), 
	"HORAEMISSAO" VARCHAR2(8), 
	"CONTADORCUPOMFISCAL" NUMBER(6,0), 
	"CODPRODPREDOMINANTE" NUMBER(6,0), 
	"DTLIBERACAOENTREGA" DATE, 
	"CODFUNCLIBERACAOENTREGA" NUMBER(8,0), 
	"TOTPESOLIQ" NUMBER(18,6), 
	"TOTPESOAGRUPADO" NUMBER(18,6), 
	"TOTPESOLIQAGRUPADO" NUMBER(18,6), 
	"TOTVOLUMEAGRUPADO" NUMBER(18,6), 
	"VLFRETERETIDO" NUMBER(14,2), 
	"VLSTFRETERETIDO" NUMBER(14,2), 
	"PERCFRETERETIDO" NUMBER(8,4), 
	"PERCSTFRETERETIDO" NUMBER(8,4), 
	"PRAZO1" NUMBER(4,0), 
	"PRAZO2" NUMBER(4,0), 
	"PRAZO3" NUMBER(4,0), 
	"PRAZO4" NUMBER(4,0), 
	"PRAZO5" NUMBER(4,0), 
	"PRAZO6" NUMBER(4,0), 
	"PRAZO7" NUMBER(4,0), 
	"PRAZO8" NUMBER(4,0), 
	"PRAZO9" NUMBER(4,0), 
	"PRAZO10" NUMBER(4,0), 
	"PRAZO11" NUMBER(4,0), 
	"PRAZO12" NUMBER(4,0), 
	"CUSTOBONIFICACAO" VARCHAR2(1), 
	"CODFORNECBONIFIC" NUMBER(6,0), 
	"CODBNF" NUMBER(4,0), 
	"TOTPESOBRUTO" NUMBER(18,6), 
	"DTSAIDANF" DATE, 
	"CONFERIDO" VARCHAR2(1) DEFAULT 'N', 
	"JUSTIFICATIVACONTIGENCIA" VARCHAR2(256), 
	"DTAHORAENTRADACONTIGENCIA" DATE, 
	"CNPJCISP" VARCHAR2(8), 
	"CONSUMIUNUMNFE" VARCHAR2(1), 
	"DTHORACTE" DATE, 
	"TENTATIVAENVIOCTE" NUMBER(10,0), 
	"PROTOCOLOCANCELAMENTOCTE" VARCHAR2(20), 
	"CODFORNECREDESPACHO" NUMBER(6,0), 
	"EMAILFRETE" VARCHAR2(100), 
	"EMAILFRETEREDESPACHO" VARCHAR2(100), 
	"DESPESASRATEADA" VARCHAR2(1), 
	"NUMTRANSENTORIGEM" NUMBER(10,0), 
	"FORNECENTREGA" VARCHAR2(1), 
	"UFPLACAVEIC" VARCHAR2(2), 
	"DTEXPORTACAOWMS" DATE, 
	"DTIMPORTACAOWMS" DATE, 
	"NFATUALWMS" VARCHAR2(1), 
	"FINALIDADENFE" VARCHAR2(2), 
	"EMAILDEST" VARCHAR2(100), 
	"TELEFONE" VARCHAR2(20), 
	"NUMENDERECO" VARCHAR2(6), 
	"SERIEORIGINAL" VARCHAR2(3), 
	"OBSPISCOFINS" VARCHAR2(500), 
	"VLBASEPISCOFINS" NUMBER(12,2), 
	"PERPIS" NUMBER(8,4), 
	"PERCOFINS" NUMBER(8,4), 
	"CODSITTRIBPISCOFINS" NUMBER(3,0), 
	"SITDOC" VARCHAR2(2), 
	"VALORST" NUMBER(12,2), 
	"MENSAGEMPISCOFINS" VARCHAR2(4000), 
	"DATAEMPENHO" DATE, 
	"CODUNIDADEEXECUTORA" VARCHAR2(20), 
	"VLDESCICMS" NUMBER(14,2), 
	"VLTOTALSEMDESCICMS" NUMBER(12,2), 
	"NUMEMPENHO" VARCHAR2(40), 
	"OBSEXP" VARCHAR2(200), 
	"CONTAORDEM" VARCHAR2(1), 
	"DTFAT" DATE, 
	"CODGERENTE" NUMBER(4,0), 
	"NUMPEDCLI" VARCHAR2(15), 
	"MOTORISTAVEICULO" VARCHAR2(40), 
	"CONSUMIUNUMCTE" VARCHAR2(1), 
	"UTILIZAIPICALCICMS" VARCHAR2(1), 
	"NUMOS" NUMBER(8,0), 
	"WMSCODFUNCIGNORA" NUMBER(8,0), 
	"WMSIGNORADO" VARCHAR2(1), 
	"PISRETIDO" VARCHAR2(1), 
	"INSSRETIDO" VARCHAR2(1), 
	"IRRRETIDO" VARCHAR2(1), 
	"NUMTRANSENTDEST" NUMBER(10,0), 
	"MOTESTORNONFE" VARCHAR2(250), 
	"NATOPERNFE" VARCHAR2(60), 
	"VENDAEXPORTACAO" VARCHAR2(1), 
	"ENVIADOEMAILCANCELADO" VARCHAR2(1), 
	"GERANFVENDA" VARCHAR2(1), 
	"NUMCONTRATOCARRETEIRO" VARCHAR2(20), 
	"VLDESCABATIMENTO" NUMBER(18,6), 
	"NUMLISTA" NUMBER(6,0), 
	"DEVSIMBOLICA" VARCHAR2(1), 
	"VLIPIOUTRAS" NUMBER(18,6), 
	"PROTOCOLO" VARCHAR2(50), 
	"CODVEICULO1" NUMBER(4,0), 
	"CODVEICULO2" NUMBER(4,0), 
	"COFINSRETIDO" VARCHAR2(1), 
	"CSLLRETIDO" VARCHAR2(1), 
	"GERARBCRNFE" VARCHAR2(1), 
	"NUMCARGAEDI" NUMBER(8,0), 
	"DEPOSITOFECHADO" VARCHAR2(1), 
	"OBSNFCARREG" VARCHAR2(255), 
	"TIPOEMISSAOCTE" VARCHAR2(2), 
	"DTEMISSAODECLARACAO" DATE, 
	"DTDENEGADA" DATE, 
	"ENTREGA" VARCHAR2(1), 
	"TAXAENTREGA" NUMBER(14,2), 
	"UFPLACAVEI" VARCHAR2(2), 
	"NORMAREGESPECIAL" VARCHAR2(250), 
	"IDINTEGRACAOMYFROTA" RAW(16) DEFAULT SYS_GUID(), 
	"NUMTRANSVENDATV13" NUMBER(10,0), 
	"SITUACAONFEORIG" NUMBER(10,0), 
	"CODMEDICOPRESCRIT" NUMBER(6,0), 
	"NUMPEDVANXML" VARCHAR2(20), 
	"CNPJFORNEC" VARCHAR2(18), 
	"NUMCOMPROVANTE" NUMBER(20,0), 
	"CNPJRESPONSAVEL" VARCHAR2(18), 
	"INUTILIZADA" VARCHAR2(1), 
	"AGREGASTVLMERC" VARCHAR2(1), 
	"CARTAODOTZ" VARCHAR2(18), 
	"RESPSEGURO" NUMBER(1,0), 
	"NOMESEGURADORA" VARCHAR2(30), 
	"NUMEROAPOLICE" VARCHAR2(20), 
	"NUMEROAVERBACAO" VARCHAR2(40), 
	"SIMPLESNACIONAL" VARCHAR2(1), 
	"VLRAVERBACAO" NUMBER(13,2), 
	"VLTRIBUTOS" NUMBER(14,2), 
	"CNPJCOLETA" VARCHAR2(18), 
	"RAZAOSOCIALCOLETA" VARCHAR2(60), 
	"LOGRADOUROCOLETA" VARCHAR2(60), 
	"NUMEROCOLETA" VARCHAR2(60), 
	"COMPLEMENTOCOLETA" VARCHAR2(60), 
	"BAIRROCOLETA" VARCHAR2(60), 
	"CODCIDADECOLETA" NUMBER(6,0), 
	"CNPJFORNECPEDAGIO" VARCHAR2(18), 
	"NUMVALEPEDAGIO" VARCHAR2(20), 
	"CPNJRESPONSAVELPEDAGIO" VARCHAR2(18), 
	"VALORPEDAGIO" NUMBER(13,2), 
	"DTPAGDOTZ" DATE, 
	"NUMTRANSCTEANUL" NUMBER(10,0), 
	"NUMTRANSCTESUBS" NUMBER(10,0), 
	"CHAVECTEREF" VARCHAR2(45), 
	"CNPJCPFCTEREF" VARCHAR2(18), 
	"IECTEREF" VARCHAR2(20), 
	"RAZAOSOCIALCTEREF" VARCHAR2(60), 
	"TIPODOCCTEREF" VARCHAR2(2), 
	"SERIEDOCCTEREF" VARCHAR2(3), 
	"SUBSERIEDOCCTEREF" VARCHAR2(2), 
	"NUMDOCCTEREF" VARCHAR2(20), 
	"DTEMISSAOCTEREF" DATE, 
	"ORGAOPUBFEDERAL" VARCHAR2(1), 
	"ORGAOPUBMUNICIPAL" VARCHAR2(1), 
	"NSUSOCIOTORCEDOR" VARCHAR2(15), 
	"CNPJCPFEMITENTESUB" VARCHAR2(14), 
	"MODELODOCSUB" VARCHAR2(2), 
	"SERIEDOCSUB" VARCHAR2(3), 
	"SUBSERIEDOCSUB" VARCHAR2(3), 
	"NUMERODOCSUB" NUMBER(10,0), 
	"VALORDOCSUB" NUMBER(13,2), 
	"DTEMISSAODOCSUB" DATE, 
	"CHAVECTETOMADORSUB" VARCHAR2(45), 
	"CHAVECTEANULACAO" VARCHAR2(45), 
	"CHAVECTESUBSTITUICAO" VARCHAR2(45), 
	"CHAVENFETOMADORSUB" VARCHAR2(45), 
	"TIPODOCUMENTOSUB" VARCHAR2(3), 
	"UFCTEREF" VARCHAR2(2), 
	"VERSAOROTINA" VARCHAR2(20), 
	"VLDESCSOCIOTORCEDOR" NUMBER(18,2), 
	"IDTIPOPRESENCA" VARCHAR2(2), 
	"ROTINACADCTE" VARCHAR2(48), 
	"VLBONIFICACERTO" NUMBER(14,2), 
	"NUMREGEXP" NUMBER(12,0), 
	"NUMCHAVEEXP" VARCHAR2(44), 
	"NUMDRAWBACK" NUMBER(11,0), 
	"VLSUBTOTAL" NUMBER(18,2), 
	"IDLOCALDESTMERC" VARCHAR2(1), 
	"CODPRODNFAJUSTE" VARCHAR2(60), 
	"DESCRICAOPRODNFAJUSTE" VARCHAR2(120), 
	"NCMNFAJUSTE" VARCHAR2(8), 
	"UNIDADENFAJUSTE" VARCHAR2(6), 
	"VLTOTBRUTOPRODAJUSTE" NUMBER(18,2), 
	"OBSNFAJUSTE" VARCHAR2(1000), 
	"CTECODTRANSPSUBCONTRATANTE" NUMBER(6,0), 
	"CTECODVEICULOSUBCONTRATANTE" NUMBER(6,0), 
	"CTECODTOMADORSERVICO" NUMBER(6,0), 
	"CTECODTRANSPSUBCONTRATADO" NUMBER(6,0), 
	"CTESUBCONTRATADOCHAVECTEREF" VARCHAR2(45), 
	"CODFORNECFRETECTEREF" NUMBER(6,0), 
	"CODRECEBFRETECTEREF" NUMBER(6,0), 
	"TIPOSERVICOCTE" VARCHAR2(1), 
	"TIPOSUBCONTRATACAOCTE" VARCHAR2(1), 
	"TIPOPRESENCAADQUIRINTE" VARCHAR2(1), 
	"DOCEMISSAO" VARCHAR2(2), 
	"VLGRIS" NUMBER(12,2), 
	"VLDESPPEDAGIO" NUMBER(12,2), 
	"VLTAS" NUMBER(12,2), 
	"NUMFECHAMENTOMOVCX" NUMBER(10,0), 
	"DTMOVIMENTOCX" DATE, 
	"SELO" VARCHAR2(20), 
	"NUMREMESSA" NUMBER(10,0), 
	"TIPOMOVGARANTIA" NUMBER(3,0), 
	"FORMULARIO" NUMBER(10,0), 
	"NUMNOTAMANIF" NUMBER(10,0), 
	"ORIGEMFRETE" VARCHAR2(1), 
	"NUMCIRURGIA" NUMBER(10,0), 
	"UTILIZAEXPDIVERSOS" VARCHAR2(1), 
	"IDENTIFICARCLIENTENFCE" VARCHAR2(1), 
	"MD5LISTAARQ" VARCHAR2(300), 
	"VENDANFSERIED" VARCHAR2(1), 
	"SITUACAONFEEPEC" NUMBER(3,0), 
	"PROTOCOLONFEEPEC" VARCHAR2(15), 
	"DATAHORAREGISTROEPEC" DATE, 
	"NUMTRANSENTORIGCONSIG" NUMBER(10,0), 
	"NUMSERIESAT" VARCHAR2(13), 
	"CHAVESAT" VARCHAR2(400), 
	"SITUACAOSAT" VARCHAR2(2), 
	"EMISSNUMAUTOMATICO" VARCHAR2(1) DEFAULT 'S', 
	"DATAHORAEMISSAOSAT" DATE, 
	"QRCODESAT" VARCHAR2(4000), 
	"VLBOLETO" NUMBER(14,2), 
	"NUMTRANSENTNFESTORNADA" NUMBER(10,0), 
	"NOTADUPLIQUESVC" VARCHAR2(1), 
	"TIPOINSCPRESTSERV" NUMBER(1,0), 
	"INDICPRESTSERV" NUMBER(1,0), 
	"NUMTRANSENTDEPENDENTE" NUMBER(10,0), 
	"NUMTRANSVENDADEPENDENTE" NUMBER(10,0), 
	"ROTINACAD" VARCHAR2(48), 
	"NOMEARQUIVODOTZ" VARCHAR2(100), 
	"NOMEARQUIVODOTZESTORNO" VARCHAR2(100), 
	"PONTOSDOTZ" NUMBER(6,0), 
	"VLBASERETENCAO" NUMBER(18,6), 
	"CODRETENCAOCPRB" NUMBER(1,0), 
	"CODSTATUSSAT" NUMBER(10,0), 
	"NUMVIASGNRE" NUMBER(4,0), 
	"QTDEREPROCNFE" NUMBER(6,0), 
	"HORASAIDA" NUMBER(2,0), 
	"MINUTOSAIDA" NUMBER(2,0), 
	"CTEREGIMEESPECIAL" VARCHAR2(1) DEFAULT 'N', 
	"NFDEVENTFUTURA" VARCHAR2(1), 
	"QRCODENFCE" VARCHAR2(500), 
	"VLDESCFIN" NUMBER(18,6), 
	"PERDESCFINTOT" NUMBER(18,6), 
	"HORAENTREGA" NUMBER(2,0), 
	"MINUTOENTREGA" NUMBER(2,0), 
	"DTPAGCOMISSAO" DATE, 
	"UIDREGISTRO" NUMBER(10,0), 
	"IDPARCEIRO" VARCHAR2(15), 
	"ASSINATURA" VARCHAR2(100), 
	"IMPRIMIUDACTEJUNTODANFE" VARCHAR2(1), 
	"TRANSFDEP" VARCHAR2(1), 
	"TIPOTRANSFENTREDEPOSITO" VARCHAR2(1), 
	"NUMNOTAVINCULADA" NUMBER(10,0), 
	"TIPODOCARRECGNRE" VARCHAR2(1), 
	"UFBENEFICIARIA" VARCHAR2(2), 
	"NUMDOCARREC" VARCHAR2(255), 
	"CODAUTENTICACAO" VARCHAR2(255), 
	"VLDOCARRECADACAO" NUMBER(20,6), 
	"DTVENCARREC" DATE, 
	"DTPAGARREC" DATE, 
	"VLOPERACAOFRETE" NUMBER(14,2), 
	"VLBASESTFRETE" NUMBER(14,2), 
	"VLICMSSTFRETE" NUMBER(14,2), 
	"CTEGLOBALIZADO" VARCHAR2(1), 
	"TOMADORCTE" NUMBER(1,0), 
	"CNPJSEGURADORA" VARCHAR2(14), 
	"INFGLOBALIZADO" VARCHAR2(256), 
	"QTDEREPROCCTE" NUMBER(6,0) DEFAULT '0', 
	"PERCENTUALSTFRETE" NUMBER(14,2), 
	"DTPAGCOMISSAOOP" DATE, 
	"VLCSLL" NUMBER(18,6), 
	"CODEDITAL" NUMBER(9,0), 
	"FIL_MONTARKITAUTOMATICAMENTE" VARCHAR2(1), 
	"NUMNOTAORIGEM" NUMBER(10,0), 
	"PAGCHEQUEMORADIA" VARCHAR2(1), 
	"CODCOBSEFAZ" VARCHAR2(4), 
	"DIGITOVERIFICADORNFSE" VARCHAR2(100), 
	"LINKNFSE" VARCHAR2(100), 
	"PROTOCOLONFSE" VARCHAR2(16), 
	"SERIERPS" VARCHAR2(3), 
	"NUMERORPS" NUMBER(10,0), 
	"SITUACAONFSE" NUMBER(10,0), 
	"NUMNOTANFSE" NUMBER(18,0), 
	"MD5PAF" VARCHAR2(200), 
	"USAMULTUNIDITEM" VARCHAR2(1), 
	"CONDFINANC" VARCHAR2(9), 
	"PLANOSUPPLI" NUMBER(2,0), 
	"TIPOREMESSA" VARCHAR2(1), 
	"CODTRANSPAUTONOMO" NUMBER(10,0), 
	"VLTRANSPAUTONOMO" NUMBER(18,6), 
	"TRANSPAUTONOMO" VARCHAR2(1), 
	"GERARCPTRANSPAUNOTOMO" VARCHAR2(1), 
	"CODFORNECTRANSPAUTONOMO" NUMBER(10,0), 
	"VLTOTALFCPST" NUMBER(18,6), 
	"VLTOTALFCPICMS" NUMBER(18,6), 
	"VLFRETEOUTRASDESP" NUMBER(14,2), 
	"VLTOTALNFCOMPOEMCTE" NUMBER(22,6), 
	"DEDUZIRDESONERORGAOPUB" VARCHAR2(1), 
	"NUMSESSAOSAT" NUMBER(10,0), 
	"CODSEFAZSAT" NUMBER(10,0), 
	"TIPOCONTACORRENTE" VARCHAR2(1), 
	"NUMEROPROCESSO" VARCHAR2(14), 
	"TIPOPROCESSO" VARCHAR2(1), 
	"CODIGOINDICATIVOSUSPENSAO" VARCHAR2(14), 
	"CODPROMOCAOMED" NUMBER(9,0), 
	"CODPLPAGETICO" NUMBER(4,0), 
	"CODPLPAGGENERICO" NUMBER(4,0), 
	"VLPUNITMED" NUMBER(12,2), 
	"MATERIALDECONSTRUCAO" VARCHAR2(1), 
	"DEDUZIRICMSBASEPISCOFINS" VARCHAR2(1), 
	"CODMUNINICTE" NUMBER(7,0), 
	"CODMUNFIMCTE" NUMBER(7,0), 
	"VLCREDICMSPRESUMIDO" NUMBER(12,2), 
	"DATACONSOLIDACAOPREFAT" DATE, 
	"VERSAOLAYOUTNFE" VARCHAR2(5), 
	"OBSNFEFISCO" CLOB, 
	"PCT_ESTOQUE" VARCHAR2(1), 
	"PCT_CUSTO" VARCHAR2(1), 
	"CODDEVEDORCTE" NUMBER(6,0), 
	"VLSERVICOFRETEAUTON" NUMBER(10,2), 
	"VLBASEFRETEAUTON" NUMBER(10,2), 
	"ALIQICMFRETEAUTON" NUMBER(10,2), 
	"VLICMFRETEAUTON" NUMBER(10,2), 
	"CODFISCALFRETEAUTON" NUMBER(8,0), 
	"CODMUNICIPFATGERADOR" NUMBER(10,0), 
	"APROVEITASTDEVFORNEC" VARCHAR2(1), 
	"USASRVTERCEIROS" VARCHAR2(1), 
	"ENVIADASEMRESPOSTA" VARCHAR2(1), 
	"NUMNOTAPREF" NUMBER(18,0), 
	"STBCR" NUMBER(18,6), 
	"SOMAREPASSEOUTRASDESPNF" VARCHAR2(1), 
	"NFIPIEMITIDA" VARCHAR2(1) DEFAULT 'N', 
	"INDICADORDESCONTO" VARCHAR2(1), 
	"INDICADORACRESCIMO" VARCHAR2(1), 
	"CODCOORDENADOR" NUMBER(10,0), 
	"IDSOFITVIEW" VARCHAR2(10), 
	"DTEXCLUSAOSOFITVIEW" TIMESTAMP (6), 
	"CODGERENTENACIONAL" NUMBER(4,0), 
	"CODDIRETOR" NUMBER(4,0), 
	"CODGERENTEREGIONAL" NUMBER(4,0), 
	"PEDIDOAVARIA" VARCHAR2(1), 
	"NUMTRANSENTCROSSDOCK" NUMBER(10,0), 
	"QRCODE" VARCHAR2(1000), 
	"CODPROFISSIONAL" NUMBER(6,0), 
	"REDUZICMSDOCTE" VARCHAR2(1) DEFAULT 'N', 
	"VLJUROSPARCELAMENTO" NUMBER(18,2), 
	"PCT_ESTOQUE_CANCELAMENTO" VARCHAR2(1), 
	"PCT_CUSTO_CANCELAMENTO" VARCHAR2(1), 
	"NUMCIOT" VARCHAR2(20), 
	"NUMTRANSENTORIGTV10" NUMBER(10,0), 
	"NFBRINDEZERADA" VARCHAR2(1), 
	"NFBRINDE" VARCHAR2(1), 
	"QTPALETE" NUMBER(10,0), 
	"TOTPESOPALETE" NUMBER(12,6), 
	"CODIGONUMERICOCHAVE" VARCHAR2(8), 
	"TIPOIMPRESSAO" VARCHAR2(1), 
	"DEDUZFUNCEPBASEPISCOFINS" VARCHAR2(1), 
	"CNPJINTERMEDIADOR" VARCHAR2(20), 
	"DESCINTERMEDIADOR" VARCHAR2(60), 
	"DESFEZKITCANC" VARCHAR2(1), 
	"DTEXPWMSSAAS" DATE, 
	"CALCDESONERACAOFATMEDICAM" VARCHAR2(1), 
	"GERARCPCT" VARCHAR2(1), 
	"GERARCRCT" VARCHAR2(1), 
	"NUMCOLETA" VARCHAR2(20), 
	"NUMTRANSPAGDIGITAL" VARCHAR2(50), 
	 CONSTRAINT "PCNFSAID_PK" PRIMARY KEY ("NUMTRANSVENDA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE"  ENABLE, 
	 CONSTRAINT "PCNFSAID_UK" UNIQUE ("UIDREGISTRO", "IDPARCEIRO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" 
 LOB ("OBSNFE") STORE AS BASICFILE (
  TABLESPACE "TS_DADOS" ENABLE STORAGE IN ROW CHUNK 8192 PCTVERSION 10
  NOCACHE LOGGING 
  STORAGE(INITIAL 163840 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("OBSNFEFISCO") STORE AS BASICFILE (
  TABLESPACE "TS_DADOS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

CREATE OR REPLACE TRIGGER "AJEL"."TRG_PCNFSAID" 
   BEFORE INSERT OR UPDATE
   ON pcnfsaid
   REFERENCING NEW AS NEW OLD AS OLD
   FOR EACH ROW
DECLARE
/*****************************************************************************
                           Historico de Alteracoes
------------------------------------------------------------------------------
 Data        Responsavel           Tarefa      Alteracao
 ----------  --------------------  --------    -----------------------------------
 25/04/2006  Rogerio                           Criacao do Programa
 27/05/2008  Pablo                 63216       Totalização do PCNFSAID.VLBONIFIC conforme o PCMOV.QTCONT * PCMOV.PUNITCONT
 03/07/2008  Pablo                             Correção da totaliza da venda TV6 e TV12
 06/01/2009  Pablo                 99270       Consultar pela numtransvenda estave gerando erro ao consultar pelo numped.
*****************************************************************************/
   vnvlbonific                   NUMBER;
BEGIN
   IF     (:NEW.condvenda IN (5, 6, 11, 12))
      AND (:NEW.vlbonific IS NULL)
   THEN
      SELECT SUM ( round(   DECODE (:NEW.condvenda
                           ,6, pbonific
                           ,12, pbonific
                           ,punitcont
                           )
                  * DECODE (:NEW.condvenda
                           ,6, qt
                           ,12, qt
                           ,qtcont
                          ),2))
        INTO vnvlbonific
        FROM pcmov
       WHERE numtransvenda = :OLD.numtransvenda;

      :NEW.vlbonific             :=
           (vnvlbonific + NVL (:NEW.vlfrete, 0) + NVL (:NEW.vloutrasdesp, 0)
           );     
   END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_PCNFSAID" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."LOG_PCNFSAID" 
  BEFORE UPDATE ON PCNFSAID
  REFERENCING OLD AS OLD NEW AS NEW
  FOR EACH ROW
DECLARE  
  /*******************************************************************************
                              Historico de Alteracoes
  --------------------------------------------------------------------------------
    Data        Responsavel         Tarefa                    Alteracao
   -----------  -----------------      ---------------------   -----------------------------------------
   30/11/2005  Sabrina             23303                     Apenas gravar dados de rotinalanc
                                                                                se o mesmo estiver vazio
    15/01/2007  Sabrina            37619                     Correcao na gravacao de dados de usuario
                                                                                para tratar quando a execucao for
                                                                                acionada por jobs e nao usuarios
    07/07/2008  Rogério            64879                     Não atualizar campos MINUTOLANC e HORALANC
                                                                                da PCNFSAID se alteração for proviniente
                                                                                da Rotina 1303.
    13/05/2010  Thiago             107540                    Conforme solicitação Rafael Martins não atualizar os campos
                                                                                caso os mesmos esteja preenchidos MINUTOLANC e HORALANC
    26/09/2010  Thiago             144863                    Delimitando a quantidade de caracteres do campo "pcnfsaid.equiplanc"
    12/05/2016  Eddy.Pereira   2033.051131.2016 Separação da parte de gravação dos dados 
	                                                                apenas no insert e dos dados de update.
					Nova trigger com a parte do insert: TRG_PCNFSAID_DADOS_INICIAIS
  *******************************************************************************/
  VSEQUIPAMENTO VARCHAR2(64);
  VSUSUARIO     VARCHAR2(30);
  VSPROGRAMA    VARCHAR2(48);
BEGIN

  VSEQUIPAMENTO := SUBSTR(SYS_CONTEXT('USERENV', 'TERMINAL'), 1, 64);
  VSUSUARIO     := SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 30);
  VSPROGRAMA    := SUBSTR(SYS_CONTEXT('USERENV', 'MODULE'), 1, 48);

  :NEW.ROTINALANC := VSPROGRAMA;
  :NEW.EQUIPLANC := VSEQUIPAMENTO;
  :NEW.FUNCLANC  := VSUSUARIO;

   if (:new.VLTOTAL <> :old.VLTOTAL) then
    INSERT INTO PCLOGALTERACAODADOS
      (DATA,
       TABELA,
       COLUNA,
       TIPOVALOR,
       VALORALFA,
       TERMINAL,
       MAQUINA,
       PROGRAMA,
       OSUSER,
       OBSERVACOES,
       OBSERVACOES2,
       PCLOGALTERACAODADOS.VALORALFAANT,
       PCLOGALTERACAODADOS.VALORALFA
       )
    VALUES
      (SYSDATE,
       'PCNFSAID',
       'VLTOTAL',
       'N',
       'MUDANÇA DE INFORMAÇÃO',
       SYS_CONTEXT('USERENV', 'TERMINAL'),
       SYS_CONTEXT('USERENV', 'HOST'),
       SYS_CONTEXT('USERENV', 'MODULE'),
       SYS_CONTEXT('USERENV', 'OS_USER'),
       'VLTOTAL ALTERADO ' || 'NUMTRANSVENDA: ' || TO_CHAR(NVL(:NEW.NUMTRANSVENDA, 0)),
       ' NUMNOTA: ' || TO_CHAR(NVL(:NEW.NUMNOTA, 0)),
       :OLD.VLTOTAL,
       :NEW.VLTOTAL
       );
  end if;  
  if (:new.CHAVENFE <> :old.CHAVENFE) then
    INSERT INTO PCLOGALTERACAODADOS
      (DATA,
       TABELA,
       COLUNA,
       TIPOVALOR,
       VALORALFA,
       TERMINAL,
       MAQUINA,
       PROGRAMA,
       OSUSER,
       OBSERVACOES,
       OBSERVACOES2,
       PCLOGALTERACAODADOS.VALORALFAANT,
       PCLOGALTERACAODADOS.VALORALFA
       )
    VALUES
      (SYSDATE,
       'PCNFSAID',
       'CHAVENFE',
       'N',
       'MUDANÇA DE INFORMAÇÃO',
       SYS_CONTEXT('USERENV', 'TERMINAL'),
       SYS_CONTEXT('USERENV', 'HOST'),
       SYS_CONTEXT('USERENV', 'MODULE'),
       SYS_CONTEXT('USERENV', 'OS_USER'),
       'CHAVENFE ALTERADO ' || 'NUMTRANSVENDA: ' || TO_CHAR(NVL(:NEW.NUMTRANSVENDA, 0)),
       ' NUMNOTA: ' || TO_CHAR(NVL(:NEW.NUMNOTA, 0)),
       :OLD.CHAVENFE,
       :NEW.CHAVENFE
       );
  end if;
  if (:new.VLTOTGER <> :old.VLTOTGER) then
    INSERT INTO PCLOGALTERACAODADOS
      (DATA,
       TABELA,
       COLUNA,
       TIPOVALOR,
       VALORALFA,
       TERMINAL,
       MAQUINA,
       PROGRAMA,
       OSUSER,
       OBSERVACOES,
       OBSERVACOES2,
       PCLOGALTERACAODADOS.VALORALFAANT,
       PCLOGALTERACAODADOS.VALORALFA
       )
    VALUES
      (SYSDATE,
       'PCNFSAID',
       'VLTOTGER',
       'N',
       'MUDANÇA DE INFORMAÇÃO',
       SYS_CONTEXT('USERENV', 'TERMINAL'),
       SYS_CONTEXT('USERENV', 'HOST'),
       SYS_CONTEXT('USERENV', 'MODULE'),
       SYS_CONTEXT('USERENV', 'OS_USER'),
       'VLTOTGER ALTERADO ' || 'NUMTRANSVENDA: ' || TO_CHAR(NVL(:NEW.NUMTRANSVENDA, 0)),
       ' NUMNOTA: ' || TO_CHAR(NVL(:NEW.NUMNOTA, 0)),
       :OLD.VLTOTGER,
       :NEW.VLTOTGER
       );
  end if;  
  if (:new.NUMNOTA <> :old.NUMNOTA) then
    INSERT INTO PCLOGALTERACAODADOS
      (DATA,
       TABELA,
       COLUNA,
       TIPOVALOR,
       VALORALFA,
       TERMINAL,
       MAQUINA,
       PROGRAMA,
       OSUSER,
       OBSERVACOES,
       OBSERVACOES2,
       PCLOGALTERACAODADOS.VALORALFAANT,
       PCLOGALTERACAODADOS.VALORALFA
       )
    VALUES
      (SYSDATE,
       'PCNFSAID',
       'NUMNOTA',
       'N',
       'MUDANÇA DE INFORMAÇÃO',
       SYS_CONTEXT('USERENV', 'TERMINAL'),
       SYS_CONTEXT('USERENV', 'HOST'),
       SYS_CONTEXT('USERENV', 'MODULE'),
       SYS_CONTEXT('USERENV', 'OS_USER'),
       'NUMNOTA ALTERADO ' || 'NUMTRANSVENDA: ' || TO_CHAR(NVL(:NEW.NUMTRANSVENDA, 0)),
       ' NUMNOTA: ' || TO_CHAR(NVL(:NEW.NUMNOTA, 0)),
       :OLD.NUMNOTA,
       :NEW.NUMNOTA
       );
  end if;  
  if (:new.VLFRETE <> :old.VLFRETE) then
    INSERT INTO PCLOGALTERACAODADOS
      (DATA,
       TABELA,
       COLUNA,
       TIPOVALOR,
       VALORALFA,
       TERMINAL,
       MAQUINA,
       PROGRAMA,
       OSUSER,
       OBSERVACOES,
       OBSERVACOES2,
       PCLOGALTERACAODADOS.VALORALFAANT,
       PCLOGALTERACAODADOS.VALORALFA
       )
    VALUES
      (SYSDATE,
       'PCNFSAID',
       'VLFRETE',
       'N',
       'MUDANÇA DE INFORMAÇÃO',
       SYS_CONTEXT('USERENV', 'TERMINAL'),
       SYS_CONTEXT('USERENV', 'HOST'),
       SYS_CONTEXT('USERENV', 'MODULE'),
       SYS_CONTEXT('USERENV', 'OS_USER'),
       'VLFRETE ALTERADO ' || 'NUMTRANSVENDA: ' || TO_CHAR(NVL(:NEW.NUMTRANSVENDA, 0)),
       ' NUMNOTA: ' || TO_CHAR(NVL(:NEW.NUMNOTA, 0)),
       :OLD.VLFRETE,
       :NEW.VLFRETE
       );
  end if; 
  if (:new.ESPECIE <> :old.ESPECIE) then
    INSERT INTO PCLOGALTERACAODADOS
      (DATA,
       TABELA,
       COLUNA,
       TIPOVALOR,
       VALORALFA,
       TERMINAL,
       MAQUINA,
       PROGRAMA,
       OSUSER,
       OBSERVACOES,
       OBSERVACOES2,
       PCLOGALTERACAODADOS.VALORALFAANT,
       PCLOGALTERACAODADOS.VALORALFA
       )
    VALUES
      (SYSDATE,
       'PCNFSAID',
       'ESPECIE',
       'N',
       'MUDANÇA DE INFORMAÇÃO',
       SYS_CONTEXT('USERENV', 'TERMINAL'),
       SYS_CONTEXT('USERENV', 'HOST'),
       SYS_CONTEXT('USERENV', 'MODULE'),
       SYS_CONTEXT('USERENV', 'OS_USER'),
       'ESPECIE ALTERADO ' || 'NUMTRANSVENDA: ' || TO_CHAR(NVL(:NEW.NUMTRANSVENDA, 0)),
       ' NUMNOTA: ' || TO_CHAR(NVL(:NEW.NUMNOTA, 0)),
       :OLD.ESPECIE,
       :NEW.ESPECIE
       );
  end if;  
  if (:new.CODDEVOL <> :old.CODDEVOL) then
    INSERT INTO PCLOGALTERACAODADOS
      (DATA,
       TABELA,
       COLUNA,
       TIPOVALOR,
       VALORALFA,
       TERMINAL,
       MAQUINA,
       PROGRAMA,
       OSUSER,
       OBSERVACOES,
       OBSERVACOES2,
       PCLOGALTERACAODADOS.VALORALFAANT,
       PCLOGALTERACAODADOS.VALORALFA
       )
    VALUES
      (SYSDATE,
       'PCNFSAID',
       'CODDEVOL',
       'N',
       'MUDANÇA DE INFORMAÇÃO',
       SYS_CONTEXT('USERENV', 'TERMINAL'),
       SYS_CONTEXT('USERENV', 'HOST'),
       SYS_CONTEXT('USERENV', 'MODULE'),
       SYS_CONTEXT('USERENV', 'OS_USER'),
       'CODDEVOL ALTERADO ' || 'NUMTRANSVENDA: ' || TO_CHAR(NVL(:NEW.NUMTRANSVENDA, 0)),
       ' NUMNOTA: ' || TO_CHAR(NVL(:NEW.NUMNOTA, 0)),
       :OLD.CODDEVOL,
       :NEW.CODDEVOL
       );
  end if;    
  if (:new.DTSAIDA <> :old.DTSAIDA) then
    INSERT INTO PCLOGALTERACAODADOS
      (DATA,
       TABELA,
       COLUNA,
       TIPOVALOR,
       VALORALFA,
       TERMINAL,
       MAQUINA,
       PROGRAMA,
       OSUSER,
       OBSERVACOES,
       OBSERVACOES2,
       PCLOGALTERACAODADOS.VALORALFAANT,
       PCLOGALTERACAODADOS.VALORALFA
       )
    VALUES
      (SYSDATE,
       'PCNFSAID',
       'DTSAIDA',
       'D',
       'MUDANÇA DE INFORMAÇÃO',
       SYS_CONTEXT('USERENV', 'TERMINAL'),
       SYS_CONTEXT('USERENV', 'HOST'),
       SYS_CONTEXT('USERENV', 'MODULE'),
       SYS_CONTEXT('USERENV', 'OS_USER'),
       'DTSAIDA ALTERADO ' || 'NUMTRANSVENDA: ' || TO_CHAR(NVL(:NEW.NUMTRANSVENDA, 0)),
       ' NUMNOTA: ' || TO_CHAR(NVL(:NEW.NUMNOTA, 0)),
       :OLD.DTSAIDA,
       :NEW.DTSAIDA
       );
  end if;    
  if (:new.NUMTRANSVENDA <> :old.NUMTRANSVENDA) then
    INSERT INTO PCLOGALTERACAODADOS
      (DATA,
       TABELA,
       COLUNA,
       TIPOVALOR,
       VALORALFA,
       TERMINAL,
       MAQUINA,
       PROGRAMA,
       OSUSER,
       OBSERVACOES,
       OBSERVACOES2,
       PCLOGALTERACAODADOS.VALORALFAANT,
       PCLOGALTERACAODADOS.VALORALFA
       )
    VALUES
      (SYSDATE,
       'PCNFSAID',
       'NUMTRANSVENDA',
       'N',
       'MUDANÇA DE INFORMAÇÃO',
       SYS_CONTEXT('USERENV', 'TERMINAL'),
       SYS_CONTEXT('USERENV', 'HOST'),
       SYS_CONTEXT('USERENV', 'MODULE'),
       SYS_CONTEXT('USERENV', 'OS_USER'),
       'NUMTRANSENT ALTERADO ' || 'NUMTRANSVENDA: ' || TO_CHAR(NVL(:NEW.NUMTRANSVENDA, 0)),
       ' NUMNOTA: ' || TO_CHAR(NVL(:NEW.NUMNOTA, 0)),
       :OLD.NUMTRANSVENDA,
       :NEW.NUMTRANSVENDA
       );
  end if;    
  if (:new.ICMSRETIDO <> :old.ICMSRETIDO) then
    INSERT INTO PCLOGALTERACAODADOS
      (DATA,
       TABELA,
       COLUNA,
       TIPOVALOR,
       VALORALFA,
       TERMINAL,
       MAQUINA,
       PROGRAMA,
       OSUSER,
       OBSERVACOES,
       OBSERVACOES2,
       PCLOGALTERACAODADOS.VALORALFAANT,
       PCLOGALTERACAODADOS.VALORALFA
       )
    VALUES
      (SYSDATE,
       'PCNFSAID',
       'ICMSRETIDO',
       'N',
       'MUDANÇA DE INFORMAÇÃO',
       SYS_CONTEXT('USERENV', 'TERMINAL'),
       SYS_CONTEXT('USERENV', 'HOST'),
       SYS_CONTEXT('USERENV', 'MODULE'),
       SYS_CONTEXT('USERENV', 'OS_USER'),
       'ICMSRETIDO ALTERADO ' || 'NUMTRANSVENDA: ' || TO_CHAR(NVL(:NEW.NUMTRANSVENDA, 0)),
       ' NUMNOTA: ' || TO_CHAR(NVL(:NEW.NUMNOTA, 0)),
       :OLD.ICMSRETIDO,
       :NEW.ICMSRETIDO
       );
  end if; 
  if (:new.DTFAT <> :old.DTFAT) then
    INSERT INTO PCLOGALTERACAODADOS
      (DATA,
       TABELA,
       COLUNA,
       TIPOVALOR,
       VALORALFA,
       TERMINAL,
       MAQUINA,
       PROGRAMA,
       OSUSER,
       OBSERVACOES,
       OBSERVACOES2,
       PCLOGALTERACAODADOS.VALORALFAANT,
       PCLOGALTERACAODADOS.VALORALFA
       )
    VALUES
      (SYSDATE,
       'PCNFSAID',
       'DTFAT',
       'D',
       'MUDANÇA DE INFORMAÇÃO',
       SYS_CONTEXT('USERENV', 'TERMINAL'),
       SYS_CONTEXT('USERENV', 'HOST'),
       SYS_CONTEXT('USERENV', 'MODULE'),
       SYS_CONTEXT('USERENV', 'OS_USER'),
       'DTFAT ALTERADO ' || 'NUMTRANSVENDA: ' || TO_CHAR(NVL(:NEW.NUMTRANSVENDA, 0)),
       ' NUMNOTA: ' || TO_CHAR(NVL(:NEW.NUMNOTA, 0)),
       :OLD.DTFAT,
       :NEW.DTFAT
       );
  end if;    
  if (:new.VLOUTRASDESP <> :old.VLOUTRASDESP) then
    INSERT INTO PCLOGALTERACAODADOS
      (DATA,
       TABELA,
       COLUNA,
       TIPOVALOR,
       VALORALFA,
       TERMINAL,
       MAQUINA,
       PROGRAMA,
       OSUSER,
       OBSERVACOES,
       OBSERVACOES2,
       PCLOGALTERACAODADOS.VALORALFAANT,
       PCLOGALTERACAODADOS.VALORALFA
       )
    VALUES
      (SYSDATE,
       'PCNFSAID',
       'VLOUTRASDESP',
       'N',
       'MUDANÇA DE INFORMAÇÃO',
       SYS_CONTEXT('USERENV', 'TERMINAL'),
       SYS_CONTEXT('USERENV', 'HOST'),
       SYS_CONTEXT('USERENV', 'MODULE'),
       SYS_CONTEXT('USERENV', 'OS_USER'),
       'VLOUTRASDESP ALTERADO ' || 'NUMTRANSVENDA: ' || TO_CHAR(NVL(:NEW.NUMTRANSVENDA, 0)),
       ' NUMNOTA: ' || TO_CHAR(NVL(:NEW.NUMNOTA, 0)),
       :OLD.VLOUTRASDESP,
       :NEW.VLOUTRASDESP
       );
  end if;   
END;
/
ALTER TRIGGER "AJEL"."LOG_PCNFSAID" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."T_PCNFSAID_HISTORICO" BEFORE INSERT OR UPDATE
       ON PCNFSAID REFERENCING NEW AS NEW FOR EACH ROW
DECLARE
  /************************************************************************************************
  Proposito: Trigger para gravação dos dados de cadastro (historico de movimentação)
  Rotina: Pacote
  Utilizada por: rotinas que fazem inclusão na PCNFSAID
  ------------------------------------------------------------------------------------------------
  Data        Responsavel       Descricao
  ----------  --------------    --------------------------------------------------------------------
  17/11/2008  Ricardo           Criação da trigger
  01/03/2010  Ricardo           Trigger não mais travará o processo, apenas gerará Log na tabela
                                PCLOGALTERACAODADOS.
  08/03/2010  Ricardo           Trigger alterada para pegar dados da PCVENDACONSUM somente se
                                CODCLI for 1, 2 ou 3.
  03/09/2010  Natanael          Trigger alterada para gravar o AmbienteNFE no qual a nota foi aprovada.
  07/04/2011  Thiago Melo       Alterada trigger para gravação do campo PCNFSAID.IEENT de acordo com o
                                campo PCCLIENT.IEENT.
  10/10/2012  Rodrigo Guimaraes Alterado a trigger para gravar o endereço de entrega do pedido de acordo
                                com a tabela PCENDERECOENTREGAPEDIDO. Caso não existe o registro na
                                tabela, mantém a regra de gravação atual.
   25/06/2019 Gleibe Alterado a verificação do parametro DEDUZIRICMSBASEPISCOFINS 
                                 para EXCLUIRICMSBASEPISCOFINS. O excluir é o representante da saída 
                                 e deverá ser gravado no campo PCNFSAID.DEDUZIRICMSBASEPISCOFINS.
  ************************************************************************************************/

  VTIPOALIQOUTRASDESP          PCNFSAID.TIPOALIQOUTRASDESP%type;
  VAGREGARSTPRODSINTEGRA       PCNFSAID.AGREGARSTPRODSINTEGRA%type;
  VCODCONTCLI                  PCNFSAID.CODCONTCLI%type;
  VPERCICMFRETE                PCNFSAID.PERCICMFRETE%type;
  VPERCICMINTERFRETE           number(4, 2);
  VALIQICMOUTRASDESP           PCNFSAID.ALIQICMOUTRASDESP%type;
  VALIQICMINTEROUTRASDESP      number(4, 2);
  VCODFISCALFRETE              PCNFSAID.CODFISCALFRETE%type;
  VCODFISCALINTERFRETE         number(4);
  VCODFISCALOUTRASDESP         PCNFSAID.CODFISCALOUTRASDESP%type;
  VCODFISCALINTEROUTRASDESP    number(4);
  VCODFISCALDEVOUTRASDESP      number(4);
  VCODFISCALINTERDEVOUTRASDESP number(4);
  VUFFILIAL                    PCNFSAID.UFFILIAL%type;
  VCODFILIAL                   PCNFSAID.CODFILIAL%type;
  VCFOPFRETE                   number(4);
  VCFOPDESPESA                 number(4);
  VALIQICMSFRETE               number(4, 2);
  VALIQICMSDESPESA             number(4, 2);
  VVLPIS                       PCNFSAID.VLPIS%type;
  VVLCOFINS                    PCNFSAID.VLCOFINS%type;
  VCODFISCALNF                 PCNFSAID.CODFISCALNF%type;
  VMENSAGEM_ERRO               varchar2(100);
  VAMBIENTENFE                 PCNFSAID.AMBIENTENFE%type;
  VAMBIENTECTE                 PCNFSAID.AMBIENTECTE%type;
  VGERARBCRNFE                 PCNFSAID.GERARBCRNFE%type;
  VSIEENT                      PCCLIENT.IEENT%type;
  VENDERECOENTREGAPEDIDO       PCENDERECOENTREGAPEDIDO%rowtype;
  VERRO_TRIBUTACAO             exception;
  VNUMTRANSITEM                NUMBER;
  VTIPODANFE                   PCFILIAL.TIPODANFE%type;
  ------------------------------------------------------------------------------------------------
  -- FUNÇÕES GERAR LOG SE OCORRER UM ERRO
  ------------------------------------------------------------------------------------------------
  procedure GERAR_LOG(PMENSAGEM_ERRO in varchar2, PLINHA_ERRO in varchar2) is
  begin
    insert into PCLOGALTERACAODADOS
      (DATA,
       TABELA,
       COLUNA,
       TIPOVALOR,
       VALORALFA,
       TERMINAL,
       MAQUINA,
       PROGRAMA,
       OSUSER,
       OBSERVACOES,
       OBSERVACOES2)
    values
      (sysdate,
       'PCNFSAID',
       'INDEFINIDA',
       'A',
       'ERRO NA INCLUSÃO DO REGISTRO',
       SYS_CONTEXT('USERENV', 'TERMINAL'),
       SYS_CONTEXT('USERENV', 'HOST'),
       SYS_CONTEXT('USERENV', 'MODULE'),
       SYS_CONTEXT('USERENV', 'OS_USER'),
       'ERRO TRIGGER HISTORICO: NUMTRANSVENDA: ' ||
       TO_CHAR(NVL(:new.NUMTRANSVENDA, 0)) || ' NUMNOTA: ' ||
       TO_CHAR(NVL(:new.NUMNOTA, 0)),
       'ERRO ORIGINAL: ' || PMENSAGEM_ERRO || PLINHA_ERRO);
  end;

  /****************************************************************************/
  function GET_VALORCLIENTE(PCODCLI        in number,
                            PCONSUMIDOR    in varchar2,
                            PVENDACONSUM   in varchar2,
                            PVALOR_CONSUM  in varchar2,
                            PVALOR_CLIENTE in varchar2,
                            PVALOR_FILIAL  in varchar2) return varchar2 is
  begin
    case
      when PCODCLI in (1, 2, 3) then
        if PVENDACONSUM = 'S'
        then
          return PVALOR_CONSUM;
        elsif PCONSUMIDOR = 'S'
        then
          return PVALOR_FILIAL;
        else
          return PVALOR_CLIENTE;
        end if;
      else
        return PVALOR_CLIENTE;
    end case;
  end;
  ------------------------------------------------------------------------------------------------
  -- FUNÇÕES PARA RECUPERAR INFORMAÇÕES SOBRE A TRIBUTAÇÃO DE FRETE E DESPESAS ACESSORRIAS
  ------------------------------------------------------------------------------------------------
  procedure ATUALIZAR_TRIBUTACOES is
  begin
    if VTIPOALIQOUTRASDESP <> 'T'
    then
      VCFOPFRETE       := case when VUFFILIAL = :new.UF then VCODFISCALFRETE else VCODFISCALINTERFRETE end;
      VCFOPDESPESA     := case when VUFFILIAL = :new.UF then VCODFISCALOUTRASDESP else VCODFISCALINTEROUTRASDESP end;
      VALIQICMSFRETE   := case when VUFFILIAL = :new.UF then VPERCICMFRETE else VPERCICMINTERFRETE end;
      VALIQICMSDESPESA := case when VUFFILIAL = :new.UF then VALIQICMOUTRASDESP else VALIQICMINTEROUTRASDESP end;
    else
      begin
        select DECODE(:new.TIPOVENDA,
                      'DF',
                      NVL(CODFISCALFRETEDEVFORNEC, CODFISCALFRETE),
                      DECODE(NVL(:new.CONSUMIDORFINAL, 'N') || :new.TIPOFJ,
                             'SF',
                             NVL(CODFISCALFRETEPF, CODFISCALFRETE),
                             CODFISCALFRETE)),
               DECODE(:new.TIPOVENDA,
                      'DF',
                      DECODE(NVL(:new.CONSUMIDORFINAL, 'N') || :new.TIPOFJ,
                             'SF',
                             NVL(CODFISCALDEVOUTRASDESPPF,
                                 CODFISCALDEVOUTRASDESP),
                             CODFISCALDEVOUTRASDESP),
                      DECODE(NVL(:new.CONSUMIDORFINAL, 'N') || :new.TIPOFJ,
                             'SF',
                             CODFISCALOUTRASDESPPF,
                             CODFISCALOUTRASDESP)),
               DECODE(:new.TIPOVENDA,
                      'DF',
                      NVL(ALIQICMFRETEDEVFORNEC, PERCICMFRETE),
                      DECODE(NVL(:new.CONSUMIDORFINAL, 'N') || :new.TIPOFJ,
                             'SF',
                             NVL(PERCICMFRETEPF, PERCICMFRETE),
                             PERCICMFRETE)),
               DECODE(NVL(:new.CONSUMIDORFINAL, 'N') || :new.TIPOFJ,
                      'SF',
                      NVL(ALIQICMOUTRASDESPPF, ALIQICMOUTRASDESP),
                      ALIQICMOUTRASDESP)
          into VCFOPFRETE, VCFOPDESPESA, VALIQICMSFRETE, VALIQICMSDESPESA
          from PCTRIBOUTROS
         where UFDESTINO = :new.UF
           and CODFILIALNF = VCODFILIAL;
      exception
        when others then
          VMENSAGEM_ERRO := 'TRIBUTAÇÃO POR ESTADO INEXISTENTE (ROTINA 596)! FILIAL: ' ||
                            VCODFILIAL || ' UF DESTINO: ' || :new.UF;
          raise VERRO_TRIBUTACAO;
      end;
    end if;
  end;
begin
   IF INSERTING
   THEN
----------------------------------------------------------------------------------
     -- BUSCAR PARAMETROS GERAIS
     ----------------------------------------------------------------------------------
     begin
       select TIPOALIQOUTRASDESP,
              PERCICMFRETE,
              PERCICMINTERFRETE,
              ALIQICMOUTRASDESP,
              ALIQICMINTEROUTRASDESP,
              CODFISCALFRETE,
              CODFISCALINTERFRETE,
              CODFISCALOUTRASDESP,
              CODFISCALINTEROUTRASDESP,
              CODFISCALDEVOUTRASDESP,
              CODFISCALINTERDEVOUTRASDESP,
              AGREGARSTPRODSINTEGRA,
              CODCONTCLI
         into VTIPOALIQOUTRASDESP,
              VPERCICMFRETE,
              VPERCICMINTERFRETE,
              VALIQICMOUTRASDESP,
              VALIQICMINTEROUTRASDESP,
              VCODFISCALFRETE,
              VCODFISCALINTERFRETE,
              VCODFISCALOUTRASDESP,
              VCODFISCALINTEROUTRASDESP,
              VCODFISCALDEVOUTRASDESP,
              VCODFISCALINTERDEVOUTRASDESP,
              VAGREGARSTPRODSINTEGRA,
              VCODCONTCLI
         from PCCONSUM;
     exception
       when others then
         null;
     end;

     ----------------------------------------------------------------------------------
     -- BUSCAR PARAMETROS DA TABELA PCPARAMFILIAL (NOVA 132)
     ----------------------------------------------------------------------------------
     begin
       select VALOR AMBIENTENFE
         into VAMBIENTENFE
         from PCPARAMFILIAL
        where CODFILIAL = NVL(:new.CODFILIALNF, :new.CODFILIAL)
          and NOME = 'AMBIENTENFE';
     exception
       when others then
         null;
     end;
     
     begin
       select VALOR AMBIENTECTE
         into VAMBIENTECTE
         from PCPARAMFILIAL
        where CODFILIAL = NVL(:new.CODFILIALNF, :new.CODFILIAL)
          and NOME = 'AMBIENTECTE';
     exception
       when others then
         null;
     end;

    ----------------------------------------------------------------------------------
     -- BUSCAR PARAMETROS DA TABELA PCPARAMFILIAL, BUSCAR O PARAMETRO GERARCRNFE (NOVA 132)
     ----------------------------------------------------------------------------------
     begin
       select VALOR  GERARBCRNFE
         into VGERARBCRNFE
         from PCPARAMFILIAL
        where CODFILIAL = NVL(:new.CODFILIALNF, :new.CODFILIAL)
           and NOME = 'GERARBCRNFE';
     exception
       when others then
         null;
     end;

     ----------------------------------------------------------------------------------
     -- BUSCAR DADOS DO CLIENTE DA NOTA
     ----------------------------------------------------------------------------------
     begin
       select PCCLIENT.IEENT
         into VSIEENT
         from PCCLIENT
        where PCCLIENT.CODCLI = :new.CODCLI;
     end;

     ----------------------------------------------------------------------------------
     -- BUSCAR PARAMETROS POR FILIAL
     ----------------------------------------------------------------------------------
     begin
       select CODIGO, UF, TIPODANFE
         into VCODFILIAL, VUFFILIAL, VTIPODANFE
         from PCFILIAL
        where CODIGO = NVL(:new.CODFILIALNF, :new.CODFILIAL);
     exception
       when others then
         null;
     end;

     ----------------------------------------------------------------------------------
     if VTIPOALIQOUTRASDESP = 'F'
     then
       begin
         select ALIQICMOUTRASDESP,
                ALIQICMINTEROUTRASDESP,
                CODFISCALOUTRASDESP,
                CODFISCALINTEROUTRASDESP
           into VALIQICMOUTRASDESP,
                VALIQICMINTEROUTRASDESP,
                VCODFISCALOUTRASDESP,
                VCODFISCALINTEROUTRASDESP
           from PCFILIAL
          where CODIGO = VCODFILIAL;
       exception
         when others then
           null;
       end;
     end if;

     ----------------------------------------------------------------------------------
     for DADOS in (select C.CLIENTE,
                          C.CODCLI,
                          case
                            when trim(UPPER(C.CLIENTE)) like '%CONSUMIDOR%' then
                             'S'
                            else
                             'N'
                          end CLIENTE_CONSUMIDOR,
                          C.CGCENT CGCCLIENTE,
                          C.IEENT IECLIENTE,
                          C.ENDERENT ENDERCLIENTE,
                          C.BAIRROENT BAIRROCLIENTE,
                          C.MUNICENT CIDADECLIENTE,
                          C.CEPENT CEPCLIENTE,
                          C.ESTENT UFCLIENTE,
                          C.TIPOFJ TIPOFJCLIENTE,
                          C.CODCIDADE CODCIDADECLIENTE,
                          C.CONSUMIDORFINAL,
                          C.CLIENTEFONTEST,
                          C.SULFRAMA,
                          C.ORGAOPUB,
                          C.ORGAOPUBFEDERAL,
                          C.ORGAOPUBMUNICIPAL,
                          C.TIPOEMPRESA,
                          C.CONTRIBUINTE,
                          C.CODATV1,
                          C.TELENT TELEFONECLI,
                          C.EMAIL EMAILCLI,
                          C.NUMEROENT NUMEROCLI,
                          FL.CODCLI CODCLIFILIAL,
                          NVL((select ATACADISTA
                                from PCATIVI
                               where CODATIV = C.CODATV1),
                              'S') ATACADISTA,
                          case
                            when (C.CODCLI in (1, 2, 3)) then
                             'S'
                            else
                             'N'
                          end CODCLI_123,
                          case
                            when (NVL((select NUMPED
                                        from PCVENDACONSUM
                                       where NUMPED = :new.NUMPED),
                                      0) > 0) and (C.CODCLI in (1, 2, 3)) then
                             'S'
                            else
                             'N'
                          end VENDACONSUM,
                          (select FORNECEDOR
                             from PCFORNEC
                            where CODFORNEC = :new.CODFORNECFRETE) TRANSPORTADORA,
                          (select CGC
                             from PCFORNEC
                            where CODFORNEC = :new.CODFORNECFRETE) CGCFRETE,
                          (select IE
                             from PCFORNEC
                            where CODFORNEC = :new.CODFORNECFRETE) IEFRETE,
                          (select ESTADO
                             from PCFORNEC
                            where CODFORNEC = :new.CODFORNECFRETE) UFFRETE,
                          (select CLIENTE
                             from PCVENDACONSUM
                            where NUMPED = :new.NUMPED) CONSUMIDOR,
                          (select CGCENT
                             from PCVENDACONSUM
                            where NUMPED = :new.NUMPED) CGCCONSUM,
                          (select IEENT
                             from PCVENDACONSUM
                            where NUMPED = :new.NUMPED) IECONSUM,
                          (select ENDERENT
                             from PCVENDACONSUM
                            where NUMPED = :new.NUMPED) ENDERCONSUM,
                          (select BAIRROENT
                             from PCVENDACONSUM
                            where NUMPED = :new.NUMPED) BAIRROCONSUM,
                          (select MUNICENT
                             from PCVENDACONSUM
                            where NUMPED = :new.NUMPED) CIDADECONSUM,
                          (select CEPENT
                             from PCVENDACONSUM
                            where NUMPED = :new.NUMPED) CEPCONSUM,
                          (select ESTENT
                             from PCVENDACONSUM
                            where NUMPED = :new.NUMPED) UFCONSUM,
                          (select CODCIDADE
                             from PCVENDACONSUM
                            where NUMPED = :new.NUMPED) CODCIDADECONSUM,
                          'F' TIPOFJCONSUM,
                          C.PAISENT CODPAIS_CLIENTE,
                          (select CODPAIS from PCPAIS where CODPAIS = E.CODPAIS) CODPAIS,
                          (select DESCRICAO
                             from PCPAIS
                            where CODPAIS = E.CODPAIS) DESCPAIS,
                          (select TELENT
                             from PCVENDACONSUM
                            where NUMPED = :new.NUMPED) TELEFONECONSUM,
                          (select NUMEROENT
                             from PCVENDACONSUM
                            where NUMPED = :new.NUMPED) NUMEROCONSUM,
                          (select EMAIL
                             from PCVENDACONSUM
                            where NUMPED = :new.NUMPED) EMAILCONSUM,
                          FL.CIDADE CIDADEFILIAL,
                          FL.BAIRRO BAIRROFILIAL,
                          FL.ENDERECO ENDERFILIAL,
                          FL.CODMUN CODIBGEFILIAL,
                          FL.CEP CEPFILIAL,
                          FL.CGC CGCFILIAL,
                          FL.IE IEFILIAL,
                          FL.UF UFFILIAL,
                          FL.CODFORNEC CODFORFILIAL,
                          (select ST.IESUBSTTRIBUT
                             from PCINSCRICAOST ST
                            where ST.CODFILIAL = FL.CODIGO
                              and ST.UF = C.ESTENT) IESUBSTTRIBUT,
                          (select V.PLACA
                             from PCCARREG CA, PCVEICUL V
                            where CA.NUMCAR = :new.NUMCAR
                              and CA.CODVEICULO = V.CODVEICULO(+)) PLACA,
                          (select V.UFPLACAVEICULO
                             from PCCARREG CA, PCVEICUL V
                            where CA.NUMCAR = :new.NUMCAR
                              and CA.CODVEICULO = V.CODVEICULO(+)) UFPLACA,
                          E.CODIGO UFCODIGO,
                          NVL((select VLPAUTAFRETE
                                from PCPRACA
                               where CODPRACA = :new.CODPRACA),
                              0) VLPAUTAFRETE,
                          (select COBRANCA from PCCOB where CODCOB = :new.CODCOB) COBRANCA,
                          FL.EMAIL EMAILFIL,
                          FL.TELEFONE TELEFONEFIL,
                          TO_CHAR(FL.NUMERO) NUMEROFIL,
                          C.SIMPLESNACIONAL,
                          TRIM(UPPER(C.CLIENTE)) NOME_CLIENTE
                     from PCCLIENT C, PCFILIAL FL, PCESTADO E
                    where C.CODCLI = DECODE(NVL(:new.CODCLINF, 0),
                                            0,
                                            :new.CODCLI,
                                            :new.CODCLINF)
                      and C.ESTENT = E.UF(+)
                      and FL.CODIGO(+) = VCODFILIAL)
     loop
       --------------------------------------------------------------------------------
       -- Processo para integracao com e-commerce
       -- Recuperar na tabela PCENDERECOENTREGAPEDIDO o endereco informado no pedido
       --------------------------------------------------------------------------------
       begin
         select * into VENDERECOENTREGAPEDIDO
         from PCENDERECOENTREGAPEDIDO
         where NUMPED = :new.NUMPED and rownum = 1;
       exception
         when others then
            VENDERECOENTREGAPEDIDO := null;
       end;

       --------------------------------------------------------------------------------
       begin
         select sum(QTCONT * NVL(VLPIS, 0)) VLPIS,
                sum(QTCONT * NVL(VLCOFINS, 0)) VLCOFINS,
                min(CODFISCAL) CODFISCALNF
           into VVLPIS, VVLCOFINS, VCODFISCALNF
           from PCMOV
          where NUMTRANSVENDA = :new.NUMTRANSVENDA
            and DTCANCEL is null
            and QTCONT > 0;
       exception
         when others then
           begin
             VVLPIS    := 0;
             VVLCOFINS := 0;

             begin
               select max(CODFISCAL)
                 into VCODFISCALNF
                 from PCNFBASE
                where NUMTRANSVENDA = :new.NUMTRANSVENDA;
             exception
               when others then
                 null;
             end;
           end;
       end;

       --------------------------------------------------------------------------------
       :new.IEENT        := VSIEENT;
       :new.CLIENTE      := NVL(:new.CLIENTE, case when DADOS.CODCLI_123 = 'S' and DADOS.VENDACONSUM = 'S' then DADOS.CONSUMIDOR else DADOS.CLIENTE end);
       :new.CGC          := NVL(:new.CGC, case when DADOS.CODCLI_123 = 'S' and DADOS.VENDACONSUM = 'S' then DADOS.CGCCONSUM else DADOS.CGCCLIENTE end);
       :new.IE           := NVL(:new.IE, case when DADOS.CODCLI_123 = 'S' and DADOS.VENDACONSUM = 'S' then DADOS.IECONSUM else DADOS.IECLIENTE end);
       :new.ENDERECO     := NVL(VENDERECOENTREGAPEDIDO.ENDERECO, NVL(:new.ENDERECO,
                                GET_VALORCLIENTE(DADOS.CODCLI,
                                                 DADOS.CLIENTE_CONSUMIDOR,
                                                 DADOS.VENDACONSUM,
                                                 DADOS.ENDERCONSUM,
                                                 DADOS.ENDERCLIENTE,
                                                 DADOS.ENDERFILIAL)));
       :new.BAIRRO       := NVL(VENDERECOENTREGAPEDIDO.BAIRRO, NVL(:new.BAIRRO,
                                GET_VALORCLIENTE(DADOS.CODCLI,
                                                 DADOS.CLIENTE_CONSUMIDOR,
                                                 DADOS.VENDACONSUM,
                                                 DADOS.BAIRROCONSUM,
                                                 DADOS.BAIRROCLIENTE,
                                                 DADOS.BAIRROFILIAL)));
       :new.MUNICIPIO    := NVL(VENDERECOENTREGAPEDIDO.MUNICIPIO, NVL(:new.MUNICIPIO,
                                GET_VALORCLIENTE(DADOS.CODCLI,
                                                 DADOS.CLIENTE_CONSUMIDOR,
                                                 DADOS.VENDACONSUM,
                                                 DADOS.CIDADECONSUM,
                                                 DADOS.CIDADECLIENTE,
                                                 DADOS.CIDADEFILIAL)));
       :new.CEP          := NVL(VENDERECOENTREGAPEDIDO.CEP, NVL(:new.CEP,
                                GET_VALORCLIENTE(DADOS.CODCLI,
                                                 DADOS.CLIENTE_CONSUMIDOR,
                                                 DADOS.VENDACONSUM,
                                                 DADOS.CEPCONSUM,
                                                 DADOS.CEPCLIENTE,
                                                 DADOS.CEPFILIAL)));
       :new.UF           := NVL(VENDERECOENTREGAPEDIDO.ESTADO, NVL(:new.UF,
                                GET_VALORCLIENTE(DADOS.CODCLI,
                                                 DADOS.CLIENTE_CONSUMIDOR,
                                                 DADOS.VENDACONSUM,
                                                 DADOS.UFCONSUM,
                                                 DADOS.UFCLIENTE,
                                                 DADOS.UFFILIAL)));
       :new.TIPOFJ       := NVL(:new.TIPOFJ, case when DADOS.CODCLI_123 = 'S' and DADOS.VENDACONSUM = 'S' then DADOS.TIPOFJCONSUM else DADOS.TIPOFJCLIENTE end);
       :new.CODMUNICIPIO := NVL(VENDERECOENTREGAPEDIDO.CODCIDADE,
                                                                  NVL(:new.CODMUNICIPIO, case when DADOS.CODCLI_123 = 'S' and DADOS.VENDACONSUM = 'S' then DADOS.CODCIDADECONSUM else DADOS.CODCIDADECLIENTE end));
       :new.TELEFONE     := NVL(VENDERECOENTREGAPEDIDO.TELEFONE, NVL(:new.TELEFONE,
                                GET_VALORCLIENTE(DADOS.CODCLI,
                                                 DADOS.CLIENTE_CONSUMIDOR,
                                                 DADOS.VENDACONSUM,
                                                 DADOS.TELEFONECONSUM,
                                                 DADOS.TELEFONECLI,
                                                 DADOS.TELEFONEFIL)));
       :new.EMAILDEST    := NVL(:new.EMAILDEST,
                                GET_VALORCLIENTE(DADOS.CODCLI,
                                                 DADOS.CLIENTE_CONSUMIDOR,
                                                 DADOS.VENDACONSUM,
                                                 DADOS.EMAILCONSUM,
                                                 DADOS.EMAILCLI,
                                                 DADOS.EMAILFIL));
       :new.NUMENDERECO  := NVL(VENDERECOENTREGAPEDIDO.NUMERO, NVL(:new.NUMENDERECO,
                                GET_VALORCLIENTE(DADOS.CODCLI,
                                                 DADOS.CLIENTE_CONSUMIDOR,
                                                 DADOS.VENDACONSUM,
                                                 DADOS.NUMEROCONSUM,
                                                 DADOS.NUMEROCLI,
                                                 DADOS.NUMEROFIL)));
       :new.AGREGASTVLMERC := PARAMFILIAL.OBTERCOMOVARCHAR2('AGREGASTVLMERC',
                                                              VCODFILIAL);
       :new.SIMPLESNACIONAL := DADOS.SIMPLESNACIONAL;

       -- ATRIBUINDO CODIBGE
       begin         
         if (((DADOS.CODCLI_123 = 'S') AND (DADOS.NOME_CLIENTE = 'CONSUMIDOR FINAL')) and 
              DADOS.VENDACONSUM = 'N')
         then
           :new.CODIBGE := DADOS.CODIBGEFILIAL;

           --------------------------------------
           select max(NVL(:new.CODMUNICIPIO, CODCIDADE))
             into :new.CODMUNICIPIO
             from PCCIDADE
            where CODIBGE = DADOS.CODIBGEFILIAL;
         else
           select NVL(:new.CODIBGE, CODIBGE)
             into :new.CODIBGE
             from PCCIDADE
            where CODCIDADE = :new.CODMUNICIPIO;
         end if;
       exception
         when others then
           null;
       end;

       :new.CONSUMIDORFINAL   := NVL(:new.CONSUMIDORFINAL, DADOS.CONSUMIDORFINAL);
       :new.CLIENTEFONTEST    := NVL(:new.CLIENTEFONTEST, DADOS.CLIENTEFONTEST);
       :new.SULFRAMA          := NVL(:new.SULFRAMA, DADOS.SULFRAMA);
       :new.ORGAOPUB          := NVL(:new.ORGAOPUB, DADOS.ORGAOPUB);
       :new.ORGAOPUBFEDERAL   := NVL(:new.ORGAOPUBFEDERAL, DADOS.ORGAOPUBFEDERAL);
       :new.ORGAOPUBMUNICIPAL := NVL(:new.ORGAOPUBMUNICIPAL, DADOS.ORGAOPUBMUNICIPAL);
       :new.TIPOEMPRESA       := NVL(:new.TIPOEMPRESA, DADOS.TIPOEMPRESA);
       :new.CONTRIBUINTE      := NVL(:new.CONTRIBUINTE, DADOS.CONTRIBUINTE);
       :new.TRANSPORTADORA    := NVL(:new.TRANSPORTADORA, DADOS.TRANSPORTADORA);
       :new.CGCFRETE          := NVL(:new.CGCFRETE, DADOS.CGCFRETE);
       :new.IEFRETE           := NVL(:new.IEFRETE, DADOS.IEFRETE);
       :new.UFFRETE           := NVL(:new.UFFRETE, DADOS.UFFRETE);
       :new.CODATV1           := NVL(:new.CODATV1, DADOS.CODATV1);
       :new.ATACADISTA        := NVL(:new.ATACADISTA, DADOS.ATACADISTA);
       :new.AGREGASTVLMERC    := PARAMFILIAL.OBTERCOMOVARCHAR2('AGREGASTVLMERC', VCODFILIAL);
       -- tratamento para o país do cliente -------------------------------------------
       begin
         :new.CODPAIS := NVL(:new.CODPAIS,
                             NVL(TO_NUMBER(DADOS.CODPAIS_CLIENTE),
                                 DADOS.CODPAIS));

         select DESCRICAO
           into :new.DESCPAIS
           from PCPAIS
          where CODPAIS = :new.CODPAIS;
       exception
         when others then
           :new.CODPAIS  := NVL(:new.CODPAIS, DADOS.CODPAIS);
           :new.DESCPAIS := NVL(:new.DESCPAIS, DADOS.DESCPAIS);
       end;
       --------------------------------------------------------------------------------
       :new.CGCFILIAL             := NVL(:new.CGCFILIAL, DADOS.CGCFILIAL);
       :new.IEFILIAL              := NVL(:new.IEFILIAL, DADOS.IEFILIAL);
       :new.UFFILIAL              := NVL(:new.UFFILIAL, DADOS.UFFILIAL);
       :new.CODCLIFILIAL          := NVL(:new.CODCLIFILIAL, DADOS.CODCLIFILIAL);
       :new.CODCONTCLI            := NVL(:new.CODCONTCLI, VCODCONTCLI);
       :new.AGREGARSTPRODSINTEGRA := NVL(:new.AGREGARSTPRODSINTEGRA, VAGREGARSTPRODSINTEGRA);
       :new.TIPOALIQOUTRASDESP    := NVL(:new.TIPOALIQOUTRASDESP, VTIPOALIQOUTRASDESP);
       :new.IESUBSTTRIBUT         := NVL(:new.IESUBSTTRIBUT, DADOS.IESUBSTTRIBUT);
       :new.PLACAVEIC             := NVL(:new.PLACAVEIC, DADOS.PLACA);
       :new.UFPLACAVEIC           := NVL(:new.UFPLACAVEIC, DADOS.UFPLACA        );
       :new.UFCODIGO              := NVL(:new.UFCODIGO, DADOS.UFCODIGO);
       :new.VLPAUTAFRETE          := NVL(:new.VLPAUTAFRETE, DADOS.VLPAUTAFRETE);
       :new.COBRANCA              := SUBSTR(NVL(:new.COBRANCA, DADOS.COBRANCA), 1, 30);
       :new.VLPIS                 := VVLPIS;
       :new.VLCOFINS              := VVLCOFINS;
       :new.CODFISCALNF           := VCODFISCALNF;
       :new.SITUACAONFE           := NVL(:new.SITUACAONFE, 0);
       IF :NEW.TIPOVENDA <> 'DF' THEN
          :new.GERARBCRNFE := VGERARBCRNFE;
       END IF;

       begin
         :new.AMBIENTENFE := PARAMFILIAL.OBTERCOMOVARCHAR2('AMBIENTENFE', VCODFILIAL);
       exception
         when others then
         begin
           :new.AMBIENTENFE := -1;
           GERAR_LOG(sqlerrm, 'Erro na trigger T_PCNFSAID_HISTORICO');
         end;  
       end;
       
       begin
         :new.AMBIENTECTE := PARAMFILIAL.OBTERCOMOVARCHAR2('AMBIENTECTE', VCODFILIAL);
       exception
         when others then
         begin
           :new.AMBIENTECTE := -1;
           GERAR_LOG(sqlerrm, 'Erro na trigger T_PCNFSAID_HISTORICO');
         end;  
       end;

       :new.HISTORICO := 'S';
     end loop;

     -- INFORMAÇÕES DE TRIBUTAÇÃO DE FRETE E DESP.ACESSORIA
     -------------------------------------------------------------------------------------------------------
     --  ATUALIZAR_TRIBUTACOES();
     -------------------------------------------------------------------------------------------------------
     :new.CODFISCALFRETE      := NVL(:new.CODFISCALFRETE, VCFOPFRETE);
     :new.CODFISCALOUTRASDESP := NVL(:new.CODFISCALOUTRASDESP, VCFOPDESPESA);
     :new.PERCICMFRETE        := NVL(:new.PERCICMFRETE, VALIQICMSFRETE);
     :new.ALIQICMOUTRASDESP   := NVL(:new.ALIQICMOUTRASDESP, VALIQICMSDESPESA);
     -------------------------------------------------------------------------------------------------------     
     :new.DEDUZIRICMSBASEPISCOFINS := NVL(:new.DEDUZIRICMSBASEPISCOFINS, PARAMFILIAL.OBTERCOMOVARCHAR2('EXCLUIRICMSBASEPISCOFINS', VCODFILIAL));
     
     :new.TIPOIMPRESSAO := NVL(:new.TIPOIMPRESSAO, VTIPODANFE);
  END IF;
   -------------------------------------------------------------------------------------
   -- GRAVANDO NA TABELA PCMOVCOMPLE
   -------------------------------------------------------------------------------------
   IF (:NEW.SITUACAONFE > 0) AND (:NEW.SITUACAONFE not in (101,102)) AND (:NEW.SITUACAONFE <> :OLD.SITUACAONFE) THEN
     
   IF (UPDATING AND :NEW.DATACONSOLIDACAOPREFAT IS NULL) THEN
     
      FOR CR_PCMOV IN (SELECT PCMOV.NUMTRANSITEM,
                              PCMOV.NUMTRANSVENDA,
                              PCMOV.CODPROD,
                              PCMOV.NUMSEQ,
                              PCMOV.NUMNOTA,
                              PCMOVCOMPLE.ORIGMERCTRIB ORIGMERCTRIB_MOV,
                              NVL(PCPRODFILIAL.ORIGMERCTRIB, DECODE(PCMOV.IMPORTADO, 'S', '2', DECODE(PCMOV.IMPORTADO, 'D', '1', '0'))) ORIGMERCTRIB
                      FROM PCMOV,
                           PCMOVCOMPLE,
                           PCPRODFILIAL
                      WHERE PCMOV.NUMTRANSVENDA = :OLD.NUMTRANSVENDA
                        AND PCMOV.NUMNOTA = :OLD.NUMNOTA
                          AND PCMOV.NUMTRANSITEM = PCMOVCOMPLE.NUMTRANSITEM(+)
                          AND NVL(PCMOV.CODFILIALNF, PCMOV.CODFILIAL) = PCPRODFILIAL.CODFILIAL(+)
                          AND PCMOV.CODPROD = PCPRODFILIAL.CODPROD(+)
                      ) LOOP
         IF (CR_PCMOV.ORIGMERCTRIB_MOV IS NULL) AND (:NEW.SITUACAONFE > 0) AND (:NEW.SITUACAONFE not in (101,102)) AND (:NEW.SITUACAONFE <> :OLD.SITUACAONFE)
         THEN
            IF (NVL(CR_PCMOV.NUMTRANSITEM, 0) > 0)
            THEN
               UPDATE PCMOVCOMPLE SET
                      PCMOVCOMPLE.ORIGMERCTRIB = CR_PCMOV.ORIGMERCTRIB
               WHERE PCMOVCOMPLE.NUMTRANSITEM = CR_PCMOV.NUMTRANSITEM
                 AND PCMOVCOMPLE.ORIGMERCTRIB IS NULL;
            END IF;

            IF (NVL(CR_PCMOV.NUMTRANSITEM, 0) = 0)
            THEN
               SELECT DFSEQ_PCMOVCOMPLE.NEXTVAL
               INTO VNUMTRANSITEM
               FROM DUAL;

               IF VNUMTRANSITEM > 0
               THEN
                  INSERT INTO PCMOVCOMPLE (ORIGMERCTRIB, NUMTRANSITEM)
                                   VALUES (CR_PCMOV.ORIGMERCTRIB, VNUMTRANSITEM);

                  UPDATE PCMOV SET NUMTRANSITEM = VNUMTRANSITEM
                  WHERE NUMTRANSVENDA = CR_PCMOV.NUMTRANSVENDA
                    AND NUMNOTA = CR_PCMOV.NUMNOTA
                    AND CODPROD = CR_PCMOV.CODPROD
                    AND NUMSEQ = CR_PCMOV.NUMSEQ;
               END IF;
            END IF;
         END IF;
      END LOOP;
      
       --------------------------------------------------------------------------------
       --bloco abaixo serve para atualizar o cfop no cabeçalho da nota, também quando editado
       --0.149304.2016 - Eddy - 05/01/2016
       begin
         select min(CODFISCAL) CODFISCALNF
           into VCODFISCALNF
           from PCMOV
          where NUMTRANSVENDA = :new.NUMTRANSVENDA
            and DTCANCEL is null
            and QTCONT > 0;
       exception
         when others then
           begin
             begin
               select max(CODFISCAL)
                 into VCODFISCALNF
                 from PCNFBASE
                where NUMTRANSVENDA = :new.NUMTRANSVENDA;
             exception
               when others then
                 null;
             end;
           end;
       end;
         
       :new.CODFISCALNF := VCODFISCALNF;
      --------------------------------------------------------------------------------
      
    END IF; --IF UPDATE
  END IF;
exception
  when VERRO_TRIBUTACAO then
    begin
      GERAR_LOG(VMENSAGEM_ERRO,null);
    end;
  when others then
    begin
      GERAR_LOG(sqlerrm, DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
      exception
       when others then
       begin
         GERAR_LOG(sqlerrm, 'Erro na trigger T_PCNFSAID_HISTORICO');
       end;
    end;
end;
/
ALTER TRIGGER "AJEL"."T_PCNFSAID_HISTORICO" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."T_PCNFSAID_NFE" 
 BEFORE INSERT OR UPDATE
 OF ESPECIE, SERIE, NUMNOTA, CHAVENFE, PROTOCOLONFE, RECIBONFE, SITUACAONFE, TIPOEMISSAO, CONSUMIUNUMNFE, CHAVECTE, SITUACAOCTE, SITUACAONFEEPEC, AMBIENTENFE, 
    AMBIENTECTE, CODFILIAL, CODFILIALNF, DTCANCEL, DTSAIDA, DTSAIDANF, DTENTREGA, DTFAT, HORALANC, MINUTOLANC, CODIGONUMERICOCHAVE, TIPOIMPRESSAO,
    VLOUTRASDESP, VLFRETE, PRAZOMEDIO, CODUSUR, CODCLI, VLTOTAL, VLTOTGER
 ON PCNFSAID 
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
declare
  procedure GERAR_LOG(PCAMPO         in varchar2,
                      PVALORANT      in varchar2,
                      PVALORNOVO     in varchar2,
                      PNUMTRANSVENDA in number,                      
                      PERROADIC      in varchar2 default '') is
  
    vObs varchar(200);
  begin
    CASE 
         WHEN UPDATING  THEN vObs := 'MUDANÇA DE INFORMAÇÃO: NUMTRANSVENDA: ' || TO_CHAR(PNUMTRANSVENDA);
         WHEN INSERTING THEN vObs := 'NOVA NOTA: ' || TO_CHAR(PNUMTRANSVENDA);
         ELSE vObs := 'ERRO.';
    END CASE;    
  
    insert into PCLOGALTERACAODADOS
      (DATA,
       TABELA,
       COLUNA,
       TIPOVALOR,
       VALORALFAANT,
       VALORALFA,
       TERMINAL,
       MAQUINA,
       PROGRAMA,
       OSUSER,
       OBSERVACOES,
       OBSERVACOES2)
    values
      (sysdate,
       'PCNFSAID',
       PCAMPO,
       'A',
       PVALORANT,
       PVALORNOVO,
       SYS_CONTEXT('USERENV', 'TERMINAL'),
       SYS_CONTEXT('USERENV', 'HOST'),
       SYS_CONTEXT('USERENV', 'MODULE'),
       SYS_CONTEXT('USERENV', 'OS_USER'),
       vObs,       
       PERROADIC);
  end;

begin
  if UPDATING then
    if (SYS_CONTEXT('USERENV', 'MODULE') not like '%PCSIS1008%')
    then
      if (:old.ESPECIE <> :new.ESPECIE) and (:old.chavenfe is not null)
      then
        GERAR_LOG('ESPECIE', :old.ESPECIE, :new.ESPECIE, :new.NUMTRANSVENDA);
      end if;
      if (:old.ESPECIE <> :new.ESPECIE) and (:old.chavecte is not null)
      then
        GERAR_LOG('ESPECIE', :old.ESPECIE, :new.ESPECIE, :new.NUMTRANSVENDA);
      end if;
      if (:old.NUMNOTA <> :new.NUMNOTA and :old.NUMNOTA > 0)
      then
        GERAR_LOG('NUMNOTA',
                  TO_CHAR(:old.NUMNOTA),
                  TO_CHAR(:new.NUMNOTA),
                  :new.NUMTRANSVENDA);
      end if;
      if (:old.SERIE <> :new.SERIE) and (:old.chavenfe is not null)
      then
        GERAR_LOG('SERIE', :old.SERIE, :new.SERIE, :new.NUMTRANSVENDA);
      end if;
      if NVL(:old.CHAVENFE, '0') <> NVL(:new.CHAVENFE, '0')
      then
        GERAR_LOG('CHAVENFE',
                  :old.CHAVENFE,
                  :new.CHAVENFE,
                  :new.NUMTRANSVENDA);
      end if;
      if NVL(:old.PROTOCOLONFE, '0') <> NVL(:new.PROTOCOLONFE, '0')
      then
        GERAR_LOG('PROTOCOLONFE',
                  :old.PROTOCOLONFE,
                  :new.PROTOCOLONFE,
                  :new.NUMTRANSVENDA);
      end if;
      if NVL(:old.RECIBONFE, '0') <> NVL(:new.RECIBONFE, '0')
      then
        GERAR_LOG('RECIBONFE',
                  :old.RECIBONFE,
                  :new.RECIBONFE,
                  :new.NUMTRANSVENDA);
      end if;
      if NVL(:old.SITUACAONFE, 0) <> NVL(:new.SITUACAONFE, 0)
      then
        GERAR_LOG('SITUACAONFE',
                  TO_CHAR(:old.SITUACAONFE),
                  TO_CHAR(:new.SITUACAONFE),
                  :new.NUMTRANSVENDA);
      end if;
      if NVL(:old.TIPOEMISSAO, '0') <> NVL(:new.TIPOEMISSAO, '0')
      then
        GERAR_LOG('TIPOEMISSAO',
                  TO_CHAR(:old.TIPOEMISSAO),
                  TO_CHAR(:new.TIPOEMISSAO),
                  :new.NUMTRANSVENDA);
      end if;
      if NVL(:old.CONSUMIUNUMNFE, '0') <> NVL(:new.CONSUMIUNUMNFE, '0')
      then
        GERAR_LOG('CONSUMIUNUMNFE',
                  TO_CHAR(:old.CONSUMIUNUMNFE),
                  TO_CHAR(:new.CONSUMIUNUMNFE),
                  :new.NUMTRANSVENDA);
      end if;   
      if NVL(:old.CHAVECTE, '0') <> NVL(:new.CHAVECTE, '0')
      then
        GERAR_LOG('CHAVECTE',
                  TO_CHAR(:old.CHAVECTE),
                  TO_CHAR(:new.CHAVECTE),
                  :new.NUMTRANSVENDA);
      end if; 
      if NVL(:old.SITUACAOCTE, '0') <> NVL(:new.SITUACAOCTE, '0')
      then
        GERAR_LOG('SITUACAOCTE',
                  TO_CHAR(:old.SITUACAOCTE),
                  TO_CHAR(:new.SITUACAOCTE),
                  :new.NUMTRANSVENDA);
      end if; 
      if NVL(:old.SITUACAONFEEPEC, '0') <> NVL(:new.SITUACAONFEEPEC, '0')
      then
        GERAR_LOG('SITUACAONFEEPEC',
                  TO_CHAR(:old.SITUACAONFEEPEC),
                  TO_CHAR(:new.SITUACAONFEEPEC),
                  :new.NUMTRANSVENDA);
      end if; 
      if NVL(:old.AMBIENTENFE, '0') <> NVL(:new.AMBIENTENFE, '0')
      then
        GERAR_LOG('AMBIENTENFE',
                  TO_CHAR(:old.AMBIENTENFE),
                  TO_CHAR(:new.AMBIENTENFE),
                  :new.NUMTRANSVENDA);
      end if;
      if NVL(:old.AMBIENTECTE, '0') <> NVL(:new.AMBIENTECTE, '0')
      then
        GERAR_LOG('AMBIENTECTE',
                  TO_CHAR(:old.AMBIENTECTE),
                  TO_CHAR(:new.AMBIENTECTE),
                  :new.NUMTRANSVENDA);
      end if;
      if NVL(:old.CODFILIAL, '0') <> NVL(:new.CODFILIAL, '0')
      then
        GERAR_LOG('CODFILIAL',
                  TO_CHAR(:old.CODFILIAL),
                  TO_CHAR(:new.CODFILIAL),
                  :new.NUMTRANSVENDA);
      end if;
      if NVL(:old.CODFILIALNF, '0') <> NVL(:new.CODFILIALNF, '0')
      then
        GERAR_LOG('CODFILIAL',
                  TO_CHAR(:old.CODFILIALNF),
                  TO_CHAR(:new.CODFILIALNF),
                  :new.NUMTRANSVENDA);
      end if;
      if (:old.DTCANCEL) <> (:new.DTCANCEL)
      then
        GERAR_LOG('DTCANCEL',
                  (:old.DTCANCEL),
                  (:new.DTCANCEL),
                  :new.NUMTRANSVENDA);
      end if;
      if (:old.DTSAIDA) <> (:new.DTSAIDA)
      then
        GERAR_LOG('DTSAIDA',
                  (:old.DTSAIDA),
                  (:new.DTSAIDA),
                  :new.NUMTRANSVENDA);
      end if;
      if (:old.DTSAIDANF) <> (:new.DTSAIDANF)
      then
        GERAR_LOG('DTSAIDANF',
                  (:old.DTSAIDANF),
                  (:new.DTSAIDANF),
                  :new.NUMTRANSVENDA);
      end if;
      if (:old.DTENTREGA) <> (:new.DTENTREGA)
      then
        GERAR_LOG('DTENTREGA',
                  (:old.DTENTREGA),
                  (:new.DTENTREGA),
                  :new.NUMTRANSVENDA);
      end if;
      if (:old.DTFAT) <> (:new.DTFAT)
      then
        GERAR_LOG('DTFAT',
                  (:old.DTFAT),
                  (:new.DTFAT),
                  :new.NUMTRANSVENDA);
      end if;
      if (:old.CODIGONUMERICOCHAVE) <> (:new.CODIGONUMERICOCHAVE)
      then
        GERAR_LOG('CODIGONUMERICOCHAVE',
                  (:old.CODIGONUMERICOCHAVE),
                  (:new.CODIGONUMERICOCHAVE),
                  :new.NUMTRANSVENDA);
      end if;
      if (:old.TIPOIMPRESSAO) <> (:new.TIPOIMPRESSAO)
      then
        GERAR_LOG('TIPOIMPRESSAO',
                  (:old.TIPOIMPRESSAO),
                  (:new.TIPOIMPRESSAO),
                  :new.NUMTRANSVENDA);
      end if;
      
IF NVL(:OLD.VLOUTRASDESP, 0) <> NVL(:NEW.VLOUTRASDESP, 0) THEN
   GERAR_LOG('VLOUTRASDESP',
             TO_CHAR(:OLD.VLOUTRASDESP),
             TO_CHAR(:NEW.VLOUTRASDESP),
             :NEW.NUMTRANSVENDA);
END IF;
IF NVL(:OLD.VLFRETE, 0) <> NVL(:NEW.VLFRETE, 0) THEN
   GERAR_LOG('VLFRETE',
             TO_CHAR(:OLD.VLFRETE),
             TO_CHAR(:NEW.VLFRETE),
             :NEW.NUMTRANSVENDA);
END IF;
IF NVL(:OLD.PRAZOMEDIO, 0) <> NVL(:NEW.PRAZOMEDIO, 0) THEN
   GERAR_LOG('PRAZOMEDIO',
             TO_CHAR(:OLD.PRAZOMEDIO),
             TO_CHAR(:NEW.PRAZOMEDIO),
             :NEW.NUMTRANSVENDA);
END IF;  
IF NVL(:OLD.CODUSUR, 0) <> NVL(:NEW.CODUSUR, 0) THEN
   GERAR_LOG('CODUSUR',
             TO_CHAR(:OLD.CODUSUR),
             TO_CHAR(:NEW.CODUSUR),
             :NEW.NUMTRANSVENDA);
END IF;  
IF NVL(:OLD.CODCLI, 0) <> NVL(:NEW.CODCLI, 0) THEN
   GERAR_LOG('CODCLI',
             TO_CHAR(:OLD.CODCLI),
             TO_CHAR(:NEW.CODCLI),
             :NEW.NUMTRANSVENDA);
END IF;
IF NVL(:OLD.VLTOTAL, 0) <> NVL(:NEW.VLTOTAL, 0) THEN
   GERAR_LOG('VLTOTAL',
             TO_CHAR(:OLD.VLTOTAL),
             TO_CHAR(:NEW.VLTOTAL),
             :NEW.NUMTRANSVENDA);
END IF;
IF NVL(:OLD.VLTOTGER, 0) <> NVL(:NEW.VLTOTGER, 0) THEN
   GERAR_LOG('VLTOTGER',
             TO_CHAR(:OLD.VLTOTGER),
             TO_CHAR(:NEW.VLTOTGER),
             :NEW.NUMTRANSVENDA);
END IF;

      GERAR_LOG('HORALANC',
                  (:old.HORALANC),
                  (:new.HORALANC),
                  :new.NUMTRANSVENDA);
                  
      GERAR_LOG('MINUTOLANC',
                  (:old.MINUTOLANC),
                  (:new.MINUTOLANC),
                  :new.NUMTRANSVENDA);            
    end if;
  else
    GERAR_LOG('DTSAIDA',
              (:old.DTSAIDA),
              (:new.DTSAIDA),
              :new.NUMTRANSVENDA);
  
    GERAR_LOG('DTSAIDANF',
              (:old.DTSAIDANF),
              (:new.DTSAIDANF),
              :new.NUMTRANSVENDA);
  
    GERAR_LOG('DTENTREGA',
              (:old.DTENTREGA),
              (:new.DTENTREGA),
              :new.NUMTRANSVENDA);
  
    GERAR_LOG('DTFAT',
              (:old.DTFAT),
              (:new.DTFAT),
              :new.NUMTRANSVENDA);
              
    GERAR_LOG('HORALANC',
              (:old.HORALANC),
              (:new.HORALANC),
              :new.NUMTRANSVENDA);
                  
    GERAR_LOG('MINUTOLANC',
              (:old.MINUTOLANC),
              (:new.MINUTOLANC),
              :new.NUMTRANSVENDA);                  
  end if;  
exception
  when others then
    GERAR_LOG('NENHUM',
              '',
              'ERRO AO GERAR RASTREABILIDADE NFE',
              :new.NUMTRANSVENDA,
              'ERRO OCORRIDO: ' || sqlerrm);
  
end; -- Ricardo 13/02/2013
/
ALTER TRIGGER "AJEL"."T_PCNFSAID_NFE" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."T_PCNFSAID_CONTROLE_NUMNOTA" 
  before update of NUMNOTA on PCNFSAID
  referencing old as old new as new
  for each row
declare
  ALTERACAO_NUMNOTA_INDEVIDA exception;

  procedure GERAR_LOG(PCAMPO         in varchar2,
                      PVALORANT      in varchar2,
                      PVALORNOVO     in varchar2,
                      PNUMTRANSVENDA in number,
                      PERROADIC      in varchar2 default NULL) is
  begin
    insert into PCLOGALTERACAODADOS
      (DATA
      ,TABELA
      ,COLUNA
      ,TIPOVALOR
      ,VALORALFAANT
      ,VALORALFA
      ,TERMINAL
      ,MAQUINA
      ,PROGRAMA
      ,OSUSER
      ,OBSERVACOES
      ,OBSERVACOES2)
    values
      (sysdate
      ,'PCNFSAID'
      ,PCAMPO
      ,'A'
      ,PVALORANT
      ,PVALORNOVO
      ,SYS_CONTEXT('USERENV', 'TERMINAL')
      ,SYS_CONTEXT('USERENV', 'HOST')
      ,SYS_CONTEXT('USERENV', 'MODULE')
      ,SYS_CONTEXT('USERENV', 'OS_USER')
      ,'MUDANÇA DO NUMNOTA: NUMTRANSVENDA: ' || TO_CHAR(PNUMTRANSVENDA)
      ,PERROADIC);
  end;

begin

  if NVL(:OLD.CONSUMIUNUMNFE, 'N') = 'S' and NVL(:NEW.NUMNOTA, 0) <> NVL(:OLD.NUMNOTA, 0)
  then 
    raise ALTERACAO_NUMNOTA_INDEVIDA;
  end if;

exception
  when ALTERACAO_NUMNOTA_INDEVIDA then
    RAISE_APPLICATION_ERROR(-20000,
                            'OCORREU UMA TENTATIVA DE ALTERAÇÃO DO NÚMERO DA NOTA FISCAL INDEVIDAMENTE!' || CHR(13) ||
                             'O PROCESSO SERÁ ABORTADO.' || CHR(13) || 'TRANSAÇÃO DE SAÍDA: ' || :NEW.NUMTRANSVENDA);
  when others then
    GERAR_LOG('NUMNOTA', :OLD.NUMNOTA, :NEW.NUMNOTA, :NEW.NUMTRANSVENDA, 'ERRO OCORRIDO: ' || sqlerrm);

end; -- Ricardo 12/08/2015
/
ALTER TRIGGER "AJEL"."T_PCNFSAID_CONTROLE_NUMNOTA" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_PCNFSAID_DELETE" 
  BEFORE DELETE ON PCNFSAID REFERENCES OLD AS OLD NEW AS NEW
  FOR EACH ROW

DECLARE
  V_SCRIPT  long;

  vn_TRANSACAO   PCNFENT.NUMTRANSENT%TYPE; 
  VSPROGRAMA     VARCHAR2(30);
  VSUSUARIO      VARCHAR2(40);    
  v_code         NUMBER;
  v_errm         VARCHAR2(64);  
  vc_insert CLOB;   
BEGIN
  
  vn_TRANSACAO := :OLD.NUMTRANSVENDA; 
     
  VSUSUARIO  := SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 40);
  VSPROGRAMA := SUBSTR(SYS_CONTEXT('USERENV', 'MODULE'), 1, 30);  
 
  V_SCRIPT := 
  'DECLARE
      vc_insert_Colunas CLOB;
      vc_insert_Values  CLOB;
      vc_insert         CLOB;
      vs_DataType            VARCHAR2(100);
      vn_TRANSACAO           PCMOV.NUMTRANSVENDA%TYPE;
      VSPROGRAMA             VARCHAR2(30);
      VSUSUARIO              VARCHAR2(40);    
      v_code NUMBER;
      v_errm VARCHAR2(64);      
   BEGIN  
      VSUSUARIO  := SUBSTR(SYS_CONTEXT(''USERENV'', ''OS_USER''), 1, 40);
      VSPROGRAMA := SUBSTR(SYS_CONTEXT(''USERENV'', ''MODULE''), 1, 30);
      BEGIN
        for dados in (with t as (select xmltype(DBMS_XMLGEN.getXML(''SELECT * FROM PCNFSAID WHERE NUMTRANSVENDA = '||vn_TRANSACAO|| ' '')) xml
                                    from dual)
                      
                      select t2.column_value.getrootelement() coluna,
                              extractvalue(t2.column_value,
                                           t2.column_value.getrootelement()) as valor
                        from t t,
                              table(xmlsequence(t.xml.extract(''/ROWSET/ROW/node()''))) t2) loop
        
          BEGIN
            SElECT c.DATA_TYPE
              INTO vs_DataType
              FROM all_tab_columns c
             WHERE c.TABLE_NAME = ''PCNFSAID''
               AND c.COLUMN_NAME = dados.coluna;
          EXCEPTION
            WHEN NO_DATA_FOUND THEN
              vs_DataType := '''';
          END;
          vc_insert_Colunas := vc_insert_Colunas || dados.coluna || '','';
        
          IF vs_DataType = ''DATE'' THEN
          
          vc_insert_Values := vc_insert_Values || ''TO_DATE('' || '''''''' ||
                                 SUBSTR(dados.valor, 1, CASE WHEN instr(dados.valor,'' '') = 0 THEN LENGTH(dados.valor) ELSE instr(dados.valor,'' '') END ) || '''''''' || '','' ||
                                 ''''''DD/MM/YYYY '''''' || '')'' || '','';
          
          ELSIF (vs_DataType = ''VARCHAR2'') OR (vs_DataType = ''VARCHAR'') OR (vs_DataType = ''RAW'') OR (vs_DataType = ''CLOB'') THEN
          
            vc_insert_Values := vc_insert_Values || '''''''' ||
                                     dados.valor || '''''''' || '','';
          
          ELSE
          
            vc_insert_Values := vc_insert_Values || dados.valor || '','';
          
          END IF;
        
        end loop;

        vn_TRANSACAO := '||vn_TRANSACAO||';
      
        vc_insert := ''INSERT INTO PCNFSAID ('' ||
                          SUBSTR(vc_insert_Colunas,
                                 1,
                                 LENGTH(vc_insert_Colunas) - 1) ||
                          '')VALUES('' ||
                          SUBSTR(vc_insert_Values,
                                 1,
                                 LENGTH(vc_insert_Values) - 1) || '')'';  
    
    EXCEPTION
      WHEN OTHERS THEN
         v_code := SQLCODE;
         v_errm := SUBSTR(SQLERRM, 1 , 64);
         vc_insert :=   ''Não foi possível obter a linha de recuparação da PCMOV.''||chr(13)||
                        ''Verifique se seu banco tem o modulo DBMS_XMLGEN corretamente instalado.''||chr(13)||
                        ''Erro:''  || ''v_code'' || ''-'' || v_errm;

    END;     

    INSERT INTO PCLOGDELETEDADOS
      (TABELA, TRANSACAO, USUARIO, ARQUIVO, DTDELETE, MOVIMENTACAO, ROTINA)
    VALUES
      (''PCNFSAID'',
       vn_TRANSACAO,
       VSUSUARIO,
       vc_insert,
       SYSDATE,
       ''S'',
       VSPROGRAMA);
  END;'; 
      
  BEGIN
    execute immediate DBMS_LOB.SUBSTR(V_SCRIPT, 32765, 1);
  EXCEPTION
    WHEN OTHERS THEN
       v_code := SQLCODE;
       v_errm := SUBSTR(SQLERRM, 1 , 64);
       vc_insert :=   'Não foi possível obter a linha de recuparação da PCMOV.'||chr(13)||
                      'Verifique se seu banco tem o modulo DBMS_XMLGEN corretamente instalado.'||chr(13)||
                      'Erro:'  || v_code || '-' || v_errm;
       INSERT INTO PCLOGDELETEDADOS
         (TABELA, TRANSACAO, USUARIO, ARQUIVO, DTDELETE, MOVIMENTACAO, ROTINA)
       VALUES
         ('PCNFSAID',
          vn_TRANSACAO,
          VSUSUARIO,
          vc_insert,
          SYSDATE,
          'S',
          VSPROGRAMA); 

  END;   
      

  /*INSERT INTO PCLOGDELETEDADOS
      (TABELA, TRANSACAO, USUARIO, ARQUIVO, DTDELETE, MOVIMENTACAO, ROTINA)
    VALUES
      ('PCMOV',
       1,
       '',
       V_SCRIPT,
       SYSDATE,
       '1',
       'teste');  */
END;
/
ALTER TRIGGER "AJEL"."TRG_PCNFSAID_DELETE" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_PCNFSAID_DADOS_INICIAIS" 
  BEFORE INSERT ON PCNFSAID
  REFERENCING OLD AS OLD NEW AS NEW
  FOR EACH ROW
DECLARE  
  /*******************************************************************************
                              Historico de Alteracoes
  --------------------------------------------------------------------------------
    Data        Responsavel    Tarefa            Alteracao
   -----------  -------------  ----------------  -----------------------------------------
   12/05/2016   Eddy.Pereira   2033.051131.2016  Criação desta trigger, para dados iniciais
                                                 dos registros
  *******************************************************************************/
  VSEQUIPAMENTO VARCHAR2(64);
  VSUSUARIO     VARCHAR2(30);
  VSPROGRAMA    VARCHAR2(48);
BEGIN
  IF :NEW.CODFILIALNF IS NULL THEN
    :NEW.CODFILIALNF := :NEW.CODFILIAL;
  END IF;

  VSEQUIPAMENTO := SUBSTR(SYS_CONTEXT('USERENV', 'TERMINAL'), 1, 64);
  VSUSUARIO     := SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 30);
  VSPROGRAMA    := SUBSTR(SYS_CONTEXT('USERENV', 'MODULE'), 1, 48);

  IF :NEW.ROTINALANC IS NULL THEN
    :NEW.ROTINALANC := VSPROGRAMA;
  END IF;

  IF ((UPPER(VSPROGRAMA) <> 'PCSIS1303.EXE') OR (VSPROGRAMA IS NULL)) AND
    --Tarefa 107540
     (:OLD.HORALANC IS NULL) AND
     (:OLD.MINUTOLANC IS NULL) AND 
     (:NEW.DATACONSOLIDACAOPREFAT IS NULL) THEN

   :NEW.HORALANC   := TO_CHAR(SYSDATE, 'HH24');
   :NEW.MINUTOLANC := TO_CHAR(SYSDATE, 'MI'); 
  
  END IF;

  :NEW.ROTINACAD := NVL(:NEW.ROTINACAD, NVL(:OLD.ROTINALANC, VSPROGRAMA));
  :NEW.EQUIPLANC := VSEQUIPAMENTO;
  :NEW.FUNCLANC  := VSUSUARIO;
END;
/
ALTER TRIGGER "AJEL"."TRG_PCNFSAID_DADOS_INICIAIS" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_PCNFSAID_CFAT" 
  BEFORE INSERT ON PCNFSAID
  REFERENCING OLD AS OLD NEW AS NEW
  FOR EACH ROW
DECLARE
  vsprograma  varchar2(2000);
  vssucesso   varchar2(200);
  vsparametro varchar2(100);
  vsmaior     varchar2(10);
  vsmenor     varchar2(10);
  vsContItem  number(22, 0);

  PROCEDURE GRAVARLOG(pNUMTRANSVENDA NUMBER,
                      pSucesso       varchar2,
                      pObservacao    varchar2) IS
    PRAGMA AUTONOMOUS_TRANSACTION;
  BEGIN
    insert into PCLOGALTERACAODADOS
      (data, tabela, coluna, VALORALFA, observacoes, observacoes2)
    values
      (sysdate,
       'PCNFSAID',
       'NUMTRANSVENDA',
       to_char(pNUMTRANSVENDA),
       ' Sucesso: ' || pSucesso,
       pObservacao);
    commit;
  END;

BEGIN

  VSPROGRAMA := UPPER(SUBSTR(SYS_CONTEXT('USERENV', 'MODULE'), 1, 48));

  select PARAMFILIAL.ObterComoVarchar2('UTILIZACENTRALFATURAMENTO')
    into vsparametro
    from dual;

  vssucesso := 'S';

  vsContItem := 0;
  
  begin
    select count(1)
      into vsContItem
      from pcmov m
     where m.numtransvenda = :NEW.NUMTRANSVENDA
       and m.codoper in ('S', 'ST');
    EXCEPTION
      WHEN OTHERS THEN
      vsContItem := 0;
  end;

  if (vsparametro = 'S') 
    and (VSPROGRAMA <> upper('WinThorAnywhere'))
	and (vsContItem > 0)
	and (VSPROGRAMA not like '%2030%')
	and (VSPROGRAMA not like '%1124%')
    and (VSPROGRAMA not like '%1306%')
    and (VSPROGRAMA not like '%1446%')	
	and (VSPROGRAMA not like upper('%AutoServico.Faturamento%'))
	then
  
    begin
		vsprograma := SUBSTR(TRIM(SUBSTR(vsprograma,
										 INSTR(vsprograma, '-') + 1,
										 length(vsprograma))),
							 1,
							 200);
		vsmaior    := SUBSTR(TRIM(SUBSTR(vsprograma,
										 1,
										 INSTR(vsprograma, '.') - 1)),
							 1,
							 10);
		vsmenor    := SUBSTR(TRIM(SUBSTR(vsprograma,
										 INSTR(vsprograma, '.') + 1,
										 length(vsprograma) -
										 (INSTR(vsprograma, '.', 1, 2) +
										  INSTR(vsprograma, '.')) - 1)),
							 1,
							 10);
	  
		vssucesso := 'N';
		if (to_number(vsmaior) > 29) then
		  vssucesso := 'S';
		elsif (to_number(vsmaior) = 29) then
		  if (to_number(vsmenor) > 2) then
			vssucesso := 'S';
		  end if;
		end if;
	  
		GRAVARLOG(:NEW.NUMTRANSVENDA,
				  vssucesso,
				  'Validação CFAT Maior: ' || vsmaior || ' - Menor: ' ||
				  vsmenor || ' Programa: ' || vsprograma || ' Parametro: ' ||
				  vsparametro);
		if (vssucesso = 'N') then
		  raise_application_error(-20000,'Parâmetro "UTILIZACENTRALFATURAMENTO" está marcado como "Sim", operações de faturamento e transferência devem ser realizadas via rotina 1420!');
		end if;
	
	  EXCEPTION
		  WHEN OTHERS THEN
		  GRAVARLOG(:NEW.NUMTRANSVENDA,
              'Falhou a verificação da versão',
              'Validação CFAT Programa: ' || vsprograma || ' Parametro: ' ||
              vsparametro);
		  raise_application_error(-20000,'Parâmetro "UTILIZACENTRALFATURAMENTO" está marcado como "Sim", falhou a verificação da versão do programa ' || vsprograma || '!');
	  end;
  else
    GRAVARLOG(:NEW.NUMTRANSVENDA,
              'Ignorado',
              'Validação CFAT Programa: ' || vsprograma || ' Parametro: ' ||
              vsparametro);
  end if;

END;
/
ALTER TRIGGER "AJEL"."TRG_PCNFSAID_CFAT" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_MD5PAF_PCNFSAID" 
  BEFORE UPDATE OR INSERT OR DELETE ON PCNFSAID
  REFERENCING OLD AS OLD NEW AS NEW
  FOR EACH ROW
BEGIN
  if (F_LIMPA_MD5PAF = 'S') then
    if ( UPDATING) then
      :NEW.MD5PAF := NULL;
	  end if;
	  
    if ( INSERTING or DELETING ) then	
	    UPDATE PCTABELASMD5PAF set MD5PAF = NULL WHERE TABELA = 'PCNFSAID' AND DATA = TRUNC(:NEW.DTSAIDA);
	  end if;
  end if; 
        
END TRG_MD5PAF_PCNFSAID;
/
ALTER TRIGGER "AJEL"."TRG_MD5PAF_PCNFSAID" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_LOG_PCNFSAID_NUMNOTA" 
 AFTER
   INSERT OR DELETE OR UPDATE OF numnota, numtransvenda, ESPECIE
 ON pcnfsaid
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
declare
  vsmaquina varchar2(80);
  vsusuario varchar2(80);
  vsprograma varchar2(80);
begin

   vsmaquina := SYS_CONTEXT('USERENV','TERMINAL');
   vsusuario := SYS_CONTEXT('USERENV','OS_USER');
   vsprograma := F_OBTERNOMEAPLICACAO;

   IF (inserting) THEN

     insert into logpcnfsaid_NUMNOTA
      (numtransvenda_ant,
       numtransvenda,
       NUMNOTA_ANT,
       NUMNOTA,
       ESPECIE_ANT,
       ESPECIE,
       data_ATUALIZACAO,
       data_EXCLUSAO,
       programa,
       maquina,
       usuario)
       values
         (:old.numtransvenda,
          :new.numtransvenda,
          :old.NUMNOTA,
          :NEW.NUMNOTA,
          :OLD.ESPECIE,
          :NEW.ESPECIE,
          sysdate,
          null,
          vsprograma,
          vsmaquina,
          vsusuario);
    END IF;

   IF (updating) THEN

     insert into logpcnfsaid_NUMNOTA
      (numtransvenda_ant,
       numtransvenda,
       NUMNOTA_ANT,
       NUMNOTA,
       ESPECIE_ANT,
       ESPECIE,
       data_ATUALIZACAO,
       data_EXCLUSAO,
       programa,
       maquina,
       usuario)
       values
         (:old.numtransvenda,
          :new.numtransvenda,
          :old.NUMNOTA,
          :NEW.NUMNOTA,
          :OLD.ESPECIE,
          :NEW.ESPECIE,
          sysdate,
          null,
          vsprograma,
          vsmaquina,
          vsusuario);
    END IF;

    IF (deleting) THEN

     insert into logpcnfsaid_NUMNOTA
      (numtransvenda_ant,
       numtransvenda,
       NUMNOTA_ANT,
       NUMNOTA,
       ESPECIE_ANT,
       ESPECIE,
       data_ATUALIZACAO,
       data_EXCLUSAO,
       programa,
       maquina,
       usuario)
       values
         (:old.numtransvenda,
          :old.numtransvenda,
          :old.NUMNOTA,
          :old.NUMNOTA,
          :OLD.ESPECIE,
          :OLD.ESPECIE,
          null,
          sysdate,
          vsprograma,
          vsmaquina,
          vsusuario);
    END IF;


end trg_log_pcnfsaid_NUMNOTA;
/
ALTER TRIGGER "AJEL"."TRG_LOG_PCNFSAID_NUMNOTA" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_INFORMA_MATCON_PCNFSAID" 
 BEFORE
  INSERT
 ON pcnfsaid
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
DECLARE
vPROGRAM  VARCHAR2(48);
BEGIN
  IF INSERTING THEN

    vprogram := F_OBTERNOMEAPLICACAO;

    --modulo Home Center grava S e Modulo distribuidor grava não
    IF (UPPER(TRIM(vPROGRAM)) LIKE '%PCSIS4116%') OR --fatura
       (UPPER(TRIM(vPROGRAM)) LIKE '%PCSIS4136%') OR
       (UPPER(TRIM(vPROGRAM)) LIKE '%PCINF2030MG%') OR --fatura
       (UPPER(TRIM(vPROGRAM)) LIKE '%PCSIS4153%') OR --fatura
       (UPPER(TRIM(vPROGRAM)) LIKE '%PCSIS4182%') OR
       (UPPER(TRIM(vPROGRAM)) LIKE '%PCSIS4159%') OR
       (UPPER(TRIM(vPROGRAM)) LIKE '%PCSIS4139%') OR --fatura
       (UPPER(TRIM(vPROGRAM)) LIKE '%PCSIS4109%') OR
       (UPPER(TRIM(vPROGRAM)) LIKE '%PCSIS4132%') OR --fatura
       (UPPER(TRIM(vPROGRAM)) LIKE '%PCSIS4102%') OR --fatura
       (UPPER(TRIM(vPROGRAM)) LIKE '%PCSIS4146%') OR --fatura
       (UPPER(TRIM(vPROGRAM)) LIKE '%PCSIS4158%') --fatura
    THEN
       :NEW.MATERIALDECONSTRUCAO := 'S';

    ELSE
       ---SE NÃO SÃO NENHUMA DAS ROTINAS ACIMA É PORQUE
       --É ROTINA DO PACOTE
       IF (UPPER(TRIM(vPROGRAM)) LIKE '%PCSIS%') THEN
          :NEW.MATERIALDECONSTRUCAO := 'N';
       END IF;   
       
    END IF;      

  END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_INFORMA_MATCON_PCNFSAID" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_ECOMMERCE_PCNFSAID" 
   AFTER INSERT ON PCNFSAID 
   REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
   VCODFILIAL PCNFSAID.CODFILIALNF%TYPE;
   VROWID PCECOMMERCEUNILEVERFILA.ID%TYPE;
   vnQTDEPEDIDO INTEGER;
   VQTPOSICAO INTEGER;
   VQTPOSICAONF INTEGER;
   vNUMPED PCNFSAID.NUMPED%TYPE;
BEGIN
   vNUMPED := NVL(NVL(:NEW.NUMPED,:OLD.NUMPED),0);
   IF vNUMPED > 0 THEN  
      BEGIN
         SELECT COUNT(1) CONT
         INTO vnQTDEPEDIDO
         FROM PCPEDCTEMP
         WHERE PCPEDCTEMP.NUMPED > 0
           AND PCPEDCTEMP.NUMPEDWEB = (SELECT PCPEDC.NUMPEDWEB
                                       FROM PCPEDC
                                       WHERE PCPEDC.NUMPED = vNUMPED
                                         AND ROWNUM = 1);
      EXCEPTION
         WHEN OTHERS THEN
            vnQTDEPEDIDO := 0;
      END;
      ------------------------------------------------------------------------
      ------------------------------------------------------------------------
      IF vnQTDEPEDIDO = 1 THEN
         BEGIN
            SELECT COALESCE(T.SERIEMANIF,T.CODFILIAL) CODFILIAL,
                   T.ROWID IDROWID
            INTO VCODFILIAL,
                 VROWID
            FROM PCPEDCTEMP T
            WHERE T.INTEGRADORA = 29
              AND COALESCE(T.NUMPED,0) > 0
              AND T.NUMPED = vNUMPED
              AND ROWNUM = 1;
         EXCEPTION
            WHEN OTHERS THEN
               VCODFILIAL := NULL;
               VROWID := NULL;
         END;

         IF VCODFILIAL IS NOT NULL AND VROWID IS NOT NULL THEN
            INSERT INTO PCECOMMERCEUNILEVERFILA (CODFILIAL, TABELA, ID, DTINCLUSAO)
                   VALUES(VCODFILIAL, 'SELECTPEDIDO', VROWID, SYSDATE);
         END IF;       
      END IF;
      ------------------------------------------------------------------------
      ------------------------------------------------------------------------
      IF vnQTDEPEDIDO > 1 THEN
         BEGIN
            SELECT CONT
            INTO VQTPOSICAO
            FROM (SELECT COUNT(POSICAO) CONT
                  FROM PCPEDC
                  WHERE PCPEDC.DTCANCEL IS NULL
                    AND PCPEDC.NUMPEDRCA > 0
                    AND PCPEDC.INTEGRADORA = 29
                    AND PCPEDC.POSICAO <> 'F'
                    AND PCPEDC.NUMPEDRCA = (SELECT PCPEDC.NUMPEDWEB
                                            FROM PCPEDC
                                            WHERE PCPEDC.NUMPED = vNUMPED
                                              AND ROWNUM = 1)
                  GROUP BY POSICAO)
            WHERE ROWNUM = 1;
         EXCEPTION
            WHEN OTHERS THEN
               VQTPOSICAO := 0;
         END;
         ---------------------------------------------------------------------
         IF VQTPOSICAO = 0 THEN
            BEGIN
               SELECT COUNT(DISTINCT(M.NUMPED)) CONT
                INTO vQTPOSICAONF
                FROM PCMOV M
               WHERE M.NUMTRANSVENDA IN
                     (SELECT NUMTRANSVENDA
                        FROM PCPEDC C,
                             (SELECT PCPEDC.NUMPEDWEB, PCPEDC.DATA
                                FROM PCPEDC
                               WHERE PCPEDC.NUMPED = vNUMPED
                                 AND ROWNUM = 1) D
                       WHERE C.NUMPEDWEB = D.NUMPEDWEB
                         AND C.DATA = D.DATA);
            EXCEPTION
               WHEN OTHERS THEN
                  vQTPOSICAONF := 0;
            END;
         END IF;
         ---------------------------------------------------------------------
         IF (VQTPOSICAO > 1) OR (VQTPOSICAO = 0 AND VQTPOSICAONF > 1) THEN
            BEGIN
               SELECT COALESCE(T.SERIEMANIF,T.CODFILIAL) CODFILIAL,
                      T.ROWID IDROWID
               INTO VCODFILIAL,
                    VROWID
               FROM PCPEDCTEMP T
               WHERE T.INTEGRADORA = 29
                 AND COALESCE(T.NUMPED,0) > 0
                 AND T.NUMPED = vNUMPED
                 AND ROWNUM = 1;
            EXCEPTION
               WHEN OTHERS THEN
                  VCODFILIAL := NULL;
                  VROWID := NULL;
            END;

            IF VCODFILIAL IS NOT NULL AND VROWID IS NOT NULL THEN
               INSERT INTO PCECOMMERCEUNILEVERFILA (CODFILIAL, TABELA, ID, DTINCLUSAO)
                      VALUES(VCODFILIAL, 'SELECTPEDIDO', VROWID, SYSDATE);
            END IF;       
         END IF;    
         ---------------------------------------------------------------------
      END IF;
      ------------------------------------------------------------------------
      ------------------------------------------------------------------------
   END IF;
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
   NULL;
END;
/
ALTER TRIGGER "AJEL"."TRG_ECOMMERCE_PCNFSAID" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_ECOMMERCEB2B_PCNFSAID" AFTER INSERT
   ON PCNFSAID REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
   vCODFILIAL PCNFSAID.CODFILIALNF%TYPE;
   vROWID PCECOMMERCEB2BFILA.ID%TYPE;
   vTIPOINTEGRACAO PCECOMMERCEB2BFILA.TIPOINTEGRACAO%TYPE;
   vQTDEPEDIDO INTEGER;
   vQTPOSICAO INTEGER;
   vQTPOSICAONF INTEGER;
   vNUMPED PCNFSAID.NUMPED%TYPE;
BEGIN
   vNUMPED := NVL(NVL(:NEW.NUMPED,:OLD.NUMPED),0);

   IF vNUMPED > 0 THEN  
      BEGIN
         SELECT COUNT(1)
         INTO vQTDEPEDIDO
         FROM PCPEDCTEMP
         WHERE PCPEDCTEMP.NUMPED > 0
           AND PCPEDCTEMP.NUMPEDWEB = (SELECT PCPEDC.NUMPEDWEB
                                       FROM PCPEDC
                                       WHERE PCPEDC.NUMPED = vNUMPED
                                         AND ROWNUM = 1);
      EXCEPTION WHEN OTHERS THEN
         vQTDEPEDIDO := 0;
      END;
      ------------------------------------------------------------------------
      IF vQTDEPEDIDO = 1 THEN
         BEGIN
            SELECT COALESCE(T.SERIEMANIF,T.CODFILIAL) CODFILIAL,
                   T.ROWID IDROWID,
                   T.INTEGRADORA
            INTO vCODFILIAL,
                 vROWID,
                 vTIPOINTEGRACAO
            FROM PCPEDCTEMP T
            WHERE T.INTEGRADORA IN (SELECT R.VALOR
                                    FROM PCROTULOITEM R,
                                         PCECOMMERCEB2B B
                                    WHERE R.ID = 'TIPOINTEGRADORA'
                                      AND R.VALOR IN (B.TIPOINTEGRACAO))
              AND COALESCE(T.NUMPED,0) > 0
              AND T.NUMPED = vNUMPED
              AND ROWNUM = 1;
         EXCEPTION WHEN OTHERS THEN
            vCODFILIAL := NULL;
            vROWID := NULL;
         END;

         IF vCODFILIAL IS NOT NULL AND vROWID IS NOT NULL THEN
            BEGIN
               INSERT INTO PCECOMMERCEB2BFILA(CODFILIAL, TABELA, ID, DTINCLUSAO, TIPOINTEGRACAO, OBSERVACAO)
                  VALUES(vCODFILIAL, 'PEDIDO', vROWID, SYSDATE, vTIPOINTEGRACAO, NULL);
            EXCEPTION WHEN OTHERS THEN
               NULL;
            END;
         END IF;       
      END IF;
      ------------------------------------------------------------------------
      IF vQTDEPEDIDO > 1 THEN
         BEGIN
            SELECT CONT
            INTO vQTPOSICAO
            FROM (SELECT COUNT(POSICAO) CONT
                  FROM PCPEDC
                  WHERE PCPEDC.DTCANCEL IS NULL
                    AND PCPEDC.NUMPEDRCA > 0
                    AND PCPEDC.INTEGRADORA IN (SELECT R.VALOR
                                               FROM PCROTULOITEM R,
                                                    PCECOMMERCEB2B B
                                               WHERE R.ID = 'TIPOINTEGRADORA'
                                                 AND R.VALOR IN (B.TIPOINTEGRACAO))
                    AND PCPEDC.POSICAO <> 'F'
                    AND PCPEDC.NUMPEDRCA = (SELECT PCPEDC.NUMPEDWEB
                                            FROM PCPEDC
                                            WHERE PCPEDC.NUMPED = vNUMPED
                                              AND ROWNUM = 1)
                  GROUP BY POSICAO)
            WHERE ROWNUM = 1;
         EXCEPTION WHEN OTHERS THEN
            vQTPOSICAO := 0;
         END;
         ---------------------------------------------------------------------
         IF vQTPOSICAO = 0 THEN
            BEGIN
               SELECT COUNT(DISTINCT(M.NUMPED))
               INTO vQTPOSICAONF
               FROM PCMOV M
               WHERE M.NUMTRANSVENDA IN (SELECT NUMTRANSVENDA
                                         FROM PCPEDC C,
                                              (SELECT PCPEDC.NUMPEDWEB, PCPEDC.DATA
                                               FROM PCPEDC
                                               WHERE PCPEDC.NUMPED = vNUMPED
                                                 AND ROWNUM = 1) D
                                         WHERE C.NUMPEDWEB = D.NUMPEDWEB
                                           AND C.DATA = D.DATA);
            EXCEPTION WHEN OTHERS THEN
               vQTPOSICAONF := 0;
            END;
         END IF;
         ---------------------------------------------------------------------
         IF (vQTPOSICAO > 1) OR (vQTPOSICAO = 0 AND vQTPOSICAONF > 1) THEN
            BEGIN
               SELECT COALESCE(T.SERIEMANIF,T.CODFILIAL) CODFILIAL,
                      T.ROWID IDROWID,
                      T.INTEGRADORA
               INTO vCODFILIAL,
                    vROWID,
                    vTIPOINTEGRACAO
               FROM PCPEDCTEMP T
               WHERE T.INTEGRADORA IN (SELECT R.VALOR
                                       FROM PCROTULOITEM R,
                                            PCECOMMERCEB2B B
                                       WHERE R.ID = 'TIPOINTEGRADORA'
                                         AND R.VALOR IN (B.TIPOINTEGRACAO))
                 AND COALESCE(T.NUMPED,0) > 0
                 AND T.NUMPED = vNUMPED
                 AND ROWNUM = 1;
            EXCEPTION WHEN OTHERS THEN
               vCODFILIAL := NULL;
               vROWID := NULL;
            END;

            IF vCODFILIAL IS NOT NULL AND vROWID IS NOT NULL THEN
               BEGIN
                  INSERT INTO PCECOMMERCEB2BFILA(CODFILIAL, TABELA, ID, DTINCLUSAO, TIPOINTEGRACAO, OBSERVACAO)
                     VALUES(vCODFILIAL, 'PEDIDO', vROWID, SYSDATE, vTIPOINTEGRACAO, NULL);
               EXCEPTION WHEN OTHERS THEN
                  NULL;
               END;
            END IF;
         END IF;
      END IF;
   END IF;
EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
   NULL;
END;
/
ALTER TRIGGER "AJEL"."TRG_ECOMMERCEB2B_PCNFSAID" ENABLE;

CREATE INDEX "AJEL"."PCNFSAID_IDX15" ON "AJEL"."PCNFSAID" ("NUMCAR", "CODCLI", "NUMSEQMONTAGEM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX10" ON "AJEL"."PCNFSAID" ("CODSUPERVISOR", "CODUSUR", "DTSAIDA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX1" ON "AJEL"."PCNFSAID" ("NUMNOTA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX2" ON "AJEL"."PCNFSAID" ("DTSAIDA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX4" ON "AJEL"."PCNFSAID" ("CODCLI") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE UNIQUE INDEX "AJEL"."PCNFSAID_PK" ON "AJEL"."PCNFSAID" ("NUMTRANSVENDA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX11" ON "AJEL"."PCNFSAID" ("NUMCAR", "NUMTRANSVENDA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX12" ON "AJEL"."PCNFSAID" ("NUMCAR", "NUMNOTA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX13" ON "AJEL"."PCNFSAID" ("NUMCAR", "NUMPED") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX14" ON "AJEL"."PCNFSAID" ("NUMPED") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX22" ON "AJEL"."PCNFSAID" ("NUMTRANSVENDA", "NUMNOTA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX23" ON "AJEL"."PCNFSAID" ("NUMTRANSVENDAORIGEM", "DTCANCEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX24" ON "AJEL"."PCNFSAID" ("SITUACAONFE", "ESPECIE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX25" ON "AJEL"."PCNFSAID" ("NUMTRANSVENDA", "CODFISCAL", "CONDVENDA", "DTCANCEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX31" ON "AJEL"."PCNFSAID" ("CODFILIAL", "NUMTRANSVENDA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX32" ON "AJEL"."PCNFSAID" ("CODFILIAL", "DTSAIDA", "CODFISCAL", "DTCANCEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX33" ON "AJEL"."PCNFSAID" ("CHAVENFE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX34" ON "AJEL"."PCNFSAID" ("TIPOEMISSAO", "ESPECIE", "SITUACAONFE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX29" ON "AJEL"."PCNFSAID" ("NUMPED", "NUMTRANSVENDA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX35" ON "AJEL"."PCNFSAID" ("CODFORNEC", "TIPODEVOL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX36" ON "AJEL"."PCNFSAID" ("NUMORCA", "DTCANCEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX38" ON "AJEL"."PCNFSAID" ("CODEMITENTE", "CAIXA", "NUMTRANSVENDA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX39" ON "AJEL"."PCNFSAID" ("NUMTRANSVENDACONHEC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX40" ON "AJEL"."PCNFSAID" ("NUMLANCCP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX42" ON "AJEL"."PCNFSAID" ("TIPOVENDA", "DTSAIDA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX43" ON "AJEL"."PCNFSAID" ("NUMTRANSVENDAORIGEM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX44" ON "AJEL"."PCNFSAID" ("CHAVECTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX47" ON "AJEL"."PCNFSAID" ("NUMTRANSCTEANUL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX48" ON "AJEL"."PCNFSAID" ("NUMTRANSCTESUBS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX45" ON "AJEL"."PCNFSAID" ("NUMTRANSENTORIGEM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX46" ON "AJEL"."PCNFSAID" ("NUMTRANSVENDATV13") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX51" ON "AJEL"."PCNFSAID" ("NUMTRANSVENDADESTINO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX16" ON "AJEL"."PCNFSAID" ("SITUACAONFE", "ESPECIE", "CONDVENDA", NVL("CODFILIALNF","CODFILIAL"), "DTCANCEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX37" ON "AJEL"."PCNFSAID" (NVL("NUMTRANSVENDAORIGEM","NUMTRANSVENDA")) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX41" ON "AJEL"."PCNFSAID" ("SITUACAOCTE", NVL("CODFILIALNF","CODFILIAL")) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX50" ON "AJEL"."PCNFSAID" ("DTCANCEL", NVL("CODFILIALNF","CODFILIAL")) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX49" ON "AJEL"."PCNFSAID" ("DTSAIDA", "NUMNOTA", NVL("CODFILIALNF","CODFILIAL")) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX55" ON "AJEL"."PCNFSAID" ("DTSAIDA", "CONDVENDA", "CODFISCAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX56" ON "AJEL"."PCNFSAID" ("NUMVIAS", "SITUACAONFE", "ESPECIE", "DTCANCEL", "DTSAIDA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX57" ON "AJEL"."PCNFSAID" ("DTCANCEL", "CONDVENDA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX58" ON "AJEL"."PCNFSAID" ("NUMLOTENFE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX60" ON "AJEL"."PCNFSAID" ("CONDVENDA", "CODCOB") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX63" ON "AJEL"."PCNFSAID" ("DTSAIDA", "CODFILIAL", "DTCANCEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX52" ON "AJEL"."PCNFSAID" ("RECIBONFE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX53" ON "AJEL"."PCNFSAID" ("RECIBOCTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX54" ON "AJEL"."PCNFSAID" ("RECIBODPEC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE UNIQUE INDEX "AJEL"."SYS_IL0000079059C00244$$" ON "AJEL"."PCNFSAID" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" 
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX61" ON "AJEL"."PCNFSAID" ("CODFILIAL", "DTSAIDA", "CODFISCAL", "CONDVENDA", "DTCANCEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE UNIQUE INDEX "AJEL"."PCNFSAID_UK" ON "AJEL"."PCNFSAID" ("UIDREGISTRO", "IDPARCEIRO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX62" ON "AJEL"."PCNFSAID" ("DTSAIDA", NVL("CONDVENDA",0), "CODFILIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX64" ON "AJEL"."PCNFSAID" ("DTFECHA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE UNIQUE INDEX "AJEL"."SYS_IL0000079059C00582$$" ON "AJEL"."PCNFSAID" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" 
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX65" ON "AJEL"."PCNFSAID" ("CODCLI", "DTSAIDA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX66" ON "AJEL"."PCNFSAID" ("NUMTRANSENTNFESTORNADA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCNFSAID_IDX59" ON "AJEL"."PCNFSAID" ("ESPECIE", NVL("SERIE",'S'), NVL("DOCEMISSAO",'S')) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;

COMMENT ON COLUMN AJEL.PCNFSAID.VLTOTAL IS 'Valor total.';
COMMENT ON COLUMN AJEL.PCNFSAID.CAIXA IS 'Caixa';
COMMENT ON COLUMN AJEL.PCNFSAID.VLTOTGER IS 'Valor total.';
COMMENT ON COLUMN AJEL.PCNFSAID.VLDESCONTO IS 'Valor total do desconto.';
COMMENT ON COLUMN AJEL.PCNFSAID.CONDVENDA IS 'Indica a condição da venda.';
COMMENT ON COLUMN AJEL.PCNFSAID.UF IS 'UF cliente.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODCLINF IS 'Código do cliente para o endereço de entraga da NF.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODCONDICAOVENDA IS 'Indica o código da condição de venda.';
COMMENT ON COLUMN AJEL.PCNFSAID.PERBASEREDOUTRASDESP IS 'Contém o percentual de redução para despesas acessórias (se houver).';
COMMENT ON COLUMN AJEL.PCNFSAID.VLPIS IS 'Valor do PIS a ser lançado na Geração de Nota Fiscal de Prestação de Serviço (rotina 1446).';
COMMENT ON COLUMN AJEL.PCNFSAID.PERDESCFIN IS 'Mesmo campo gravado no pedido, que é replicado durante o faturamento.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODCLIRECEBEDOR IS 'Indica o cliente recebedor da mercadoria em pedidos feitos para redes de clientes.';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMREGIAO IS 'Região de preço usada na nota fiscal.';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMORCAFILIAL IS 'Número Orçamento da Filial.';
COMMENT ON COLUMN AJEL.PCNFSAID.NSU IS 'NSU (número sequencial único) que deve ser gerado e impresso em todas as notas fiscais (entrada e saída).';
COMMENT ON COLUMN AJEL.PCNFSAID.DTNSU IS 'Data e hora de geração do NSU (número sequencial único), que deve ser impresso em todas as notas fiscais (entrada e saída).';
COMMENT ON COLUMN AJEL.PCNFSAID.GERACAORAZAOAUXILIAR IS 'Indica que já foi importado na geração do Razão Auxiliar (rotina 1050).';
COMMENT ON COLUMN AJEL.PCNFSAID.GERACP IS 'Indica se pedido TV10 irá gerar Contas a Pagar. |Campo do tipo caracter, de tamanho 1, com valor padrão "N';
COMMENT ON COLUMN AJEL.PCNFSAID.VLVERBACMVCLI IS 'Indica o valor total da verba CMV registrado no pedido.';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMLOTENFE IS 'Número de Lote da Nota Fiscal Eletrônica.';
COMMENT ON COLUMN AJEL.PCNFSAID.PERCCOMPROFISSIONAL IS 'Indica o percentual de comissao do profissional cadastrado na rotina 340.';
COMMENT ON COLUMN AJEL.PCNFSAID.TIPOEMISSAO IS 'Tipo de emissão da NFE (Normal, Contingência, SCAN). Campo do tipo caracter, de tamanho 1, com valor default 1';
COMMENT ON COLUMN AJEL.PCNFSAID.ENVIADA IS 'Indica se em caso de contingência, já enviou para o SEFAZ.';
COMMENT ON COLUMN AJEL.PCNFSAID.USAINTEGRACAOWMS IS 'Usa integração WMS';
COMMENT ON COLUMN AJEL.PCNFSAID.ENVIADANFE IS 'NF-e já enviada ao cliente.';
COMMENT ON COLUMN AJEL.PCNFSAID.AUTENTPGTOGNRE IS 'Autenticação bancaria.';
COMMENT ON COLUMN AJEL.PCNFSAID.BANCOPGTOGNRE IS 'Banco de pagto.';
COMMENT ON COLUMN AJEL.PCNFSAID.AGENCIAPGTOGNRE IS 'Agencia de pagto.';
COMMENT ON COLUMN AJEL.PCNFSAID.VENDAASSISTIDA IS 'Indica se a NF é de venda assistida.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODEMITENTEPEDIDO IS 'Código do emitente do pedido.';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMOP IS 'Indica o numero da ordem de produção.';
COMMENT ON COLUMN AJEL.PCNFSAID.ALIQUOTA IS 'Indica a alíquota de ICMS.|Campo do tipo numérico, de tamanho 7, com 2 casas decimais.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODCONSIGNATARIOFRETE IS 'Indica o código do consignatário do conhecimento de frete.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODEXPORTADOR IS 'Indica o código de exportador.';
COMMENT ON COLUMN AJEL.PCNFSAID.UFDESEMBARACO IS 'Indica a UF desembaraço.';
COMMENT ON COLUMN AJEL.PCNFSAID.LOCALDESEMBARACO IS 'Indica o local desembaraço.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODREMETENTEFRETE IS 'Indica o código do remetente do conhecimento de frete.(Utilizado apenas para o projeto 50507 - Transportadora)';
COMMENT ON COLUMN AJEL.PCNFSAID.CODDESTINATARIOFRETE IS 'Indica o código do destinatário do conhecimento de frete.(Utilizado apenas para o projeto 50507 - Transportadora)';
COMMENT ON COLUMN AJEL.PCNFSAID.CODVEICULO IS 'Indica o código do veículo do conhecimento de frete.(Utilizado apenas para o projeto 50507 - Transportadora)';
COMMENT ON COLUMN AJEL.PCNFSAID.CODMOTORISTA IS 'Indica o código do motorista do conhecimento de frete.(Utilizado apenas para o projeto 50507 - Transportadora)';
COMMENT ON COLUMN AJEL.PCNFSAID.CODPRACADESTFRETE IS 'Indica o código do frete (rota de entrega) do conhecimento de frete.(Utilizado apenas para o projeto 50507 - Transportadora)';
COMMENT ON COLUMN AJEL.PCNFSAID.OBSCONHECFRETE IS 'Indica a observação do conhecimento de frete.(Utilizado apenas para o projeto 50507 - Transportadora)';
COMMENT ON COLUMN AJEL.PCNFSAID.VLSECCAT IS 'Indica o valor de despesa com escolta.(Utilizado apenas para o projeto 50507 - Transportadora)';
COMMENT ON COLUMN AJEL.PCNFSAID.VLDESPACHO IS 'Indica o valor de despesa de despacho. (Utilizado apenas para o projeto 50507 - Transportadora)';
COMMENT ON COLUMN AJEL.PCNFSAID.VLLTR IS 'Indica o valor de despesa de LTR. (Utilizado apenas para o projeto 50507 - Transportadora)';
COMMENT ON COLUMN AJEL.PCNFSAID.VLPEDAGIO IS 'Indica o valor de despesa do pedágio.(Utilizado apenas para o projeto 50507 - Transportadora)';
COMMENT ON COLUMN AJEL.PCNFSAID.VLSEGURO IS 'Indica o valor de despesa de seguro da carga.(Utilizado apenas para o projeto 50507 - Transportadora)';
COMMENT ON COLUMN AJEL.PCNFSAID.TENTATIVAENVIONFE IS 'Indica a quantidade de tentativas de envio da nota fiscal a SEFAZ.';
COMMENT ON COLUMN AJEL.PCNFSAID.CLIENTE IS 'Razão social do cliente.';
COMMENT ON COLUMN AJEL.PCNFSAID.CGC IS 'CNPJ do cliente.';
COMMENT ON COLUMN AJEL.PCNFSAID.IE IS 'IE do cliente.';
COMMENT ON COLUMN AJEL.PCNFSAID.TIPOFJ IS 'Tipo pessoa (em casos de dev. de clientes).';
COMMENT ON COLUMN AJEL.PCNFSAID.CONSUMIDORFINAL IS 'Indica se cliente é consumidor final.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODATV1 IS 'Cód.Atividade do cliente.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODPAIS IS 'Código do País.';
COMMENT ON COLUMN AJEL.PCNFSAID.DESCPAIS IS 'Descrição do País.';
COMMENT ON COLUMN AJEL.PCNFSAID.CGCFILIAL IS 'CNPJ da filial.';
COMMENT ON COLUMN AJEL.PCNFSAID.IEFILIAL IS 'IE da filial.';
COMMENT ON COLUMN AJEL.PCNFSAID.UFFILIAL IS 'UF da filial.';
COMMENT ON COLUMN AJEL.PCNFSAID.AGREGARSTPRODSINTEGRA IS 'Agregar ou não o ST ao valor dos itens (Sintegra).';
COMMENT ON COLUMN AJEL.PCNFSAID.TIPOALIQOUTRASDESP IS 'Tipo de tributação do frete e despesas acessórias.';
COMMENT ON COLUMN AJEL.PCNFSAID.IESUBSTTRIBUT IS 'IE como substituto tributário.';
COMMENT ON COLUMN AJEL.PCNFSAID.UFCODIGO IS 'Código da UF.';
COMMENT ON COLUMN AJEL.PCNFSAID.HISTORICO IS 'Gerou histórico para o registro, sim ou não.';
COMMENT ON COLUMN AJEL.PCNFSAID.SUBSERIE IS 'Indica a subserie da nota fiscal.';
COMMENT ON COLUMN AJEL.PCNFSAID.ESPECIEVOLUME IS 'Indica a especie dos volumes da nota fiscal.';
COMMENT ON COLUMN AJEL.PCNFSAID.MARCARVOLUME IS 'Indica a marca dos produtos da nota fiscal.';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMCONTRATO IS 'Indica o número do contrato.';
COMMENT ON COLUMN AJEL.PCNFSAID.DTFECHACCRCA IS 'Indica se foi lançado saldo no contacorrente do RCA para a NF.';
COMMENT ON COLUMN AJEL.PCNFSAID.CONTRIBUINTE IS 'Indica se o e contribuinte ou não.';
COMMENT ON COLUMN AJEL.PCNFSAID.DTCANCELWMS IS 'Indica se o processo do WMS foi cancelado.';
COMMENT ON COLUMN AJEL.PCNFSAID.VLCOFINS IS 'Indica o valor total de crédito de COFINS na NF.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODFISCALNF IS 'Indica o código fiscal da NF.';
COMMENT ON COLUMN AJEL.PCNFSAID.DTLANCTO IS 'Indica a data da inclusão do lançamento.';
COMMENT ON COLUMN AJEL.PCNFSAID.RECARGA IS 'Indica pedido de recarga.';
COMMENT ON COLUMN AJEL.PCNFSAID.PROTOCOLONFECAN IS 'Indica o protocolo de cancelamento da NF-e.';
COMMENT ON COLUMN AJEL.PCNFSAID.PROTOCOLONFEAUTO IS 'Indica o protocolo de autorizaçãoda NF-e.';
COMMENT ON COLUMN AJEL.PCNFSAID.COMISSAOMOT IS 'Indica o valor de comissão para o motorista.';
COMMENT ON COLUMN AJEL.PCNFSAID.DTPAGCOMISSAOPROF IS 'Indica quando a comissão foi paga para o profissional.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODUSUR4 IS 'Indica o código do terceiro profissional.';
COMMENT ON COLUMN AJEL.PCNFSAID.COMISSAO4 IS 'Indica a comissão do terceiro profissional.';
COMMENT ON COLUMN AJEL.PCNFSAID.CLIENTEFONTEST IS 'Indica o cliente fonte ST.';
COMMENT ON COLUMN AJEL.PCNFSAID.ORGAOPUB IS 'Indica orgão público.';
COMMENT ON COLUMN AJEL.PCNFSAID.TRANSPORTADORA IS 'Indica a transportadora.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODCLIFILIAL IS 'Indica o código do cliente para a filial.';
COMMENT ON COLUMN AJEL.PCNFSAID.CGCFRETE IS 'CNPJ do transportador.';
COMMENT ON COLUMN AJEL.PCNFSAID.IEFRETE IS 'IE do transportador.';
COMMENT ON COLUMN AJEL.PCNFSAID.UFFRETE IS 'UF do transportador.';
COMMENT ON COLUMN AJEL.PCNFSAID.VLPAUTAFRETE IS 'Vl.Pauta do frete na nota.';
COMMENT ON COLUMN AJEL.PCNFSAID.COBRANCA IS 'Cobrança utilizada para a nota.';
COMMENT ON COLUMN AJEL.PCNFSAID.ENDERECO IS 'Endereço do cliente.';
COMMENT ON COLUMN AJEL.PCNFSAID.BAIRRO IS 'Bairro do cliente.';
COMMENT ON COLUMN AJEL.PCNFSAID.MUNICIPIO IS 'Municpio do cliente.';
COMMENT ON COLUMN AJEL.PCNFSAID.CEP IS 'CEP do cliente.';
COMMENT ON COLUMN AJEL.PCNFSAID.SULFRAMA IS 'Incrição Suframa do cliente.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODMUNICIPIO IS 'Cód.Municipio do cliente.';
COMMENT ON COLUMN AJEL.PCNFSAID.PLACAVEIC IS 'Placa do veículo utilizado para transporte.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODCONTCLI IS 'Código da conta de cliente.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODIBGE IS 'Código da cidade no IBGE.';
COMMENT ON COLUMN AJEL.PCNFSAID.TIPOEMPRESA IS 'Tipo da empresa do cliente.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODFISCALFRETE IS 'CFOP do frete na nota fiscal.';
COMMENT ON COLUMN AJEL.PCNFSAID.PERCICMFRETE IS 'Aliq.ICMS do frete na nota fiscal.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODFISCALOUTRASDESP IS 'CFOP da despesa na nota fiscal.';
COMMENT ON COLUMN AJEL.PCNFSAID.ALIQICMOUTRASDESP IS 'Aliq.ICMS da despesa na nota fiscal.';
COMMENT ON COLUMN AJEL.PCNFSAID.ATACADISTA IS 'Indica se o cliente é atacadista.';
COMMENT ON COLUMN AJEL.PCNFSAID.VLINSS IS 'Indica o valor do INSS.';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMCARANTERIOR IS 'Indica o numero do carregamento anterior.';
COMMENT ON COLUMN AJEL.PCNFSAID.OBSNFE IS 'Observações da NF-e.';
COMMENT ON COLUMN AJEL.PCNFSAID.TOTDIFALIQUOTAS IS 'Total do diferencial de alíquotas.';
COMMENT ON COLUMN AJEL.PCNFSAID.DTHORARECIBODPEC IS 'Data e hora do recibo DPEC.';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMTRANSVENDACONHEC IS 'Número de transação do conhecimento de frete.';
COMMENT ON COLUMN AJEL.PCNFSAID.VLDESPDENTRONF IS 'Indica o Valor outras despesas na NF.';
COMMENT ON COLUMN AJEL.PCNFSAID.DTHORAAUTORIZACAOSEFAZ IS 'Indica a hora que foi autorizado no sefaz.';
COMMENT ON COLUMN AJEL.PCNFSAID.RECIBONFE IS 'Indica o recibo de envio de lote.';
COMMENT ON COLUMN AJEL.PCNFSAID.LOTEDPEC IS 'Indica o número do lote dpec.';
COMMENT ON COLUMN AJEL.PCNFSAID.RECIBODPEC IS 'Indica o recibo de envio de lote dpec.';
COMMENT ON COLUMN AJEL.PCNFSAID.AMBIENTE IS 'Indica o ambiente em que foi enviada a nota.';
COMMENT ON COLUMN AJEL.PCNFSAID.PROTOCOLOCANCELAMENTO IS 'Indica o número do protocolo de cancelamento.';
COMMENT ON COLUMN AJEL.PCNFSAID.DTHORACANCELAMENTOSEFAZ IS 'Indica a data e hora em que foi cancelada no sefaz.';
COMMENT ON COLUMN AJEL.PCNFSAID.DTFECHA IS 'Data de fechamento da carga.';
COMMENT ON COLUMN AJEL.PCNFSAID.VENDATRIANGULAR IS 'Venda Triangular.';
COMMENT ON COLUMN AJEL.PCNFSAID.SITUACAOCTE IS 'Situaçao do cte';
COMMENT ON COLUMN AJEL.PCNFSAID.RECIBOCTE IS 'Recibo cte';
COMMENT ON COLUMN AJEL.PCNFSAID.PROTOCOLOCTE IS 'Protocolo do cte';
COMMENT ON COLUMN AJEL.PCNFSAID.CHAVECTE IS 'Chave do cte';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMLOTECTE IS 'Numero do lote do cte';
COMMENT ON COLUMN AJEL.PCNFSAID.DTA_HORAENVIOSEFAZ IS 'Data e hora do envio do cte ao sefaz';
COMMENT ON COLUMN AJEL.PCNFSAID.AMBIENTECTE IS 'Ambiente do cte';
COMMENT ON COLUMN AJEL.PCNFSAID.AMBIENTENFE IS 'Ambiente da nfe';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMSEQENTREGA IS 'Número de sequência de entrega';
COMMENT ON COLUMN AJEL.PCNFSAID.HORAEMISSAO IS 'Hora da emissão da venda.';
COMMENT ON COLUMN AJEL.PCNFSAID.CONTADORCUPOMFISCAL IS 'Contador cupom fiscal.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODPRODPREDOMINANTE IS 'Código produto predominante conhecimento de frete eletrônico.';
COMMENT ON COLUMN AJEL.PCNFSAID.DTLIBERACAOENTREGA IS 'Data de liberação de entrega do pedido na expedição.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODFUNCLIBERACAOENTREGA IS 'Código do funcionário que efetuou liberação de entrega do pedido na expedição.';
COMMENT ON COLUMN AJEL.PCNFSAID.TOTPESOLIQ IS 'Peso liquido dos produtos.';
COMMENT ON COLUMN AJEL.PCNFSAID.TOTPESOAGRUPADO IS 'Peso total agrupado.';
COMMENT ON COLUMN AJEL.PCNFSAID.TOTPESOLIQAGRUPADO IS 'Peso total liquido agrupado.';
COMMENT ON COLUMN AJEL.PCNFSAID.TOTVOLUMEAGRUPADO IS 'Volume total agrupado.';
COMMENT ON COLUMN AJEL.PCNFSAID.VLFRETERETIDO IS 'Valor de frete retido.';
COMMENT ON COLUMN AJEL.PCNFSAID.VLSTFRETERETIDO IS 'Valor ST de frete retido.';
COMMENT ON COLUMN AJEL.PCNFSAID.PERCFRETERETIDO IS 'Percentual de frete retido.';
COMMENT ON COLUMN AJEL.PCNFSAID.PERCSTFRETERETIDO IS 'Percentual de ST do frete retido.';
COMMENT ON COLUMN AJEL.PCNFSAID.PRAZO1 IS 'Prazo de pagamento em dias da primeira parcela.';
COMMENT ON COLUMN AJEL.PCNFSAID.PRAZO2 IS 'Prazo de pagamento em dias da segunda parcela.';
COMMENT ON COLUMN AJEL.PCNFSAID.PRAZO3 IS 'Prazo de pagamento em dias da terceira parcela.';
COMMENT ON COLUMN AJEL.PCNFSAID.PRAZO4 IS 'Prazo de pagamento em dias da quarta parcela.';
COMMENT ON COLUMN AJEL.PCNFSAID.PRAZO5 IS 'Prazo de pagamento em dias da quinta parcela.';
COMMENT ON COLUMN AJEL.PCNFSAID.PRAZO6 IS 'Prazo de pagamento em dias da sexta parcela.';
COMMENT ON COLUMN AJEL.PCNFSAID.PRAZO7 IS 'Prazo de pagamento em dias da sétima parcela.';
COMMENT ON COLUMN AJEL.PCNFSAID.PRAZO8 IS 'Prazo de pagamento em dias da oitava parcela.';
COMMENT ON COLUMN AJEL.PCNFSAID.PRAZO9 IS 'Prazo de pagamento em dias da nona parcela.';
COMMENT ON COLUMN AJEL.PCNFSAID.PRAZO10 IS 'Prazo de pagamento em dias da décima parcela.';
COMMENT ON COLUMN AJEL.PCNFSAID.PRAZO11 IS 'Prazo de pagamento em dias da décima primeira parcela.';
COMMENT ON COLUMN AJEL.PCNFSAID.PRAZO12 IS 'Prazo de pagamento em dias da décima segunda parcela.';
COMMENT ON COLUMN AJEL.PCNFSAID.CUSTOBONIFICACAO IS 'Custo da bonificação TV5.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODFORNECBONIFIC IS 'Código do Fornecedor da Bonificação TV5.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODBNF IS 'Código do tipo de bonificação TV5.';
COMMENT ON COLUMN AJEL.PCNFSAID.TOTPESOBRUTO IS 'Total do peso bruto das mercadorias.';
COMMENT ON COLUMN AJEL.PCNFSAID.DTSAIDANF IS 'Data de emissão da Nota Fiscal.';
COMMENT ON COLUMN AJEL.PCNFSAID.CONFERIDO IS 'Nota Fiscal Conferida.';
COMMENT ON COLUMN AJEL.PCNFSAID.JUSTIFICATIVACONTIGENCIA IS 'Motivo da entrada de contigência.';
COMMENT ON COLUMN AJEL.PCNFSAID.DTAHORAENTRADACONTIGENCIA IS 'Data e Hora da entrada de contigência.';
COMMENT ON COLUMN AJEL.PCNFSAID.CNPJCISP IS 'CNPJ para CISP.';
COMMENT ON COLUMN AJEL.PCNFSAID.CONSUMIUNUMNFE IS 'Se já tem um número de Nfe para o registro.';
COMMENT ON COLUMN AJEL.PCNFSAID.DTHORACTE IS 'Data e Hora do CTE.';
COMMENT ON COLUMN AJEL.PCNFSAID.TENTATIVAENVIOCTE IS 'Nro de Tentativas de Envio do CTE.';
COMMENT ON COLUMN AJEL.PCNFSAID.PROTOCOLOCANCELAMENTOCTE IS 'Protocolo de cancelamento do CTE.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODFORNECREDESPACHO IS 'Código fornecedore frete redespacho.';
COMMENT ON COLUMN AJEL.PCNFSAID.EMAILFRETE IS 'E-mail fornecedor frete.';
COMMENT ON COLUMN AJEL.PCNFSAID.EMAILFRETEREDESPACHO IS 'E-mail fornecedor frete redespacho.';
COMMENT ON COLUMN AJEL.PCNFSAID.DESPESASRATEADA IS 'Informar se o frete e outras despesas foram rateados nos itens.';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMTRANSENTORIGEM IS 'Campo que grava o número da transação de entrada associadas a nota fiscal de saída.';
COMMENT ON COLUMN AJEL.PCNFSAID.FORNECENTREGA IS 'Campo que grava a venda do cliente como venda com entrega pelo fornecedor.';
COMMENT ON COLUMN AJEL.PCNFSAID.UFPLACAVEIC IS 'Gravar a UF da Placa do Veiculo';
COMMENT ON COLUMN AJEL.PCNFSAID.DTEXPORTACAOWMS IS 'Data  e hora de exportação';
COMMENT ON COLUMN AJEL.PCNFSAID.DTIMPORTACAOWMS IS 'Data  e hora de importação';
COMMENT ON COLUMN AJEL.PCNFSAID.NFATUALWMS IS 'Atualização Nota Fiscal no WMAS Store.';
COMMENT ON COLUMN AJEL.PCNFSAID.FINALIDADENFE IS 'Finalidade NF-e';
COMMENT ON COLUMN AJEL.PCNFSAID.EMAILDEST IS 'E-mail do destinatário';
COMMENT ON COLUMN AJEL.PCNFSAID.TELEFONE IS 'Telefone do destinatário';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMENDERECO IS 'Número do Logradouro do destinatário';
COMMENT ON COLUMN AJEL.PCNFSAID.SERIEORIGINAL IS 'SERIE ORIGINAL DA NOTA FISCAL ELETRONICA';
COMMENT ON COLUMN AJEL.PCNFSAID.OBSPISCOFINS IS 'Observação da tributação de PIS/COFINS';
COMMENT ON COLUMN AJEL.PCNFSAID.VLBASEPISCOFINS IS 'Valor Base PIS/COFINS';
COMMENT ON COLUMN AJEL.PCNFSAID.PERPIS IS 'Percentual PIS';
COMMENT ON COLUMN AJEL.PCNFSAID.PERCOFINS IS 'Percentual COFINS';
COMMENT ON COLUMN AJEL.PCNFSAID.CODSITTRIBPISCOFINS IS 'Código Situação Tributário PIS COFINS';
COMMENT ON COLUMN AJEL.PCNFSAID.SITDOC IS 'Situação Documento';
COMMENT ON COLUMN AJEL.PCNFSAID.VALORST IS 'Valor de ST da nota fiscal';
COMMENT ON COLUMN AJEL.PCNFSAID.MENSAGEMPISCOFINS IS 'Mensagens da tributação PIS/COFINS';
COMMENT ON COLUMN AJEL.PCNFSAID.DATAEMPENHO IS 'Data de Empenho.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODUNIDADEEXECUTORA IS 'Código da unidade executora.';
COMMENT ON COLUMN AJEL.PCNFSAID.VLDESCICMS IS 'Valor de desconto do ICMS de isenção.';
COMMENT ON COLUMN AJEL.PCNFSAID.VLTOTALSEMDESCICMS IS 'Valor total da NF sem desconto de Isenção de ICMS.';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMEMPENHO IS 'Número de empenho do Órgão Púbico.';
COMMENT ON COLUMN AJEL.PCNFSAID.OBSEXP IS 'Obs. De ocorrência de entrega de nota fiscal.';
COMMENT ON COLUMN AJEL.PCNFSAID.CONTAORDEM IS 'Indica que a venda TV7, TV8 é do tipo conta e ordem.';
COMMENT ON COLUMN AJEL.PCNFSAID.DTFAT IS 'Data de faturamento';
COMMENT ON COLUMN AJEL.PCNFSAID.CODGERENTE IS 'Código do Gerente do RCA';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMPEDCLI IS 'Número do pedido do cliente';
COMMENT ON COLUMN AJEL.PCNFSAID.MOTORISTAVEICULO IS 'Motorista Veículo';
COMMENT ON COLUMN AJEL.PCNFSAID.CONSUMIUNUMCTE IS 'Consumiu número de cte';
COMMENT ON COLUMN AJEL.PCNFSAID.UTILIZAIPICALCICMS IS 'Utiliza IPI no calculo de ICMS';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMOS IS 'Campo para armazenar o número da ordem de serviço que gerou a NF.';
COMMENT ON COLUMN AJEL.PCNFSAID.WMSCODFUNCIGNORA IS 'Funcionário que ignorou WMS';
COMMENT ON COLUMN AJEL.PCNFSAID.WMSIGNORADO IS 'WMS Ignorado';
COMMENT ON COLUMN AJEL.PCNFSAID.PISRETIDO IS 'Identificar se foi retido PIS na nota fiscal de saída';
COMMENT ON COLUMN AJEL.PCNFSAID.INSSRETIDO IS 'Identificar se foi retido INSS na nota fiscal de saída';
COMMENT ON COLUMN AJEL.PCNFSAID.IRRRETIDO IS 'Identificar se foi retido IRR na nota fiscal de saída';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMTRANSENTDEST IS 'Gravar o NUMTRANSENT da nota de destino';
COMMENT ON COLUMN AJEL.PCNFSAID.MOTESTORNONFE IS 'Motivo de estorno Nfe';
COMMENT ON COLUMN AJEL.PCNFSAID.NATOPERNFE IS 'Nat. Operação Nfe';
COMMENT ON COLUMN AJEL.PCNFSAID.VENDAEXPORTACAO IS 'Venda de exportação';
COMMENT ON COLUMN AJEL.PCNFSAID.ENVIADOEMAILCANCELADO IS 'ENVIADO EMAIL CANCELADO';
COMMENT ON COLUMN AJEL.PCNFSAID.GERANFVENDA IS 'Informa se o número da nota foi gerado automatico.';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMCONTRATOCARRETEIRO IS 'Número do Contrato Carreteiro';
COMMENT ON COLUMN AJEL.PCNFSAID.VLDESCABATIMENTO IS 'GRAVAR O VALOR DO DESCONTO DO ABATIMENTO';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMLISTA IS 'Número da Lista de Presente';
COMMENT ON COLUMN AJEL.PCNFSAID.DEVSIMBOLICA IS 'Esse atributo serve para identificar se a operação, é uma devolução simbólica ou não.';
COMMENT ON COLUMN AJEL.PCNFSAID.VLIPIOUTRAS IS 'Esse atributo serve para armazenar o valor do ipi para devolução simbolica.';
COMMENT ON COLUMN AJEL.PCNFSAID.PROTOCOLO IS 'Número do protocolo';
COMMENT ON COLUMN AJEL.PCNFSAID.CODVEICULO1 IS 'Veículo 1';
COMMENT ON COLUMN AJEL.PCNFSAID.CODVEICULO2 IS 'Veículo 2';
COMMENT ON COLUMN AJEL.PCNFSAID.COFINSRETIDO IS 'Identificar se foi retido cofins na nota fiscal de saída';
COMMENT ON COLUMN AJEL.PCNFSAID.CSLLRETIDO IS 'Identificar se foi retido csll na nota fiscal de saída';
COMMENT ON COLUMN AJEL.PCNFSAID.GERARBCRNFE IS 'Inserir os valores Base e ST BCR no XML da NF-e';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMCARGAEDI IS 'Número Carga EDI';
COMMENT ON COLUMN AJEL.PCNFSAID.DEPOSITOFECHADO IS 'Identificação de deposito fechado';
COMMENT ON COLUMN AJEL.PCNFSAID.OBSNFCARREG IS 'OBSERVAÇÕES NA NOTA FISCAL REFERENTE A ENTREGA DA CARGA.';
COMMENT ON COLUMN AJEL.PCNFSAID.TIPOEMISSAOCTE IS 'Tipo Emissão Ct-e';
COMMENT ON COLUMN AJEL.PCNFSAID.DTEMISSAODECLARACAO IS 'Data de emissão da declaração emitida pelo tomador do Ct-e, quando este não for contribuinte';
COMMENT ON COLUMN AJEL.PCNFSAID.DTDENEGADA IS 'Data denegada';
COMMENT ON COLUMN AJEL.PCNFSAID.ENTREGA IS 'Indica se o item será entregue ao invés de ser retirando em venda balcão.';
COMMENT ON COLUMN AJEL.PCNFSAID.TAXAENTREGA IS 'Valor cobrado para realizar a entrega da compra.';
COMMENT ON COLUMN AJEL.PCNFSAID.UFPLACAVEI IS 'Uf da Placa do Veiculo';
COMMENT ON COLUMN AJEL.PCNFSAID.NORMAREGESPECIAL IS 'Norma Especifica (Regime Especial)';
COMMENT ON COLUMN AJEL.PCNFSAID.IDINTEGRACAOMYFROTA IS 'Identifica a integração com My Frota.';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMTRANSVENDATV13 IS 'Número de transação da nota fiscal tipo 13.';
COMMENT ON COLUMN AJEL.PCNFSAID.SITUACAONFEORIG IS 'Situação NFe Original.';
COMMENT ON COLUMN AJEL.PCNFSAID.CODMEDICOPRESCRIT IS 'Código do Médico Prescritor.';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMPEDVANXML IS 'Num. Pedido VAN para gravar no XML da NF-e.';
COMMENT ON COLUMN AJEL.PCNFSAID.CNPJFORNEC IS 'CNPF do Fornecedor.';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMCOMPROVANTE IS 'Número do comprovante do pagamento do pedagio.';
COMMENT ON COLUMN AJEL.PCNFSAID.CNPJRESPONSAVEL IS 'CNPF do Responsavel.';
COMMENT ON COLUMN AJEL.PCNFSAID.INUTILIZADA IS 'INFORMA SE FOI INUTILIZAÇÃO DE NUMERACAO.';
COMMENT ON COLUMN AJEL.PCNFSAID.AGREGASTVLMERC IS 'Agregar valor de ST ao valor da mercadoria.';
COMMENT ON COLUMN AJEL.PCNFSAID.CARTAODOTZ IS 'Número do CPF do cliente ou Número do cartão de fidelidade DOTZ.';
COMMENT ON COLUMN AJEL.PCNFSAID.RESPSEGURO IS 'RESPONSÁVEL PELO SEGURO';
COMMENT ON COLUMN AJEL.PCNFSAID.NOMESEGURADORA IS 'NOME DA SEGURADORA';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMEROAPOLICE IS 'NUMERO DA APOLICE DO SEGURO';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMEROAVERBACAO IS 'NUMERO DA AVERBAÇÃO DO SEGURO';
COMMENT ON COLUMN AJEL.PCNFSAID.SIMPLESNACIONAL IS 'Informar se o cliente é optante do simples';
COMMENT ON COLUMN AJEL.PCNFSAID.VLRAVERBACAO IS 'Valor da Averbação.';
COMMENT ON COLUMN AJEL.PCNFSAID.VLTRIBUTOS IS 'Guarda o Valor do Conhec. Frete X Perc.';
COMMENT ON COLUMN AJEL.PCNFSAID.CNPJCOLETA IS 'CNPJ do local de Coleta do CTE';
COMMENT ON COLUMN AJEL.PCNFSAID.RAZAOSOCIALCOLETA IS 'Razão Social do local de Coleta do CTE';
COMMENT ON COLUMN AJEL.PCNFSAID.LOGRADOUROCOLETA IS 'Logradouro do local de Coleta do CTE';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMEROCOLETA IS 'Número do endereço do local de Coleta do CTE';
COMMENT ON COLUMN AJEL.PCNFSAID.COMPLEMENTOCOLETA IS 'Complemento do local de Coleta do CTE';
COMMENT ON COLUMN AJEL.PCNFSAID.BAIRROCOLETA IS 'Bairro do local de Coleta do CTE';
COMMENT ON COLUMN AJEL.PCNFSAID.CODCIDADECOLETA IS 'Código da Cidade do local de Coleta do CTE';
COMMENT ON COLUMN AJEL.PCNFSAID.CNPJFORNECPEDAGIO IS 'CPNJ da empresa fornecedora do vale pedagio';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMVALEPEDAGIO IS 'Número do comprovante de compra do vale pedagio';
COMMENT ON COLUMN AJEL.PCNFSAID.CPNJRESPONSAVELPEDAGIO IS 'CNPJ do responsável pelo pagamento do vale pedágio';
COMMENT ON COLUMN AJEL.PCNFSAID.VALORPEDAGIO IS 'Valor do Vale Pedágio';
COMMENT ON COLUMN AJEL.PCNFSAID.DTPAGDOTZ IS 'Data do pagamento para Dotz.';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMTRANSCTEANUL IS 'Para que o Ct-e de substituição(Saída) seja vinculado ao Ct-e que foi excluído fiscalmente';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMTRANSCTESUBS IS 'Para que Ct-e de substituição(Saída) seja vinculado ao Ct-e de entrada';
COMMENT ON COLUMN AJEL.PCNFSAID.CHAVECTEREF IS 'Chave do cte referenciado';
COMMENT ON COLUMN AJEL.PCNFSAID.CNPJCPFCTEREF IS 'CNPJ/CPF do cte referenciado';
COMMENT ON COLUMN AJEL.PCNFSAID.IECTEREF IS 'Inscrição estadual do cte referenciado';
COMMENT ON COLUMN AJEL.PCNFSAID.RAZAOSOCIALCTEREF IS 'Razão social do cte referenciado';
COMMENT ON COLUMN AJEL.PCNFSAID.TIPODOCCTEREF IS 'Tipo do documento do cte referenciado';
COMMENT ON COLUMN AJEL.PCNFSAID.SERIEDOCCTEREF IS 'Série do documento do cte referenciado';
COMMENT ON COLUMN AJEL.PCNFSAID.SUBSERIEDOCCTEREF IS 'Sub-série do documento do cte referenciado';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMDOCCTEREF IS 'Número do documento do cte referenciado';
COMMENT ON COLUMN AJEL.PCNFSAID.DTEMISSAOCTEREF IS 'Data de emissão do cte referenciado';
COMMENT ON COLUMN AJEL.PCNFSAID.ORGAOPUBFEDERAL IS 'Orgão Pub. Federal';
COMMENT ON COLUMN AJEL.PCNFSAID.ORGAOPUBMUNICIPAL IS 'Orgão Pub. Municipal';
COMMENT ON COLUMN AJEL.PCNFSAID.NSUSOCIOTORCEDOR IS 'Número de Transação Sitef';
COMMENT ON COLUMN AJEL.PCNFSAID.CNPJCPFEMITENTESUB IS 'CNPJ ou CPF do emitente';
COMMENT ON COLUMN AJEL.PCNFSAID.MODELODOCSUB IS 'Modelo do documento fiscal';
COMMENT ON COLUMN AJEL.PCNFSAID.SERIEDOCSUB IS 'Serie do documento fiscal';
COMMENT ON COLUMN AJEL.PCNFSAID.SUBSERIEDOCSUB IS 'Subserie do documento fiscal';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMERODOCSUB IS 'Número do documento fiscal';
COMMENT ON COLUMN AJEL.PCNFSAID.VALORDOCSUB IS 'Valor do documento fiscal';
COMMENT ON COLUMN AJEL.PCNFSAID.DTEMISSAODOCSUB IS 'Data da emissão do documento fiscal';
COMMENT ON COLUMN AJEL.PCNFSAID.CHAVECTETOMADORSUB IS 'Chave de acesso do CT-e emitido pelo Tomador';
COMMENT ON COLUMN AJEL.PCNFSAID.CHAVECTEANULACAO IS 'Chave de acesso do CT-e de Anulação';
COMMENT ON COLUMN AJEL.PCNFSAID.CHAVECTESUBSTITUICAO IS 'Chave de acesso do CT-e a ser substituido (original)';
COMMENT ON COLUMN AJEL.PCNFSAID.CHAVENFETOMADORSUB IS 'Chave de acesso da NF-e emitida pelo Tomador';
COMMENT ON COLUMN AJEL.PCNFSAID.TIPODOCUMENTOSUB IS 'Flag para identificação do tipo do documento (NF/ NFE/ CT/ CTE)';
COMMENT ON COLUMN AJEL.PCNFSAID.UFCTEREF IS 'Sigla da UF do Emissor do documento anterior';
COMMENT ON COLUMN AJEL.PCNFSAID.VERSAOROTINA IS 'Versão da rotina gerarou os dados';
COMMENT ON COLUMN AJEL.PCNFSAID.VLDESCSOCIOTORCEDOR IS 'Desconto Sócio Torcedor';
COMMENT ON COLUMN AJEL.PCNFSAID.IDTIPOPRESENCA IS 'Indica o tipo de presença do comprador no estabelecimento no momento da operação';
COMMENT ON COLUMN AJEL.PCNFSAID.ROTINACADCTE IS 'Rotina que efetuou a geração do CTE';
COMMENT ON COLUMN AJEL.PCNFSAID.VLBONIFICACERTO IS 'Valor da bonificação acerto';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMREGEXP IS 'Número do Registro de Exportação ';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMCHAVEEXP IS 'Número da Chave de Acesso da Nfe recebida para exportação';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMDRAWBACK IS 'Número do ato concessório do Drawback';
COMMENT ON COLUMN AJEL.PCNFSAID.VLSUBTOTAL IS 'Valor do subtotal dos itens';
COMMENT ON COLUMN AJEL.PCNFSAID.IDLOCALDESTMERC IS 'Identificação do local de destino da mercadoria';
COMMENT ON COLUMN AJEL.PCNFSAID.CODPRODNFAJUSTE IS 'Código de produto para NF-e de ajuste';
COMMENT ON COLUMN AJEL.PCNFSAID.DESCRICAOPRODNFAJUSTE IS 'Descrição do produto paa NF ajuste';
COMMENT ON COLUMN AJEL.PCNFSAID.NCMNFAJUSTE IS 'NCM para item de NF de ajuste';
COMMENT ON COLUMN AJEL.PCNFSAID.UNIDADENFAJUSTE IS 'Unidade de medida para NF de ajuste';
COMMENT ON COLUMN AJEL.PCNFSAID.VLTOTBRUTOPRODAJUSTE IS 'Valor total bruto para NF de ajuste';
COMMENT ON COLUMN AJEL.PCNFSAID.OBSNFAJUSTE IS 'Observação complementar para NF de ajuste';
COMMENT ON COLUMN AJEL.PCNFSAID.CTECODTRANSPSUBCONTRATANTE IS 'Código da transportadora cte subcontratante';
COMMENT ON COLUMN AJEL.PCNFSAID.CTECODVEICULOSUBCONTRATANTE IS 'Código do veiculo cte subcontratante';
COMMENT ON COLUMN AJEL.PCNFSAID.CTECODTOMADORSERVICO IS 'Código do tomador de serviço cte subcontratado';
COMMENT ON COLUMN AJEL.PCNFSAID.CTECODTRANSPSUBCONTRATADO IS 'Código do veiculo cte subcontratado';
COMMENT ON COLUMN AJEL.PCNFSAID.CTESUBCONTRATADOCHAVECTEREF IS 'Chave do cte referenciado pelo tomador serviço';
COMMENT ON COLUMN AJEL.PCNFSAID.CODFORNECFRETECTEREF IS 'Código do fornecedor de frete referenciado (redespacho) informado na 1450';
COMMENT ON COLUMN AJEL.PCNFSAID.CODRECEBFRETECTEREF IS 'Código do Recebedor de frete referenciado(redespacho) informado na 1450';
COMMENT ON COLUMN AJEL.PCNFSAID.TIPOSERVICOCTE IS 'Código do tipo de serviço do CT-e';
COMMENT ON COLUMN AJEL.PCNFSAID.TIPOSUBCONTRATACAOCTE IS 'Tipo do CT-e';
COMMENT ON COLUMN AJEL.PCNFSAID.TIPOPRESENCAADQUIRINTE IS 'Tipo presença do adquirinte';
COMMENT ON COLUMN AJEL.PCNFSAID.DOCEMISSAO IS 'Tipo de documento de emissão da venda.';
COMMENT ON COLUMN AJEL.PCNFSAID.VLGRIS IS 'Valor do GRIS no conhecimento';
COMMENT ON COLUMN AJEL.PCNFSAID.VLDESPPEDAGIO IS 'Valor de Outras despesas de pedágio';
COMMENT ON COLUMN AJEL.PCNFSAID.VLTAS IS 'Valor do TAS no conheciemento';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMFECHAMENTOMOVCX IS 'Numero do fechamento da movimentacao';
COMMENT ON COLUMN AJEL.PCNFSAID.DTMOVIMENTOCX IS 'Data da movimentacao do caixa.';
COMMENT ON COLUMN AJEL.PCNFSAID.SELO IS 'Selo da sefaz';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMREMESSA IS 'Número remessa garantia';
COMMENT ON COLUMN AJEL.PCNFSAID.TIPOMOVGARANTIA IS 'Define qual tipo de movimentação de garantia a nota representa.';
COMMENT ON COLUMN AJEL.PCNFSAID.FORMULARIO IS 'Formulário da nota fiscal';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMNOTAMANIF IS 'Número da nota de manifesto';
COMMENT ON COLUMN AJEL.PCNFSAID.ORIGEMFRETE IS 'Origem do percentual de Frete';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMCIRURGIA IS 'Núm. Cirurgia';
COMMENT ON COLUMN AJEL.PCNFSAID.UTILIZAEXPDIVERSOS IS 'Valor do parâmetro na hora que foi gravada a NF';
COMMENT ON COLUMN AJEL.PCNFSAID.IDENTIFICARCLIENTENFCE IS 'Indentificar cliente NFC-e';
COMMENT ON COLUMN AJEL.PCNFSAID.MD5LISTAARQ IS 'MD5 da lista de arquivos PAF-ECF';
COMMENT ON COLUMN AJEL.PCNFSAID.VENDANFSERIED IS 'Venda NF Serie D';
COMMENT ON COLUMN AJEL.PCNFSAID.SITUACAONFEEPEC IS 'Situação Nfe EPEC';
COMMENT ON COLUMN AJEL.PCNFSAID.PROTOCOLONFEEPEC IS 'Protocolo de autorização EPEC';
COMMENT ON COLUMN AJEL.PCNFSAID.DATAHORAREGISTROEPEC IS 'Data e hora de registro do EPEC';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMSERIESAT IS 'Número de serie do SAT';
COMMENT ON COLUMN AJEL.PCNFSAID.CHAVESAT IS 'Chave NFCE gerada pelo SAT';
COMMENT ON COLUMN AJEL.PCNFSAID.SITUACAOSAT IS 'Situação da Venda';
COMMENT ON COLUMN AJEL.PCNFSAID.EMISSNUMAUTOMATICO IS 'Emissão de nota própia';
COMMENT ON COLUMN AJEL.PCNFSAID.DATAHORAEMISSAOSAT IS 'Data Hora Aprovação da venda';
COMMENT ON COLUMN AJEL.PCNFSAID.QRCODESAT IS 'Código Consulta venda';
COMMENT ON COLUMN AJEL.PCNFSAID.VLBOLETO IS 'Valor total de boleto na NF';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMTRANSENTNFESTORNADA IS 'Número da nota de devolução que gerou o estorno';
COMMENT ON COLUMN AJEL.PCNFSAID.NOTADUPLIQUESVC IS 'Validar as notas quando elas forem enviadas em ambiente de SVC. Quando nota for duplicada o campo deverá ser preenchido';
COMMENT ON COLUMN AJEL.PCNFSAID.TIPOINSCPRESTSERV IS 'Tipo da Inscrição do Prestador de Serviço';
COMMENT ON COLUMN AJEL.PCNFSAID.INDICPRESTSERV IS 'Indicativo de Prestação de Serviços';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMTRANSENTDEPENDENTE IS 'Transação de nota de entrada dependente';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMTRANSVENDADEPENDENTE IS 'Transação de nota de saida dependente';
COMMENT ON COLUMN AJEL.PCNFSAID.ROTINACAD IS 'Gravar a rotina que inseriu o registro na PCNFSAID';
COMMENT ON COLUMN AJEL.PCNFSAID.NOMEARQUIVODOTZ IS 'Campo para armazenar o nome do arquivo dotz no qual foi gerado';
COMMENT ON COLUMN AJEL.PCNFSAID.NOMEARQUIVODOTZESTORNO IS 'Campo para armazenar o nome do arquivo dotz no qual foi gerado para estorno';
COMMENT ON COLUMN AJEL.PCNFSAID.PONTOSDOTZ IS 'Pontuação do dotz na venda';
COMMENT ON COLUMN AJEL.PCNFSAID.VLBASERETENCAO IS 'Valor de base para rentenção do servico';
COMMENT ON COLUMN AJEL.PCNFSAID.CODRETENCAOCPRB IS 'Código de retenção do CPRB';
COMMENT ON COLUMN AJEL.PCNFSAID.CODSTATUSSAT IS 'Status da venda';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMVIASGNRE IS 'Número de impressões da nota na GNRE';
COMMENT ON COLUMN AJEL.PCNFSAID.QTDEREPROCNFE IS 'Quantidade de máxima de tentativas de aprovação da nota.';
COMMENT ON COLUMN AJEL.PCNFSAID.HORASAIDA IS 'Hora de saída';
COMMENT ON COLUMN AJEL.PCNFSAID.MINUTOSAIDA IS 'Minuto de saída';
COMMENT ON COLUMN AJEL.PCNFSAID.CTEREGIMEESPECIAL IS 'Define se o CT-e emitido pela rotina 1450 faz parte do regime especial PTA nº 45.000008189-09';
COMMENT ON COLUMN AJEL.PCNFSAID.NFDEVENTFUTURA IS 'Devolução NF entrega Futura';
COMMENT ON COLUMN AJEL.PCNFSAID.QRCODENFCE IS 'link para geração do qrcode da nfce';
COMMENT ON COLUMN AJEL.PCNFSAID.VLDESCFIN IS 'Valor do desconto financeiro';
COMMENT ON COLUMN AJEL.PCNFSAID.PERDESCFINTOT IS 'Percentual total do desconto financeiro na NF';
COMMENT ON COLUMN AJEL.PCNFSAID.HORAENTREGA IS 'Hora de entrega';
COMMENT ON COLUMN AJEL.PCNFSAID.MINUTOENTREGA IS 'Minuto de entrega';
COMMENT ON COLUMN AJEL.PCNFSAID.DTPAGCOMISSAO IS 'Data de pagamento da comissão';
COMMENT ON COLUMN AJEL.PCNFSAID.UIDREGISTRO IS 'Id único do registro de assinatura';
COMMENT ON COLUMN AJEL.PCNFSAID.IDPARCEIRO IS 'Id do parceiro da assinatura do registro';
COMMENT ON COLUMN AJEL.PCNFSAID.ASSINATURA IS 'Assinatura do registro';
COMMENT ON COLUMN AJEL.PCNFSAID.IMPRIMIUDACTEJUNTODANFE IS 'Imprimiu o DACTe junto ao DANFe vinculado (Se S, significa que o Cte foi impresso junto a Nfe vinculada)';
COMMENT ON COLUMN AJEL.PCNFSAID.TRANSFDEP IS 'Define se a NF é uma nota de transferência para o depósito fechado';
COMMENT ON COLUMN AJEL.PCNFSAID.TIPOTRANSFENTREDEPOSITO IS 'Tipo de transferência entre depósitos (E = Envio; R = Retorno)';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMNOTAVINCULADA IS 'Número de nota vinculada';
COMMENT ON COLUMN AJEL.PCNFSAID.TIPODOCARRECGNRE IS 'Tipo de documento - GNRE ou Documento Arrecadação';
COMMENT ON COLUMN AJEL.PCNFSAID.UFBENEFICIARIA IS 'Unidade Federação beneficiária';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMDOCARREC IS 'Número do documento de arrecadação';
COMMENT ON COLUMN AJEL.PCNFSAID.CODAUTENTICACAO IS 'Código de autenticação';
COMMENT ON COLUMN AJEL.PCNFSAID.VLDOCARRECADACAO IS 'Valor do documento de arrecadação';
COMMENT ON COLUMN AJEL.PCNFSAID.DTVENCARREC IS 'Data do Vencimento';
COMMENT ON COLUMN AJEL.PCNFSAID.DTPAGARREC IS 'Data do Pagamento';
COMMENT ON COLUMN AJEL.PCNFSAID.VLOPERACAOFRETE IS 'Valor da Operação';
COMMENT ON COLUMN AJEL.PCNFSAID.VLBASESTFRETE IS 'Base de cálculo ST frete';
COMMENT ON COLUMN AJEL.PCNFSAID.VLICMSSTFRETE IS 'Valor do ICMS/ST Frete';
COMMENT ON COLUMN AJEL.PCNFSAID.CTEGLOBALIZADO IS 'CT-e Globalizado (Sim ou Não)';
COMMENT ON COLUMN AJEL.PCNFSAID.TOMADORCTE IS 'Define o tomador do Cte (0-Remetente/1-Expedidor/2-Recebedor/3-Destinatário)';
COMMENT ON COLUMN AJEL.PCNFSAID.CNPJSEGURADORA IS 'CNPJ da seguradora';
COMMENT ON COLUMN AJEL.PCNFSAID.INFGLOBALIZADO IS 'Informações adicionais do Cte Globalizado';
COMMENT ON COLUMN AJEL.PCNFSAID.QTDEREPROCCTE IS 'Quantidade de reprocessamento CT-e';
COMMENT ON COLUMN AJEL.PCNFSAID.DTPAGCOMISSAOOP IS 'Fechamento de comissão do Operador';
COMMENT ON COLUMN AJEL.PCNFSAID.VLCSLL IS 'Valor do CSLL RETIDO NA NF';
COMMENT ON COLUMN AJEL.PCNFSAID.CODEDITAL IS 'Código Edital';
COMMENT ON COLUMN AJEL.PCNFSAID.FIL_MONTARKITAUTOMATICAMENTE IS 'grava o valor do parâmetro no momento da geração da nota fiscal';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMNOTAORIGEM IS 'Numero de nota original';
COMMENT ON COLUMN AJEL.PCNFSAID.PAGCHEQUEMORADIA IS 'Define se o cliente faz pagamento usando cheque moradia';
COMMENT ON COLUMN AJEL.PCNFSAID.CODCOBSEFAZ IS 'Código de cobrança da SEFAZ';
COMMENT ON COLUMN AJEL.PCNFSAID.DIGITOVERIFICADORNFSE IS 'Digito Verificardor NFSE';
COMMENT ON COLUMN AJEL.PCNFSAID.LINKNFSE IS 'Link de consulta NFSE';
COMMENT ON COLUMN AJEL.PCNFSAID.PROTOCOLONFSE IS 'Protocolo NFSE';
COMMENT ON COLUMN AJEL.PCNFSAID.SERIERPS IS 'Serie RPS';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMERORPS IS 'Numero RPS';
COMMENT ON COLUMN AJEL.PCNFSAID.SITUACAONFSE IS 'Situacao NFSE';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMNOTANFSE IS 'Numero nota NFSE';
COMMENT ON COLUMN AJEL.PCNFSAID.MD5PAF IS 'Assinatura MD5 do registro do PAF';
COMMENT ON COLUMN AJEL.PCNFSAID.USAMULTUNIDITEM IS 'Usa multimplas unidades (Master ou Venda) por item na entrada mercadoria';
COMMENT ON COLUMN AJEL.PCNFSAID.CONDFINANC IS 'Condição de financiamento suppliercard.';
COMMENT ON COLUMN AJEL.PCNFSAID.PLANOSUPPLI IS 'Plano de quantidade de parcelas suppliercard.';
COMMENT ON COLUMN AJEL.PCNFSAID.TIPOREMESSA IS 'Indica o tipo de simples remessa M-Manutenção B-Baixa de Item';
COMMENT ON COLUMN AJEL.PCNFSAID.CODTRANSPAUTONOMO IS 'Indica o código do transportador autônomo';
COMMENT ON COLUMN AJEL.PCNFSAID.VLTRANSPAUTONOMO IS 'indica o valor à pagar ao transportador autônomo';
COMMENT ON COLUMN AJEL.PCNFSAID.TRANSPAUTONOMO IS 'Indica se o transporte foi realizar por um transportador autônomo';
COMMENT ON COLUMN AJEL.PCNFSAID.GERARCPTRANSPAUNOTOMO IS 'Indica se irá gerar contas à pagar para o transportador autônomo';
COMMENT ON COLUMN AJEL.PCNFSAID.CODFORNECTRANSPAUTONOMO IS 'Indica o código do transportador autônomo do frete';
COMMENT ON COLUMN AJEL.PCNFSAID.VLTOTALFCPST IS 'Valor Total do Fundo de Combate a Pobreza ST';
COMMENT ON COLUMN AJEL.PCNFSAID.VLTOTALFCPICMS IS 'Valor Total do Fundo de Combate a Pobreza ICMS';
COMMENT ON COLUMN AJEL.PCNFSAID.VLFRETEOUTRASDESP IS 'Valor fixo da Taxa de Frete que será impresso na NF.';
COMMENT ON COLUMN AJEL.PCNFSAID.VLTOTALNFCOMPOEMCTE IS 'Valor total das notas fiscais que compõem o conhecimento de frete';
COMMENT ON COLUMN AJEL.PCNFSAID.DEDUZIRDESONERORGAOPUB IS 'Deduzir ICMS desonerado NF Licitação Orgãos Públicos';
COMMENT ON COLUMN AJEL.PCNFSAID.TIPOCONTACORRENTE IS 'Tipo de conta corrente movimentada: RCA, Supervisor ou Gerente';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMEROPROCESSO IS 'Número do processo';
COMMENT ON COLUMN AJEL.PCNFSAID.TIPOPROCESSO IS 'Tipo do processo';
COMMENT ON COLUMN AJEL.PCNFSAID.CODIGOINDICATIVOSUSPENSAO IS 'Código Indicativo de Suspensão';
COMMENT ON COLUMN AJEL.PCNFSAID.CODPROMOCAOMED IS 'Código da Promoção Medicamento';
COMMENT ON COLUMN AJEL.PCNFSAID.CODPLPAGETICO IS 'Código Plano Pagamento Etico';
COMMENT ON COLUMN AJEL.PCNFSAID.CODPLPAGGENERICO IS 'Código Plano Pagamento Genérico';
COMMENT ON COLUMN AJEL.PCNFSAID.VLPUNITMED IS 'Valor Total a Preço Unitário Medicamento';
COMMENT ON COLUMN AJEL.PCNFSAID.MATERIALDECONSTRUCAO IS 'Identifica se o pedido foi feito pelo modulo 041';
COMMENT ON COLUMN AJEL.PCNFSAID.DEDUZIRICMSBASEPISCOFINS IS 'Deduzir valor do ICMS da base de cálculo do PIS/COFINS';
COMMENT ON COLUMN AJEL.PCNFSAID.CODMUNINICTE IS 'Código do município de origem da prestação do serviço(Cte)';
COMMENT ON COLUMN AJEL.PCNFSAID.CODMUNFIMCTE IS 'Código do município de destino da prestação do serviço(Cte)';
COMMENT ON COLUMN AJEL.PCNFSAID.VLCREDICMSPRESUMIDO IS 'Valor de credito icms retido para ct-e';
COMMENT ON COLUMN AJEL.PCNFSAID.DATACONSOLIDACAOPREFAT IS 'Data consolidação Pré-Faturamento';
COMMENT ON COLUMN AJEL.PCNFSAID.VERSAOLAYOUTNFE IS 'Versão do layout do arquivo na Sefaz';
COMMENT ON COLUMN AJEL.PCNFSAID.OBSNFEFISCO IS 'Informações Adicionais de Interesse do Fisco';
COMMENT ON COLUMN AJEL.PCNFSAID.PCT_ESTOQUE IS 'Gravar a efetivação da package de estoque';
COMMENT ON COLUMN AJEL.PCNFSAID.PCT_CUSTO IS 'Gravar a efetivação do serviço de custo';
COMMENT ON COLUMN AJEL.PCNFSAID.CODDEVEDORCTE IS 'Código do Tomador/Devedor de serviço informado na geração de CTE';
COMMENT ON COLUMN AJEL.PCNFSAID.VLSERVICOFRETEAUTON IS 'Valor do serviço de frete autônomo';
COMMENT ON COLUMN AJEL.PCNFSAID.VLBASEFRETEAUTON IS 'Valor da base de cálculo do frete autônomo';
COMMENT ON COLUMN AJEL.PCNFSAID.ALIQICMFRETEAUTON IS 'Aliquota de ICMS do frete autônomo';
COMMENT ON COLUMN AJEL.PCNFSAID.VLICMFRETEAUTON IS 'Valor de ICMS do frete autônomo';
COMMENT ON COLUMN AJEL.PCNFSAID.CODFISCALFRETEAUTON IS 'Código fiscal utilizado no processo de frete autônomo';
COMMENT ON COLUMN AJEL.PCNFSAID.CODMUNICIPFATGERADOR IS 'Código IBGE municipio fato gerador no processo de frete autônomo';
COMMENT ON COLUMN AJEL.PCNFSAID.APROVEITASTDEVFORNEC IS 'Aproveita ST NF na devolução a fornecedor';
COMMENT ON COLUMN AJEL.PCNFSAID.USASRVTERCEIROS IS 'Identifica se durante o faturamento o valor do parametro 4182';
COMMENT ON COLUMN AJEL.PCNFSAID.ENVIADASEMRESPOSTA IS 'Define se a nota foi enviada a Sefaz mas não houve resposta, utilizado para reprocessamento.';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMNOTAPREF IS 'Número da NF da Prefeitura';
COMMENT ON COLUMN AJEL.PCNFSAID.STBCR IS 'Total do ST BCR na nota fiscal';
COMMENT ON COLUMN AJEL.PCNFSAID.SOMAREPASSEOUTRASDESPNF IS 'Se somou vlrepasse nas outras despesas';
COMMENT ON COLUMN AJEL.PCNFSAID.NFIPIEMITIDA IS 'Define se NF-e de IPI já foi emitida';
COMMENT ON COLUMN AJEL.PCNFSAID.INDICADORDESCONTO IS 'Indicador de desconto do PAFECF';
COMMENT ON COLUMN AJEL.PCNFSAID.INDICADORACRESCIMO IS 'Indicador de acréscimo do PAFECF';
COMMENT ON COLUMN AJEL.PCNFSAID.CODCOORDENADOR IS 'Código do Coordenador de Venda';
COMMENT ON COLUMN AJEL.PCNFSAID.IDSOFITVIEW IS 'Indica o código da receita na SofitView';
COMMENT ON COLUMN AJEL.PCNFSAID.DTEXCLUSAOSOFITVIEW IS 'Indica a data que a receita foi excluída na SofitView';
COMMENT ON COLUMN AJEL.PCNFSAID.CODGERENTENACIONAL IS 'Gerente Nacional';
COMMENT ON COLUMN AJEL.PCNFSAID.CODDIRETOR IS 'Diretor de Venda';
COMMENT ON COLUMN AJEL.PCNFSAID.CODGERENTEREGIONAL IS 'Gerente Regional';
COMMENT ON COLUMN AJEL.PCNFSAID.PEDIDOAVARIA IS 'Identificador de Pedido de Avaria';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMTRANSENTCROSSDOCK IS 'Número Trans. Entrada Pedido Crossdocking';
COMMENT ON COLUMN AJEL.PCNFSAID.QRCODE IS 'QRCODE PARA NF-e/CT-e';
COMMENT ON COLUMN AJEL.PCNFSAID.CODPROFISSIONAL IS 'Código do profissional utilizado no pedido.';
COMMENT ON COLUMN AJEL.PCNFSAID.REDUZICMSDOCTE IS 'Campo indica se o valor de ICMS vou reduzido do valor total do CT-e';
COMMENT ON COLUMN AJEL.PCNFSAID.VLJUROSPARCELAMENTO IS 'Valor de juros referente ao parcelamento do pagamento';
COMMENT ON COLUMN AJEL.PCNFSAID.PCT_ESTOQUE_CANCELAMENTO IS 'Utilizou PKG Estoque para Cancelar';
COMMENT ON COLUMN AJEL.PCNFSAID.PCT_CUSTO_CANCELAMENTO IS 'Utilizou PKG Custo para Cancelar';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMCIOT IS 'Número do controto do CIOT';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMTRANSENTORIGTV10 IS 'Número da Transação de Entrada de Origem da Transferencia';
COMMENT ON COLUMN AJEL.PCNFSAID.NFBRINDEZERADA IS 'NF Brinde com preço e impostos zerados';
COMMENT ON COLUMN AJEL.PCNFSAID.NFBRINDE IS 'Nota de Brinde';
COMMENT ON COLUMN AJEL.PCNFSAID.QTPALETE IS 'Campo utilizado para gravar quantidade de Palete do pedido';
COMMENT ON COLUMN AJEL.PCNFSAID.TOTPESOPALETE IS 'Campo utilizado para gravar o peso do Palete do pedido';
COMMENT ON COLUMN AJEL.PCNFSAID.CODIGONUMERICOCHAVE IS 'Código númerico que compoem a chave';
COMMENT ON COLUMN AJEL.PCNFSAID.TIPOIMPRESSAO IS 'Tipo de impressão (retrato ou paisagem)';
COMMENT ON COLUMN AJEL.PCNFSAID.DEDUZFUNCEPBASEPISCOFINS IS 'Deduzir valor do FUNCEP da Base de Cálculo do Pis/Cofins';
COMMENT ON COLUMN AJEL.PCNFSAID.CNPJINTERMEDIADOR IS 'CNPJ do Intermediador da Transação';
COMMENT ON COLUMN AJEL.PCNFSAID.DESCINTERMEDIADOR IS 'Nome do usuário ou identificação do perfil do vendedor no site do intermediador';
COMMENT ON COLUMN AJEL.PCNFSAID.DESFEZKITCANC IS 'Flag que indica se foi desfeito o kit/cesta/tinta.';
COMMENT ON COLUMN AJEL.PCNFSAID.DTEXPWMSSAAS IS 'Data de integração da NF no WMS SaaS';
COMMENT ON COLUMN AJEL.PCNFSAID.CALCDESONERACAOFATMEDICAM IS 'Calcular a Desoneração no Faturamento Farma/Hospitalar';
COMMENT ON COLUMN AJEL.PCNFSAID.GERARCPCT IS 'Gerar Contas a Pagar Conhecimento de Transporte';
COMMENT ON COLUMN AJEL.PCNFSAID.GERARCRCT IS 'Gerar Contas a Receber Conhecimento de Transporte';
COMMENT ON COLUMN AJEL.PCNFSAID.NUMTRANSPAGDIGITAL IS 'Número identificador da transação';


-- AJEL.TAB_PEDIDOC definition

CREATE TABLE "AJEL"."TAB_PEDIDOC" 
   (	"NUMPED" NUMBER(10,0) NOT NULL ENABLE, 
	"CODUSUR" NUMBER(8,0), 
	"CODCCLI" NUMBER(10,0), 
	"STATUS" VARCHAR2(1), 
	"VLTOTAL" NUMBER(18,2), 
	"POSICAO" VARCHAR2(1), 
	"DATAPEDIDO" DATE, 
	"DATACHEGADACLI" DATE, 
	"CODFUNCSEP" NUMBER(8,0), 
	"DATAINICIOSEP" DATE, 
	"DATAFIMSEP" DATE, 
	"CODFILIAL" VARCHAR2(2), 
	"CODFUNCBALCAO" NUMBER(8,0), 
	"DATAINICIOBALCAO" DATE, 
	"DATAFIMBALCAO" DATE, 
	"PAINEL" VARCHAR2(1), 
	"ORIGINAL" VARCHAR2(1), 
	"DATAPACOTE" DATE, 
	"FINALIZADO" VARCHAR2(1), 
	"QTITEM" NUMBER(4,0), 
	"ESTOQUE" VARCHAR2(1), 
	"RETIRA" VARCHAR2(1), 
	"CODFUNCPACOTE" NUMBER(8,0), 
	"RETIRANTE" VARCHAR2(100), 
	 CONSTRAINT "TAB_PEDIDOC_PK" PRIMARY KEY ("NUMPED")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" ;

CREATE OR REPLACE TRIGGER "AJEL"."TRG_TAB_PEDIDOC_CONFERENCIA" 
Before UPDATE of DATAFIMSEP ON TAB_PEDIDOC 
REFERENCING NEW AS newRow OLD AS oldRow
FOR EACH ROW
BEGIN
  IF  :newRow.STATUS = 'E' AND :newRow.DATAFIMSEP is not null and :newRow.RETIRA = 'G'
    THEN
        	update PCPEDC set DTFINALCHECKOUT = SYSDATE, codfuncconf = :newRow.CODFUNCSEP WHERE NUMPED = :newRow.NUMPED;
    else
          update PCPEDC set DTFINALCHECKOUT = null, codfuncconf =null WHERE NUMPED = :newRow.NUMPED; 
	END IF;	
END TRG_TAB_PEDIDOC_CONFERENCIA;
/
ALTER TRIGGER "AJEL"."TRG_TAB_PEDIDOC_CONFERENCIA" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_TAB_PEDIDOC_CONFERENCIA2" 
Before UPDATE of RETIRA ON TAB_PEDIDOC
REFERENCING NEW AS newRow OLD AS oldRow
FOR EACH ROW
BEGIN
  IF  :oldRow.DATAFIMSEP is not null and :oldRow.RETIRA = 'G'
    THEN
        	update PCPEDC set DTFINALCHECKOUT = SYSDATE, codfuncconf = :newRow.CODFUNCSEP WHERE NUMPED = :newRow.NUMPED;
    else
          update PCPEDC set DTFINALCHECKOUT = null, codfuncconf =null WHERE NUMPED = :newRow.NUMPED;
	END IF;
END TRG_TAB_PEDIDOC_CONFERENCIA;

/
ALTER TRIGGER "AJEL"."TRG_TAB_PEDIDOC_CONFERENCIA2" ENABLE;

CREATE UNIQUE INDEX "AJEL"."TAB_PEDIDOC_PK" ON "AJEL"."TAB_PEDIDOC" ("NUMPED") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" ;

COMMENT ON COLUMN AJEL.TAB_PEDIDOC.STATUS IS 'N-Digitado, A-Aguardando Cliente, B-Balcão, E-Em Separação, L-Finalizar, F-Conferência, X-Caixa, P-Pacote, C-Cancelado, R-Retira, T-Corte, H-Chamar Cliente, Z-Finalizado, V-Envio Balcão Vendedor';
COMMENT ON COLUMN AJEL.TAB_PEDIDOC.ESTOQUE IS 'S-Sim, N-Não';
COMMENT ON COLUMN AJEL.TAB_PEDIDOC.RETIRA IS 'S-Sim, N-Não G-Entrega';
COMMENT ON COLUMN AJEL.TAB_PEDIDOC.CODFUNCPACOTE IS 'Código do Funcionário do Pacote';
COMMENT ON COLUMN AJEL.TAB_PEDIDOC.RETIRANTE IS 'Nome do Cliente ou autorizado a retirar a mercadoria';


-- AJEL.PCPRODUT definition

CREATE TABLE "AJEL"."PCPRODUT" 
   (	"CODPROD" NUMBER(6,0) NOT NULL ENABLE, 
	"DESCRICAO" VARCHAR2(40) NOT NULL ENABLE, 
	"EMBALAGEM" VARCHAR2(12) NOT NULL ENABLE, 
	"UNIDADE" VARCHAR2(2), 
	"PESOLIQ" NUMBER(12,6), 
	"PESOBRUTO" NUMBER(12,6), 
	"CODEPTO" NUMBER(6,0) NOT NULL ENABLE, 
	"CODSEC" NUMBER(6,0) NOT NULL ENABLE, 
	"PCOMINT1" NUMBER(6,2), 
	"TEMREPOS" NUMBER(4,0), 
	"QTUNIT" NUMBER(6,2), 
	"OBS" VARCHAR2(2), 
	"PCOMREP1" NUMBER(6,2), 
	"PCOMEXT1" NUMBER(6,2), 
	"CODFORNEC" NUMBER(6,0) NOT NULL ENABLE, 
	"DTCADASTRO" DATE, 
	"VOLUME" NUMBER(20,8), 
	"CODAUXILIAR" NUMBER(20,0), 
	"CLASSE" VARCHAR2(1), 
	"LASTROPAL" NUMBER(10,4), 
	"ALTURAPAL" NUMBER(10,4), 
	"QTTOTPAL" NUMBER(8,2), 
	"PRAZOVAL" NUMBER(4,0), 
	"QTUNITCX" NUMBER(8,2), 
	"REVENDA" VARCHAR2(1), 
	"IMPORTADO" VARCHAR2(1), 
	"FOLHAROSTO" VARCHAR2(1), 
	"DTEXCLUSAO" DATE, 
	"MODULO" NUMBER(2,0), 
	"RUA" NUMBER(4,0), 
	"APTO" NUMBER(4,0), 
	"DTULTALTCOM" DATE, 
	"CAMPANHA" VARCHAR2(1), 
	"CODPRODPRINC" NUMBER(6,0), 
	"OBS2" VARCHAR2(2), 
	"PERCIPI" NUMBER(14,4), 
	"UNIDADEMASTER" VARCHAR2(2), 
	"CORREDOR" VARCHAR2(4), 
	"LARGURAM3" NUMBER(10,6), 
	"ALTURAM3" NUMBER(10,6), 
	"COMPRIMENTOM3" NUMBER(10,6), 
	"TIPORESTRICAO" VARCHAR2(1), 
	"QTTOTPALFRAC" NUMBER(6,2), 
	"DV" NUMBER(1,0), 
	"CLASSEVENDA" VARCHAR2(1), 
	"CLASSEMC" VARCHAR2(1), 
	"CLASSEESTOQUE" VARCHAR2(1), 
	"CLASSECOMPRA" VARCHAR2(1), 
	"PERICM" NUMBER(12,4), 
	"PERCDESC" NUMBER(12,4), 
	"PERCST" NUMBER(12,4), 
	"PERCBON" NUMBER(14,4), 
	"PERCFRETE" NUMBER(14,4), 
	"MOEDA" VARCHAR2(1), 
	"DTDOLAR" VARCHAR2(1), 
	"DESCRICAO1" VARCHAR2(45), 
	"DESCRICAO2" VARCHAR2(45), 
	"DESCRICAO3" VARCHAR2(45), 
	"DESCRICAO4" VARCHAR2(45), 
	"CLASSIFICFISCAL" VARCHAR2(20), 
	"CUSTOREP" NUMBER(18,6), 
	"DTULTALTCUSTOREP" DATE, 
	"NBM" VARCHAR2(15), 
	"CODFAB" VARCHAR2(30), 
	"TRIBFEDERAL" VARCHAR2(15), 
	"PERCIPIVENDA" NUMBER(10,2), 
	"PERCDESC1" NUMBER(12,4), 
	"PERCDESC2" NUMBER(12,4), 
	"PERCDESC3" NUMBER(12,4), 
	"PERCDESC4" NUMBER(12,4), 
	"PERICMSANTECIPADO" NUMBER(14,4), 
	"CODPRODSIMILAR" NUMBER(6,0), 
	"CODCATEGORIA" NUMBER(6,0), 
	"CODSUBCATEGORIA" NUMBER(6,0), 
	"CODFILIAL" VARCHAR2(2), 
	"TIPODESCARGA" VARCHAR2(1), 
	"STATUS" VARCHAR2(1), 
	"PERCOUTRASDESP" NUMBER(14,4), 
	"PERCFRETEFOB" NUMBER(18,6), 
	"PERCDESPADICIONAL" NUMBER(14,4), 
	"PERCDESPFIN" NUMBER(14,4), 
	"VLBONIFIC" NUMBER(18,6), 
	"PRECOFIXO" VARCHAR2(1) DEFAULT 'N', 
	"PISCOFINSRETIDO" VARCHAR2(1) DEFAULT 'N', 
	"PERCCOMMOT" NUMBER(8,2) DEFAULT '0', 
	"IVARESSARC" NUMBER(10,2), 
	"ICMSRESSARC" NUMBER(10,2), 
	"TIPOVOLUMEDESCARGA" VARCHAR2(2), 
	"COMISSAOFIXA" VARCHAR2(1) DEFAULT 'N', 
	"USACLASSIFICACAO" VARCHAR2(1) DEFAULT 'N', 
	"PERCIVAICMANTECIP" NUMBER(10,2), 
	"PERCALIQINTICMANTECIP" NUMBER(12,4), 
	"PERCALIQEXTICMANTECIP" NUMBER(12,4), 
	"PERCICMRED" NUMBER(12,4), 
	"PERCIVA" NUMBER(12,4), 
	"PERCALIQINT" NUMBER(12,4), 
	"PERCALIQEXT" NUMBER(12,4), 
	"CODAUXILIAR2" NUMBER(14,0), 
	"VENDADIRETA" VARCHAR2(1), 
	"PASSELIVRE" VARCHAR2(1) DEFAULT 'N', 
	"MODULO2" NUMBER(2,0), 
	"RUA2" NUMBER(4,0), 
	"NUMERO2" NUMBER(6,2), 
	"APTO2" NUMBER(2,0), 
	"CODPASSEFISCAL" NUMBER(8,0), 
	"TIPOALTURAPALETE" NUMBER(2,0), 
	"NUMLOTE" VARCHAR2(20), 
	"DTVENC" DATE, 
	"PERINDENIZ" NUMBER(5,2), 
	"PERPIS" NUMBER(12,4), 
	"MULTIPLO" NUMBER(18,6) DEFAULT '1', 
	"VLVENDATEMP" NUMBER(16,2), 
	"TIPOMERC" VARCHAR2(2), 
	"NORMAFORNECEDOR" VARCHAR2(10), 
	"TIPOCALCST" VARCHAR2(1), 
	"PERICMFRETE" NUMBER(8,4), 
	"LOTEMINCOMPRA" NUMBER(14,2), 
	"TIPOSUGCOMPRA" VARCHAR2(2), 
	"LOTEINCCOMPRA" NUMBER(14,2), 
	"LOTEPRODUCAO" NUMBER(14,2), 
	"AUTORIZATIPO4" VARCHAR2(1) DEFAULT 'N', 
	"ACEITAVENDAFRACAO" VARCHAR2(1), 
	"CODFUNCCADASTRO" NUMBER(8,0), 
	"CODFUNCULTALTER" NUMBER(8,0), 
	"CODFISCAL" NUMBER(10,0), 
	"SITTRIBUT" VARCHAR2(3), 
	"MARGEMMIN" NUMBER(4,2), 
	"FLAGS" VARCHAR2(1), 
	"FLAG0" VARCHAR2(2), 
	"FLAG1" VARCHAR2(2), 
	"FLAG2" VARCHAR2(2), 
	"LARGURAARM" NUMBER(10,6), 
	"COMPRIMENTOARM" NUMBER(10,6), 
	"ALTURAARM" NUMBER(10,6), 
	"VOLUMEARM" NUMBER(20,8), 
	"CAMAPAPAL" NUMBER(10,4), 
	"TIPOPROD" NUMBER(2,0), 
	"TIPOPAL" NUMBER(2,0), 
	"TIPOARM" NUMBER(2,0) DEFAULT '9', 
	"CAPACIDADEPICKING" NUMBER(8,2), 
	"CODCARACPROD" NUMBER(3,0), 
	"CODTIPOESTRUTURA" NUMBER(3,0), 
	"RESTRICAOBLOCADO" NUMBER(3,0), 
	"PONTOREPOSICAO" NUMBER(8,2), 
	"TIPOPALPUL" NUMBER(2,0), 
	"CODTIPOESTRUTURAPUL" NUMBER(3,0), 
	"CODPRODMASTER" NUMBER(6,0), 
	"QTUNITCT" NUMBER(6,2), 
	"RUACT" NUMBER(4,0), 
	"NUMEROCT" NUMBER(6,2), 
	"APTOCT" NUMBER(2,0), 
	"MODULOCT" NUMBER(2,0), 
	"RUACX" NUMBER(4,0), 
	"APTOCX" NUMBER(4,0), 
	"MODULOCX" NUMBER(2,0), 
	"UNIDADECT" VARCHAR2(2), 
	"VLPAUTA" NUMBER(18,6), 
	"VLPAUTAIPI" NUMBER(18,6), 
	"EMBALAGEMMASTER" VARCHAR2(12), 
	"EMBALAGEMCT" VARCHAR2(12), 
	"NUMDIASMAXVENDA" NUMBER(3,0), 
	"USAALIQCREDICMSDIFER" VARCHAR2(1) DEFAULT 'N', 
	"PERCALIQCREDICMSDIFEREST" NUMBER(5,2), 
	"PERCALIQCREDICMSDIFERINTER" NUMBER(5,2), 
	"PSICOTROPICO" VARCHAR2(1) DEFAULT 'N', 
	"CODLINHAPROD" NUMBER(6,0), 
	"CUSTOREPTAB" NUMBER(18,6), 
	"PRECOMAXCONSUM" NUMBER(18,6), 
	"PRECOMAXCONSUMTAB" NUMBER(18,6), 
	"PERCDESC5" NUMBER(12,4), 
	"NUMLISTAINVENTROT" NUMBER(6,0), 
	"NUMSEQINVENTROT" NUMBER(6,0), 
	"MEDICAMENTOHOSPITALAR" VARCHAR2(1) DEFAULT 'N', 
	"PERCBONIFICVENDA" NUMBER(5,2), 
	"PRINCIPIOATIVO" VARCHAR2(100), 
	"TIPOTRIBUTMEDIC" VARCHAR2(2), 
	"DEPOSITO" NUMBER(3,0), 
	"PREDIO" NUMBER(3,0), 
	"NIVEL" NUMBER(3,0), 
	"CODEQUIPE" NUMBER(4,0), 
	"PERCSUFRAMA" NUMBER(12,4), 
	"EXPORTABALANCA" VARCHAR2(1), 
	"CODINFNUTRI" NUMBER(14,0), 
	"SOMENTETV3" VARCHAR2(1) DEFAULT 'N', 
	"PCOMTLMKT" NUMBER(6,2), 
	"SEQTABPRECO" NUMBER(4,0), 
	"QTPONTOPEDIDO" NUMBER(20,8), 
	"QTMINPRODUZIR" NUMBER(20,8), 
	"PRAZOMEDIOPRODUCAO" NUMBER(5,0), 
	"NOMECOMERCIAL" VARCHAR2(100), 
	"FRACAOSEPARACAO" NUMBER(20,8), 
	"FATORTRANSF" NUMBER(18,6), 
	"TAMANHOLOTEFAB" NUMBER(18,6), 
	"VELOCIDADEESP" NUMBER(18,6), 
	"VELOCIDADEOPERACIONAL" NUMBER(18,6), 
	"EFICIENCIAOPERACIONAL" NUMBER(10,2), 
	"CODFILIALPRODUTORA" VARCHAR2(2), 
	"FATORUNFARM" NUMBER(10,0), 
	"VOLUMEREC" NUMBER(20,8), 
	"PRAZO" NUMBER(4,0), 
	"PRAZOENTR" NUMBER(3,0), 
	"CODPRINCIPATIVO" NUMBER(10,0), 
	"CODPRODSINTEGRA" VARCHAR2(20), 
	"TIPORESTRICAOMED" VARCHAR2(2) DEFAULT 'NR', 
	"INFORMACOESTECNICAS" VARCHAR2(500), 
	"FRETEESPECIAL" VARCHAR2(1) DEFAULT 'N', 
	"DIRFOTOPROD" VARCHAR2(100), 
	"CUSTOREPMC" NUMBER(18,6), 
	"TIPOMP" VARCHAR2(2), 
	"PESOBRUTOMASTER" NUMBER(10,3), 
	"PESOLIQMASTER" NUMBER(10,3), 
	"PCKROTATIVO" VARCHAR2(1) DEFAULT 'N', 
	"PRAZOEXPURGO" NUMBER(3,0) DEFAULT '0', 
	"NUMULTEXPURGO" NUMBER(10,0), 
	"DTULTEXPURGO" DATE, 
	"DTPROXEXPURGO" DATE, 
	"PERCDESC6" NUMBER(12,4), 
	"PERCDESC7" NUMBER(12,4), 
	"PERCDESC8" NUMBER(12,4), 
	"PERCDESC9" NUMBER(12,4), 
	"PERCDESC10" NUMBER(12,4), 
	"NUMORIGINAL" VARCHAR2(20), 
	"DEPOSITOCX" NUMBER(3,0), 
	"PREDIOCX" NUMBER(3,0), 
	"NIVELCX" NUMBER(3,0), 
	"PONTOREPOSICAOCX" NUMBER(8,2), 
	"CAPACIDADEPICKINGCX" NUMBER(8,2), 
	"DENOMINACAOCOMUNBRASILEIRA" VARCHAR2(10), 
	"PERCTOLERANCIAVAL" NUMBER(6,3), 
	"DESCRICAO5" VARCHAR2(45), 
	"DESCRICAO6" VARCHAR2(45), 
	"DESCRICAO7" VARCHAR2(45), 
	"CUSTOPROXIMACOMPRA" NUMBER(18,6), 
	"CODDISTRIB" VARCHAR2(4), 
	"ABASTEPALETE" VARCHAR2(1), 
	"ABASTEPALETECX" VARCHAR2(1), 
	"FRACIONADO" VARCHAR2(1), 
	"MEDCODFUNCLIBVENDA" NUMBER(8,0), 
	"MEDDTLIBVENDA" DATE, 
	"CODNESTLETERCEIROS" VARCHAR2(15) DEFAULT '99990010', 
	"FATORCONVERSAONESTLE" NUMBER(10,6), 
	"PERCVENDA" NUMBER(5,2), 
	"CONFAZ" VARCHAR2(1) DEFAULT 'N', 
	"MULTIPLO2" NUMBER(18,6), 
	"ANVISANUMREGMED" VARCHAR2(20), 
	"ANVISAQTEMBALAGEM" NUMBER(5,0), 
	"ANVISAFORMAFARM" VARCHAR2(20), 
	"ANVISAVIAADM" VARCHAR2(20), 
	"ANVISACLASTERAPEUTICA" VARCHAR2(40), 
	"ANVISAUSOCONTINUO" VARCHAR2(1), 
	"ANVISACAPINSTAL" NUMBER(11,0), 
	"ANVISACONCEN" NUMBER(10,2), 
	"ANVISAUNDOSAG" VARCHAR2(3), 
	"ANVISANUMPRINCAT" NUMBER(4,0), 
	"ANVISADESCPRINCAT1" VARCHAR2(100), 
	"ANVISADESCPRINCAT2" VARCHAR2(100), 
	"ANVISADESCPRINCAT3" VARCHAR2(100), 
	"ANVISADESCPRINCAT4" VARCHAR2(100), 
	"ANVISACOEFTEC" VARCHAR2(20), 
	"ANVISAUNCOEFTEC" VARCHAR2(3), 
	"PAISORIGEM" VARCHAR2(40), 
	"TIPOEMBALAGEMNESTLE" NUMBER(2,0), 
	"CODENDERECOAP" NUMBER(10,0), 
	"CODENDERECOCX" NUMBER(10,0), 
	"CUSTOREPZFM" NUMBER(18,6), 
	"CUSTOREPZFMTAB" NUMBER(18,6), 
	"PRECOMAXCONSUMZFM" NUMBER(18,6), 
	"PRECOMAXCONSUMZFMTAB" NUMBER(18,6), 
	"MEXIVA" NUMBER(10,6), 
	"MEXIEPS" NUMBER(10,6), 
	"MEXFPGC" NUMBER(10,6), 
	"USACROSS" VARCHAR2(1) DEFAULT 'S', 
	"USAWMS" VARCHAR2(1), 
	"CODGENEROFISCAL" NUMBER(6,0), 
	"QTMAXGONDULA" NUMBER(6,0), 
	"QTMINGONDULA" NUMBER(6,0), 
	"UTILIZARVASILHAME" VARCHAR2(1) DEFAULT 'N', 
	"CODVASILHAME" NUMBER(6,0), 
	"NUMSEQATU" NUMBER, 
	"TIPOEMBALAGE" VARCHAR2(2) DEFAULT 'E1', 
	"TIPOCARGA" NUMBER(4,0) DEFAULT '1', 
	"ALIQAVULSADARE" NUMBER(5,2), 
	"PERCBASEREDENT" NUMBER(10,4), 
	"VLIPIPORKG" NUMBER(18,6), 
	"TIPOPISCOFINSRETIDO" NUMBER(2,0), 
	"ESPECIFICOATIVIDADEPR" VARCHAR2(1) DEFAULT 'S', 
	"CODROTINAULTALTER" NUMBER(6,0), 
	"COMISSAOPORLUCRATIVIDADE" VARCHAR2(1), 
	"VLIPIPESO" NUMBER(12,4), 
	"TIPOCOMISSAO" VARCHAR2(1) DEFAULT 'P', 
	"TIPOESTOQUE" VARCHAR2(2), 
	"PESOPECA" NUMBER(20,8), 
	"RESTRICAOTRANSP" VARCHAR2(1) DEFAULT 'N', 
	"CODPRAZOENT" VARCHAR2(4), 
	"QTMETROS" NUMBER(18,6), 
	"PESOPALETE" NUMBER(10,6), 
	"CODENDERECOAL" NUMBER(10,0), 
	"VALIDARLOTE" VARCHAR2(1) DEFAULT 'S', 
	"CODGRADE" NUMBER(10,0), 
	"CODCOR" NUMBER(10,0), 
	"COLUNAGRADE" NUMBER(2,0), 
	"ISENTOREGMS" VARCHAR2(2) DEFAULT 'S', 
	"REGMS" VARCHAR2(20), 
	"CODFISCALBONIFIC" NUMBER(10,0), 
	"CODFISCALSR" NUMBER(10,0), 
	"CUSTOREPANT" NUMBER(18,6), 
	"ESTOQUEPORLOTE" VARCHAR2(1), 
	"PROXNUMLOTE" NUMBER(8,0), 
	"CONTROLAVALIDADEDOLOTE" VARCHAR2(1), 
	"PREFIXOLOTE" VARCHAR2(5), 
	"PRAZOMEDIOVENDA" NUMBER(5,0), 
	"PERCCREDICMPRESUMIDO" NUMBER(12,4), 
	"PONTOREPOSICAOAL" NUMBER(8,2), 
	"CAPACIDADEPICKINGAL" NUMBER(8,2), 
	"TIPONORMA" VARCHAR2(1), 
	"RECMINARM" NUMBER(4,0), 
	"NORMAPALETE" VARCHAR2(10), 
	"REDBASEIVA" NUMBER(18,6), 
	"REDBASEALIQEXT" NUMBER(18,6), 
	"QTMINIMAATACADO" NUMBER(6,0), 
	"QTMINIMAATACADOF" NUMBER(6,0), 
	"CONCILIAIMPORTACAO" VARCHAR2(1), 
	"PERCBONOUTRAS" NUMBER(18,6), 
	"PERCIMPORTACAO" NUMBER(12,4), 
	"PERCOFINSIMP" NUMBER(8,2), 
	"PERPISIMP" NUMBER(8,2), 
	"VLMAODEOBRA" NUMBER(12,6), 
	"PCOMPROF1" NUMBER(6,2), 
	"CODRISCO" VARCHAR2(4), 
	"CODACONDICIONAMENTO" VARCHAR2(4), 
	"CONFERENOCHECKOUT" VARCHAR2(1) DEFAULT 'S', 
	"VLCALORICO" VARCHAR2(100), 
	"PROTEINA" VARCHAR2(100), 
	"LIPIDEO" VARCHAR2(100), 
	"UMIDADE" VARCHAR2(100), 
	"COL95" VARCHAR2(100), 
	"SALMONELA" VARCHAR2(100), 
	"BOLORESLEVEDURAS" VARCHAR2(100), 
	"ESTFAUREAUS" VARCHAR2(100), 
	"MOFADO" VARCHAR2(100), 
	"TOTDEFEITO" VARCHAR2(100), 
	"CODAGRUPMAPASEP" VARCHAR2(2), 
	"PERCPERDAKG" NUMBER(12,4) DEFAULT '0', 
	"APROVEITACREDICMS" VARCHAR2(1) DEFAULT 'N', 
	"APROVEITACREDPISCOFINS" VARCHAR2(1) DEFAULT 'N', 
	"CUSTOFORNEC" NUMBER(12,6), 
	"PERCDESCICMS" NUMBER(12,6), 
	"PERCACRES" NUMBER(12,6), 
	"PTABELAFORNEC" NUMBER(12,6), 
	"CHECARMULTIPLOVENDABNF" VARCHAR2(1), 
	"VLICMSANTECIPADO" NUMBER(18,6) DEFAULT '0', 
	"CLASSECOMISSAO" VARCHAR2(2), 
	"FRACAOCIPA" NUMBER(8,0), 
	"ANALISEDESC" VARCHAR2(100), 
	"VOLPESMED" VARCHAR2(100), 
	"PH" VARCHAR2(100), 
	"DENSIDADE" VARCHAR2(100), 
	"DOSEAMENTO" VARCHAR2(100), 
	"CONTMICROBIANA" VARCHAR2(100), 
	"IDENTIFICACAO" VARCHAR2(100), 
	"IMPUREZA" VARCHAR2(100), 
	"FRIABILIDADE" VARCHAR2(100), 
	"DESINTEGRACAO" VARCHAR2(100), 
	"DISSOLUCAO" VARCHAR2(100), 
	"UNIFORMIDADE" VARCHAR2(100), 
	"DIRASSINATURA" VARCHAR2(140), 
	"VERSANALISE" NUMBER(8,0), 
	"CONTLOGANALISE" NUMBER(8,0), 
	"PESQPATOGENOS" VARCHAR2(100), 
	"USAPULMAOREGULADOR" VARCHAR2(1), 
	"QTPULMAOREGULADOR" NUMBER(4,0), 
	"CODENDERECOPA" NUMBER(10,0), 
	"CAPACIDADEPA" NUMBER(8,2), 
	"PONTOREPOSICAOPA" NUMBER(8,2), 
	"CODPRODEMBALAGEM" NUMBER(6,0), 
	"CONSIDERARICMSANTECIPCUSTO" VARCHAR2(1) DEFAULT 'S', 
	"PERCOFINS" NUMBER(12,4), 
	"PERCREDICMS" NUMBER(12,4), 
	"DTIMPORTINTEGRACAO" DATE, 
	"DTULTALTER" DATE, 
	"UMIDADEANALISE" VARCHAR2(100), 
	"PERCDIFERENCAKGFRIO" NUMBER(12,4), 
	"REDBASEALIQEXTBCR" NUMBER(18,6), 
	"PERCALIQEXTBCR" NUMBER(12,4), 
	"PERCALIQINTBCR" NUMBER(12,4), 
	"VLADICIONALBCSTBCR" NUMBER(18,6), 
	"VLPAUTABCR" NUMBER(18,6), 
	"REDBASEIVABCR" NUMBER(18,6), 
	"PERCIVABCR" NUMBER(10,2), 
	"CALCCREDIPI" VARCHAR2(1) DEFAULT 'N', 
	"ENVIARFORCAVENDAS" VARCHAR2(1) DEFAULT 'S', 
	"DADOSTECNICOS" CLOB, 
	"CODFISCALENTTRANSF" NUMBER(4,0), 
	"PRAZOMINVALIDADE" NUMBER(5,2), 
	"PRAZOMAXVALIDADE" NUMBER(5,2), 
	"UTILIZAPRECOMAXCONSUMIDOR" VARCHAR2(1) DEFAULT 'N', 
	"PERCIMPPRODUTORURAL" NUMBER(12,4), 
	"DESTAQUEFICHATECNICA" VARCHAR2(1) DEFAULT 'N', 
	"NUMPAG" NUMBER(4,0), 
	"LETRAPAGINA" VARCHAR2(1), 
	"SEQPAGINA" NUMBER(4,0), 
	"CODONU" VARCHAR2(4), 
	"NATUREZAPRODUTO" VARCHAR2(2), 
	"DATAVOCOLLECT" DATE, 
	"PERCICMSFRETEFOBST" NUMBER(12,4), 
	"PERCICMSFRETEFOBSTBCR" NUMBER(12,4), 
	"PERCIPIVENDATAB" NUMBER(10,2), 
	"VLPAUTAIPIVENDA" NUMBER(18,6), 
	"VLPAUTAIPIVENDATAB" NUMBER(18,6), 
	"VLIPIPORKGVENDA" NUMBER(18,6), 
	"VLIPIPORKGVENDATAB" NUMBER(18,6), 
	"IMUNETRIB" VARCHAR2(1), 
	"CODFORMATOPAPEL" NUMBER(6,0), 
	"GRAMATURA" NUMBER(7,3), 
	"CODUNIDMEDIDANF" NUMBER(2,0), 
	"FATORCONVERSAOKG" NUMBER(14,3), 
	"DESCPAPEL" VARCHAR2(60), 
	"CODFISCALCONSIGFAT" NUMBER(10,0), 
	"PERCDIFALIQUOTAS" NUMBER(8,4), 
	"VLDIFALIQUOTAS" NUMBER(18,6), 
	"PESOVARIAVEL" VARCHAR2(1) DEFAULT 'S', 
	"VLPAUTAICMS" NUMBER(18,6), 
	"VLADICIONALBCST" NUMBER(18,6), 
	"COMPRACONSIGNADO" VARCHAR2(1) DEFAULT 'N', 
	"CODFISCALCONSIG" NUMBER(10,0), 
	"PRAZOGARANTIA" NUMBER(5,0), 
	"CONTROLANUMSERIE" VARCHAR2(1), 
	"QTDEMAXSEPARPEDIDO" NUMBER(4,0), 
	"PERCDESPFORANF" NUMBER(12,4), 
	"PRAZOMAXINDENIZACAO" NUMBER(3,0), 
	"CODFILIALRETIRA" VARCHAR2(2), 
	"CODMARCA" NUMBER(8,0), 
	"PESOEMBALAGEM" NUMBER(14,7), 
	"EX_DOSEAMENTO" VARCHAR2(1) DEFAULT 'S', 
	"EX_IMPUREZA" VARCHAR2(1) DEFAULT 'S', 
	"MARCA" VARCHAR2(20), 
	"CONTROLANUMSERIA" VARCHAR2(1), 
	"PVENDA" NUMBER(24,6), 
	"DTULTALTERSRVPRC" DATE, 
	"EX_UMIDADE" VARCHAR2(1), 
	"EX_COL95" VARCHAR2(1), 
	"EX_SALMONELA" VARCHAR2(1), 
	"EX_BOLORESLEVEDURAS" VARCHAR2(1), 
	"EX_ESTFAUREAUS" VARCHAR2(1), 
	"EX_MOFADO" VARCHAR2(1), 
	"EX_TOTDEFEITO" VARCHAR2(1), 
	"EX_VLCALORICO" VARCHAR2(1), 
	"EX_PROTEINA" VARCHAR2(1), 
	"EX_LIPIDEO" VARCHAR2(1), 
	"EX_VOLPESMED" VARCHAR2(1), 
	"EX_ANALISEDESC" VARCHAR2(1), 
	"EX_UNIFORMIDADE" VARCHAR2(1), 
	"EX_DISSOLUCAO" VARCHAR2(1), 
	"EX_DESINTEGRACAO" VARCHAR2(1), 
	"EX_FRIABILIDADE" VARCHAR2(1), 
	"EX_IDENTIFICACAO" VARCHAR2(1), 
	"EX_PESQPATOGENOS" VARCHAR2(1), 
	"EX_CONTMICROBIANA" VARCHAR2(1), 
	"EX_DENSIDADE" VARCHAR2(1), 
	"EX_PH" VARCHAR2(1), 
	"UNDPOREMBALAGEM" NUMBER(8,2), 
	"PERCICMSDIFERIDO" NUMBER(8,4), 
	"NUMDIASVALIDADEMIN" NUMBER(8,0), 
	"PRECIFICESTRANGEIRA" VARCHAR2(1) DEFAULT 'N', 
	"PERCSEGURO" NUMBER(14,4), 
	"PERCDESPDENTRONF" NUMBER(14,4), 
	"QTDMAXSEPARARPEDIDO" NUMBER(4,0), 
	"FUNDAPIANO" VARCHAR2(1) DEFAULT 'N', 
	"PERCDESCICMSDIF" NUMBER(8,4), 
	"CODPRODDNF" NUMBER(3,0), 
	"CAPVOLDNF" NUMBER(5,0), 
	"FATORCONVDNF" NUMBER(18,6), 
	"PERCALIQEXTGUIA" NUMBER(12,4), 
	"CODPRODRELEV" NUMBER(10,0), 
	"DTALTCUSTOFORNEC" DATE, 
	"CONTROLAPATRIMONIO" VARCHAR2(1) DEFAULT 'S', 
	"BASEPISCOFINSLITRAGEM" NUMBER(18,6), 
	"VALORPISLITRAGEM" NUMBER(18,6), 
	"VALORCOFINSLITRAGEM" NUMBER(18,6), 
	"PISRETIDO" NUMBER(5,2), 
	"COFINSRETIDO" NUMBER(5,2), 
	"IRRETIDO" NUMBER(5,2), 
	"CSLLRETIDO" NUMBER(5,2), 
	"EXTIPI" VARCHAR2(3), 
	"ANVISA" VARCHAR2(20), 
	"SIMPRO" VARCHAR2(20), 
	"VLRAPLICINT" NUMBER(18,6), 
	"SUBSTANCIA" VARCHAR2(10), 
	"CODEXCECAOPISCOFINS" NUMBER(6,0), 
	"NOMEECOMMERCE" VARCHAR2(200), 
	"TITULOECOMMERCE" VARCHAR2(200), 
	"SUBTITULOECOMMERCE" VARCHAR2(200), 
	"DIRETORIOFOTOS" VARCHAR2(200), 
	"DTEXPORTACAOWMS" DATE, 
	"DTIMPORTACAOWMS" DATE, 
	"CODNCMEX" VARCHAR2(20), 
	"CODLINHANESTLE" NUMBER(4,0), 
	"GTINCODAUXILIAR" NUMBER(2,0), 
	"GTINCODAUXILIAR2" NUMBER(2,0), 
	"CODSITTRIBPISCOFINSDEV" NUMBER(3,0), 
	"SITTRIBUTENT" VARCHAR2(3), 
	"SITTRIBUTDEV" VARCHAR2(3), 
	"GERAICMSLIVROFISCALDEVFORNEC" VARCHAR2(1) DEFAULT 'S', 
	"CODFISCALENTTV9" NUMBER(8,0), 
	"LITRAGEM" NUMBER(18,6), 
	"SUGVENDA" NUMBER(2,0) DEFAULT '0', 
	"VLPAUTAPISCOFINS" NUMBER(18,6), 
	"USAPISCOFINSLIT" VARCHAR2(1), 
	"BASEPISCOFINSLIT" NUMBER(18,6), 
	"VLPISLIT" NUMBER(18,6), 
	"VLCOFINSLIT" NUMBER(18,6), 
	"VLPAUTAPISCOFINSIMP" NUMBER(18,6), 
	"USAPISCOFINSLITIMP" VARCHAR2(1), 
	"BASEPISCOFINSLITIMP" NUMBER(18,6), 
	"VLPISLITIMP" NUMBER(18,6), 
	"VLCOFINSLITIMP" NUMBER(18,6), 
	"CODSITTRIBPISCOFINS" NUMBER(3,0), 
	"ROTINALANC" VARCHAR2(48), 
	"VLFRETEPORKG" NUMBER(18,6), 
	"CODTRIBPISCOFINS" NUMBER(4,0), 
	"PERCMVAORIG" NUMBER(12,4), 
	"ASSINATURA" VARCHAR2(255), 
	"APLICREDBASEIVAPLIQ" VARCHAR2(1) DEFAULT 'N', 
	"APLICREDBASEIVAPLIQBCR" VARCHAR2(1) DEFAULT 'N', 
	"DTINICONTLOTE" DATE, 
	"CLASSEFLOW" VARCHAR2(6), 
	"CONCENTRACAO" NUMBER(6,0), 
	"VLIPI" NUMBER(18,6), 
	"SITTRIBUTDEVFORNEC" VARCHAR2(3), 
	"CODFISCALDEVFORNEC" NUMBER(8,0), 
	"PRAZOMAXVENDA" NUMBER(5,0), 
	"CATERGORIA" VARCHAR2(2), 
	"CODLINHA" NUMBER(8,0), 
	"PERCQUEBRAPRODUCAO" NUMBER(18,6), 
	"PERMITEPRODUCAO" VARCHAR2(1), 
	"LINHAPROD" NUMBER(6,0), 
	"QTPRODUZIR" NUMBER(18,6), 
	"APLICPERCIVAPAUTA" VARCHAR2(1) DEFAULT 'N', 
	"INVENTARIOPARCIAL" VARCHAR2(1) DEFAULT 'N', 
	"CODTABLIT" VARCHAR2(2), 
	"CODGRULIT" VARCHAR2(2), 
	"IPIPORVALOR" VARCHAR2(1), 
	"PERCCARGATRIBMEDIA" NUMBER(18,6), 
	"CODLINHAPRAZO" NUMBER(6,0), 
	"VLPAUTAICMSANTEC" NUMBER(18,6), 
	"ATUPESOMASTERENT" VARCHAR2(1) DEFAULT 'S', 
	"NUMCASASDECREDUCAOICMS" NUMBER(2,0) DEFAULT '2', 
	"CODDEPTOWEB" NUMBER(10,0), 
	"CODSECAOWEB" NUMBER(10,0), 
	"CODCATEGORIAWEB" NUMBER(10,0), 
	"CODSUBCATEGORIAWEB" NUMBER(10,0), 
	"CUSTOREPTABANT" NUMBER(18,6), 
	"CUSTOREPZFMANT" NUMBER(18,6), 
	"PRECOMAXCONSUMTABANT" NUMBER(18,6), 
	"PRECOMAXCONSUMZFMANT" NUMBER(18,6), 
	"OSCOMODATO" VARCHAR2(1) DEFAULT 'N', 
	"OBRIGAPREENCCONTRATO" VARCHAR2(1) DEFAULT 'N', 
	"GERAOSAUTOMATIC" VARCHAR2(1) DEFAULT 'N', 
	"NUMSERVICO" NUMBER(6,0), 
	"RESTRINGECOTACAO" VARCHAR2(1) DEFAULT 'N', 
	"TIPOMEDICAMENTO" VARCHAR2(1) DEFAULT 'N', 
	"GRUPOFATURAMENTO" VARCHAR2(1) DEFAULT 'N', 
	"USAPMCBASEST" VARCHAR2(1), 
	"PERCREDPMC" NUMBER(12,4), 
	"VLIPISUSPENSO" NUMBER(18,6), 
	"PERCIPISUSPENSO" NUMBER(12,4), 
	"MYFROTA" VARCHAR2(1) DEFAULT 'N', 
	"CODSITTRIBST" VARCHAR2(2), 
	"PERCICMSBASEICMSANTECIPADO" NUMBER(12,4), 
	"PERCDESC1TAB" NUMBER(12,4), 
	"PERCDESC2TAB" NUMBER(12,4), 
	"PERCDESC3TAB" NUMBER(12,4), 
	"PERCDESC4TAB" NUMBER(12,4), 
	"PERCDESC5TAB" NUMBER(12,4), 
	"PERCDESC6TAB" NUMBER(12,4), 
	"PERCDESC7TAB" NUMBER(12,4), 
	"PERCDESC8TAB" NUMBER(12,4), 
	"PERCDESC9TAB" NUMBER(12,4), 
	"PERCDESC10TAB" NUMBER(12,4), 
	"DTVIGENCIAPOLITICA" DATE, 
	"GERABASEPISCOFINSSEMALIQ" VARCHAR2(1), 
	"USALICENCAIMPORTACAO" VARCHAR2(1), 
	"MULTIPLOCOMPRAS" NUMBER(18,6), 
	"CALCCREDIPICONT" VARCHAR2(1), 
	"APROVEITACREDICMSCONT" VARCHAR2(1), 
	"APROVEITACREDPISCOFINSCONT" VARCHAR2(1), 
	"ENVIASNGPC" VARCHAR2(1) DEFAULT 'N', 
	"REGISTROMSMED" VARCHAR2(13), 
	"QTMINSUGCOMPRA" NUMBER(22,8), 
	"ENVIAINFTECNICANFE" VARCHAR2(1) DEFAULT 'N', 
	"CONTROLADOIBAMA" VARCHAR2(1) DEFAULT 'N', 
	"CESTABASICALEGIS" VARCHAR2(1) DEFAULT 'N', 
	"CODINTERNO" VARCHAR2(20), 
	"APLICACOES" VARCHAR2(500), 
	"CODUSUULTALTCOM" NUMBER(8,0), 
	"UTILIZASELO" VARCHAR2(1) DEFAULT 'N', 
	"SITTRIBUT_SERVICO" VARCHAR2(3), 
	"PERCOFINS_SERVICO" NUMBER(12,4), 
	"PERPIS_SERVICO" NUMBER(12,4), 
	"FATORCONVTRIB" NUMBER(12,6), 
	"UNIDADETRIB" VARCHAR2(6), 
	"STATUSSUCATA" NUMBER(1,0), 
	"RETINOICO" VARCHAR2(1), 
	"IDINTEGRACAOMYFROTA" RAW(16) DEFAULT SYS_GUID(), 
	"DTULTATUPCOMPRA" DATE, 
	"ANP" NUMBER(9,0), 
	"CONSIISUSPENSOBASEICMS" VARCHAR2(1), 
	"CONSIPISUSPENSOBASEICMS" VARCHAR2(1), 
	"CODUSUULTALTCOMTAB" NUMBER(8,0), 
	"CODROTINAULTALTCOM" NUMBER(8,0), 
	"CODROTINAULTALTCOMTAB" NUMBER(8,0), 
	"COMISSAOSERVICOPRESTADO" NUMBER(12,2), 
	"CODFISCALCOCOMPRA" NUMBER(8,0), 
	"CODFISCALCOREMESSA" NUMBER(8,0), 
	"CODPRODFORNEC" NUMBER(6,0), 
	"PRECIFICACAOAUTOMATICA" VARCHAR2(2), 
	"CODTIPOUSOMED" NUMBER(1,0), 
	"CODTIPORECEIT" NUMBER(1,0), 
	"CUSTOFORNECSEMST" NUMBER(18,6), 
	"CUSTOPROXIMACOMPRASEMST" NUMBER(18,6), 
	"TIPOCUSTOTRANSF" VARCHAR2(1), 
	"CODCLASSETERAPEUTSNGPC" NUMBER(2,0), 
	"USOPROLONGADOSNGPC" VARCHAR2(1), 
	"CODSUBMARCA" NUMBER(6,0), 
	"ALTURA" NUMBER(10,4), 
	"ALTURATOTAL" NUMBER(10,4), 
	"IECTEREF" NUMBER(10,4), 
	"DIAMETROINTERNO" NUMBER(10,4), 
	"DIAMETROEXTERNO" NUMBER(10,4), 
	"DIASCONSECENT" NUMBER(2,0), 
	"NUMEROSSERIECONTROLADOS" NUMBER(10,0) DEFAULT 0, 
	"VALORTARAPORPECA" NUMBER(18,6), 
	"TARAPORPECA" NUMBER(18,6), 
	"FARMACIAPOPULAR" VARCHAR2(1), 
	"PERCPRODEIC" NUMBER(18,2), 
	"CODPRODANTUTICAD" VARCHAR2(20), 
	"DTINICODPRODANTUTICAD" DATE, 
	"DTPRIMOVNOVCODPROD" DATE, 
	"NUMREGAGRMAP" VARCHAR2(10), 
	"IDEMBALAGEM" NUMBER(10,0), 
	"TAMANHOPECA" NUMBER(10,4), 
	"PESOMINIMO" NUMBER(12,6), 
	"PESOMAXIMO" NUMBER(12,6), 
	"DTFINUTICODPRODANTUTICAD" DATE, 
	"DSCPRODANTUTICAD" VARCHAR2(60), 
	"INDUZLOTE" VARCHAR2(1), 
	"CODFISCALDEVOPLOG" NUMBER(8,0), 
	"CODFISCALENTOPLOG" NUMBER(8,0), 
	"IDDESTAQUE" VARCHAR2(8), 
	"TIPOEMBARQUEIMP" VARCHAR2(50), 
	"PERCBONIFIC" NUMBER(18,6), 
	"VERBADINPORPERC" VARCHAR2(1), 
	"PERCBONTAB" NUMBER(14,4), 
	"VLBONIFICTAB" NUMBER(18,6), 
	"PERCBONIFICTAB" NUMBER(18,6), 
	"PERCBONOUTRASTAB" NUMBER(18,6), 
	"VLADICIONALBCICMSANTECIP" NUMBER(18,6), 
	"APLICPERCIVAPAUTAICMSANTECIP" VARCHAR2(1), 
	"PERCICMSFRETEFOBICMSANTECIP" NUMBER(12,4), 
	"PERCMVAORIGICMSANTECIP" NUMBER(12,4), 
	"PERCCARGATRIBMEDIAICMSANTECIP" NUMBER(18,6), 
	"REDBASEIVAICMSANTECIP" NUMBER(18,6), 
	"REDBASEALIQEXTICMSANTECIP" NUMBER(18,6), 
	"CODPROD_SIAC" NUMBER(6,0), 
	"CODPROD_TEMP" NUMBER(6,0), 
	"CONSIDERARICMSANTECIPCUSTOCONT" VARCHAR2(1), 
	"CODSALMED" NUMBER(6,0), 
	"FORMAESTERILIZACAO" VARCHAR2(500), 
	"APLICAPERCREDALIQIPI" VARCHAR2(1), 
	"GTINCODAUXILIARTRIB" NUMBER(2,0), 
	"CODAUXILIARTRIB" NUMBER(20,0), 
	"VERIFCRAMOATIVCALCST" VARCHAR2(1) DEFAULT 'N', 
	"COMODATO" VARCHAR2(1) DEFAULT 'N', 
	"LINKFABRICANTE" VARCHAR2(100), 
	"PRODUSAENGRADADO" VARCHAR2(1), 
	"CODPRODENGRADADO" NUMBER(6,0), 
	"FATCONVPRODENGRAD" NUMBER(18,6), 
	"CODCEST" VARCHAR2(7), 
	"CODCESTDEV" VARCHAR2(7), 
	"PERCENTUALCPRB" NUMBER(26,6), 
	"CODIGOCNAE" NUMBER(20,0), 
	"TEMPOSERVICO" NUMBER(20,0), 
	"PERCENTUALINCIDENCIA" NUMBER(26,6), 
	"TIPOSERVICOVINCULADORECEITA" VARCHAR2(9), 
	"INCIDENCIACPRB" VARCHAR2(8), 
	"CFOPORIG" NUMBER(8,0), 
	"MODBCST" NUMBER(1,0), 
	"MODBCSTGUIA" NUMBER(1,0), 
	"PERMITIRBROKERTV5" VARCHAR2(1) DEFAULT 'S', 
	"VLFRETE" NUMBER(18,6), 
	"ANTIDUMPING" VARCHAR2(1), 
	"PERCIISUSPENSO" NUMBER(8,4), 
	"PERPISCALCDI" NUMBER(8,4), 
	"PERCOFINSCALCDI" NUMBER(8,4), 
	"ESTOQUEPORDTVALIDADE" VARCHAR2(1) DEFAULT 'S', 
	"PESOLIQDI" NUMBER(12,6), 
	"IDINTEGRACAOCIASHOP" VARCHAR2(250), 
	"COMISSAOSERVICOFUNCIONARIO" NUMBER(12,2), 
	"REGISTROPECA" VARCHAR2(15), 
	"GERAICMSLIVROFISCALENT" VARCHAR2(1), 
	"UTILIZACREDREDPISCOFINS" VARCHAR2(1), 
	"ENVIAECOMMERCE" VARCHAR2(1) DEFAULT 'N', 
	"PERCFUNCEP" NUMBER(18,6), 
	"PERCFECP" NUMBER(18,6), 
	"ENDERECAMENTOCUBAGEM" VARCHAR2(1) DEFAULT 'N', 
	"DTULTALTCAD" DATE, 
	"CODFUNCULTALTCAD" NUMBER(8,0), 
	"PERCCSLL" NUMBER(18,6), 
	"VLIPIPAUTATV10" NUMBER(18,6), 
	"VLIPIPAUTATV10TAB" NUMBER(18,6), 
	"LICITUSARCAP" VARCHAR2(1), 
	"LICITPERCDESONERACAP" NUMBER(18,6), 
	"LICITCONVENIOISENCAOICMS" VARCHAR2(40), 
	"USAECOMMERCEUNILEVER" VARCHAR2(1) DEFAULT 'N', 
	"LICITUSARDESONERAICM" VARCHAR2(1) DEFAULT 'N', 
	"LICITPERCDESONERAICM" NUMBER(18,6), 
	"PERCENTUALISS" NUMBER(26,6), 
	"EMBVENDAECOMMERCEUNILEVER" VARCHAR2(1) DEFAULT 'U', 
	"UTILIZAPRECOFABRICA" VARCHAR2(1) DEFAULT 'N', 
	"UNIDADETRIBEX" VARCHAR2(6), 
	"FATORCONVTRIBEX" NUMBER(12,6), 
	"DESCANP" VARCHAR2(95), 
	"CODAGREGACAO" VARCHAR2(20), 
	"USACODAGREGACAO" VARCHAR2(1) DEFAULT 'S', 
	"PESOBRUTOFRETE" NUMBER(18,6), 
	"CODFISCALREMENTFUT" NUMBER(10,0), 
	"CODFISCALENTENTFUT" NUMBER(10,0), 
	"SITTRIBUTENTFUT" VARCHAR2(3), 
	"PERCIVA2" NUMBER(12,4), 
	"CODFISCALBENEFICSAIDA" NUMBER(10,0), 
	"CODFISCALBENEFICRETORNO" NUMBER(10,0), 
	"CODFISCALBENEFICENTRADA" NUMBER(10,0), 
	"SITTRIBUTBENEFICSAIDA" VARCHAR2(3), 
	"SITTRIBUTBENEFICRETORNO" VARCHAR2(3), 
	"SITTRIBUTBENEFICENTRADA" VARCHAR2(3), 
	"ACEITATROCAINSERVIVEL" VARCHAR2(1) DEFAULT 'N', 
	"CODINSERVIVEL" NUMBER(6,0), 
	"CARCACABATERIA" VARCHAR2(1) DEFAULT 'N', 
	"PERCICMSDESONERACAO" NUMBER(12,4), 
	"ISENTOTCIF" VARCHAR2(1) DEFAULT 'N', 
	"BLOQUEIOACORDOPARCERIA" VARCHAR2(1) DEFAULT 'N', 
	"PERACRESCIMOIPI" NUMBER(18,6), 
	"ISENTOSTCOZINHAINDUSTRIAL" VARCHAR2(1) DEFAULT 'N', 
	"CODPRINCIPATIVO2" NUMBER(10,0), 
	"UTILIZAMULTIPLICADOR" VARCHAR2(1), 
	"PGLP" NUMBER(7,4), 
	"PGNN" NUMBER(7,4), 
	"PGNI" NUMBER(7,4), 
	"VPART" NUMBER(23,10), 
	"FATORCONVERSAOBIONEXO" NUMBER(6,2), 
	"PGLI" NUMBER(7,4), 
	"PGLN" NUMBER(7,4), 
	"USAMAIORVALORPARACALCULOICMS" VARCHAR2(1), 
	"USABASESTNOFCP" VARCHAR2(1), 
	"UNIDADEPADRAO" VARCHAR2(2), 
	"DESCRICAODINAMICA" VARCHAR2(1000), 
	"GRAMATURALICIT" NUMBER(30,16), 
	"IDSOFITVIEW" VARCHAR2(10), 
	"DTULTALTERSOFITVIEW" DATE, 
	"DTEXCLUSAOSOFITVIEW" DATE, 
	"CODMOTISENCAOANVISA" VARCHAR2(255), 
	"USAICMSDESONERACAO" VARCHAR2(1), 
	"TIPOINTEGRACAOB2B" NUMBER(4,0), 
	"CODSAZONALIDADEMED" NUMBER(4,0), 
	"CODADWORDS" VARCHAR2(200), 
	"EXIBESEMESTOQUEECOMMERCE" VARCHAR2(1), 
	"LINKID" VARCHAR2(255), 
	"CODCAMPLOMADEE" VARCHAR2(200), 
	"UTILIZAINTEGRACAOKIBON" VARCHAR2(1) DEFAULT 'N', 
	"PREDOMINANCIA" VARCHAR2(2), 
	"NUMERO" NUMBER(9,2), 
	"NUMEROCX" NUMBER(9,2), 
	"USABASEREDICMSPRESUMIDO" VARCHAR2(1), 
	"CLASSEVENDAQT" VARCHAR2(1), 
	"ALIQUOTATCIF" NUMBER(18,6), 
	"PMPFMEDICAMENTO" NUMBER(18,6), 
	"PRECOFABRICA" NUMBER(18,6), 
	"USAPMPFBASEST" VARCHAR2(1), 
	"USAPFABBASEST" VARCHAR2(1), 
	"PERCREDPMPF" NUMBER(12,4), 
	"PERCREDPFAB" NUMBER(12,4), 
	"OBSCONTXCAMPO" VARCHAR2(20), 
	"OBSCONTXTEXTO" VARCHAR2(60), 
	"OBSFISCOXCAMPO" VARCHAR2(20), 
	"OBSFISCOXTEXTO" VARCHAR2(60), 
	"CONVENIOISENCAOICMSMED" VARCHAR2(1), 
	 CONSTRAINT "PCPRODUT_PK" PRIMARY KEY ("CODPROD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS"  ENABLE, 
	 CONSTRAINT "PCPRODUT_PCEXPISCOFINS_FK" FOREIGN KEY ("CODEXCECAOPISCOFINS")
	  REFERENCES "AJEL"."PCEXPISCOFINS" ("CODEXCECAO") ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" 
 LOB ("DADOSTECNICOS") STORE AS BASICFILE (
  TABLESPACE "TS_DADOS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

CREATE OR REPLACE TRIGGER "AJEL"."TRG_PCOMER_PCPRODUT" 
   AFTER UPDATE OF PERCDESC1
                 , PERCDESC2
                 , PERCDESC3
                 , PERCDESC4
                 , PERCDESC5
                 , PERCDESC6
                 , PERCDESC7
                 , PERCDESC8
                 , PERCDESC9
                 , PERCDESC10
                 , PERCDESC
                 , CUSTOREP
                 , PERCACRES
                 , PTABELAFORNEC
                 , PERCREDPMC
                 , CUSTOFORNEC
                 , CUSTOPROXIMACOMPRA
   ON PCPRODUT
   REFERENCING NEW AS NEW OLD AS OLD
   FOR EACH ROW
    WHEN (   (NVL(OLD.PERCDESC1,0) <> NVL(NEW.PERCDESC1,0))
        OR (NVL(OLD.PERCDESC2,0) <> NVL(NEW.PERCDESC2,0))
        OR (NVL(OLD.PERCDESC3,0) <> NVL(NEW.PERCDESC3,0))
        OR (NVL(OLD.PERCDESC4,0) <> NVL(NEW.PERCDESC4,0))
        OR (NVL(OLD.PERCDESC5,0) <> NVL(NEW.PERCDESC5,0))
        OR (NVL(OLD.PERCDESC6,0) <> NVL(NEW.PERCDESC6,0))
        OR (NVL(OLD.PERCDESC7,0) <> NVL(NEW.PERCDESC7,0))
        OR (NVL(OLD.PERCDESC8,0) <> NVL(NEW.PERCDESC8,0))
        OR (NVL(OLD.PERCDESC9,0) <> NVL(NEW.PERCDESC9,0))
        OR (NVL(OLD.PERCDESC10,0) <> NVL(NEW.PERCDESC10,0))
        OR (NVL(OLD.PERCDESC,0) <> NVL(NEW.PERCDESC,0))
        OR (NVL(OLD.CUSTOREP,0) <> NVL(NEW.CUSTOREP,0))
        OR (NVL(OLD.PERCACRES,0) <> NVL(NEW.PERCACRES,0))
        OR (NVL(OLD.PTABELAFORNEC,0) <> NVL(NEW.PTABELAFORNEC,0))
        OR (NVL(OLD.PERCREDPMC,0) <> NVL(NEW.PERCREDPMC,0))
        OR (NVL(OLD.CUSTOFORNEC,0) <> NVL(NEW.CUSTOFORNEC,0))
        OR (NVL(OLD.CUSTOPROXIMACOMPRA,0) <> NVL(NEW.CUSTOPROXIMACOMPRA,0))) BEGIN
   IF UPDATING THEN
      INSERT INTO PCPOLITICACOMERCIAL
                  (CODPROD
                 , CODFILIAL
                 , ROTINA
                 , DATAALTER
                 , MATRICULA
                 , TABELA
                 , PERCDESC1
                 , PERCDESC2
                 , PERCDESC3
                 , PERCDESC4
                 , PERCDESC5
                 , PERCDESC6
                 , PERCDESC7
                 , PERCDESC8
                 , PERCDESC9
                 , PERCDESC10
                 , PERCDESC
                 , CUSTOREP
                 , PERCACRES
                 , PTABELAFORNEC
                 , PERCREDPMC
                 , CUSTOFORNEC
                 , CUSTOPROXIMACOMPRA)
           VALUES (:NEW.CODPROD
                 , NVL(:NEW.CODFILIAL, '99')
                 , NVL(:NEW.CODROTINAULTALTER, 0)
                 , SYSDATE
                 , NVL(:NEW.CODUSUULTALTCOM, 0)
                 , 'PCPRODUT'
                 , :OLD.PERCDESC1
                 , :OLD.PERCDESC2
                 , :OLD.PERCDESC3
                 , :OLD.PERCDESC4
                 , :OLD.PERCDESC5
                 , :OLD.PERCDESC6
                 , :OLD.PERCDESC7
                 , :OLD.PERCDESC8
                 , :OLD.PERCDESC9
                 , :OLD.PERCDESC10
                 , :OLD.PERCDESC
                 , :OLD.CUSTOREP
                 , :OLD.PERCACRES
                 , :OLD.PTABELAFORNEC
                 , :OLD.PERCREDPMC
                 , :OLD.CUSTOFORNEC
                 , :OLD.CUSTOPROXIMACOMPRA);
   END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_PCOMER_PCPRODUT" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_ALT_PCPRODUT" 
  BEFORE INSERT OR UPDATE ON PCPRODUT
  REFERENCING OLD AS OLD NEW AS NEW
  FOR EACH ROW
DECLARE
  -- LOCAL VARIABLES HERE
BEGIN
  :NEW.DTULTALTER := SYSDATE;
END TRG_ALT_PCPRODUT;
/
ALTER TRIGGER "AJEL"."TRG_ALT_PCPRODUT" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_PCPRODUT_AUDIT" 
  BEFORE DELETE ON PCPRODUT
  REFERENCING NEW AS NEW OLD AS OLD
  FOR EACH ROW
DECLARE
  VSMAQUINA  VARCHAR2(80);
  VSUSUARIO  VARCHAR2(80);
  VSPROGRAMA VARCHAR2(80);
  VSTIPO     VARCHAR2(3);
BEGIN
  IF DELETING THEN

    VSMAQUINA  := SUBSTR(SYS_CONTEXT('USERENV', 'TERMINAL'), 1, 80);
    VSUSUARIO  := SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 80);
    VSPROGRAMA := SUBSTR(SYS_CONTEXT('USERENV', 'MODULE'), 1, 80);

    IF VSPROGRAMA IS NULL THEN
      VSPROGRAMA := 'Client do Oracle desatualizado.';
    END IF;

    RAISE_APPLICATION_ERROR(-20000
                           ,'Não e permitido excluir o produto ' ||
                            :OLD.CODPROD || ' feita pelo usuario ' ||
                            VSUSUARIO || ' na estação ' || VSMAQUINA ||
                            ' atraves do programa ' || VSPROGRAMA ||
                            '. Reportar esta' ||
                            ' mensagem ao suporte da PC SISTEMAS');
  END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_PCPRODUT_AUDIT" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TINS_PCPRODUT_ATUCX_BEF" 
 BEFORE
  INSERT OR UPDATE
 ON pcprodut
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
DECLARE
  v_IdFilaAtualizacao   PCFILAATUALIZACX.ID%TYPE := NULL;
  v_IndrAtualizado      PCFILAATUALIZACX.INDRATUALIZADO%TYPE := NULL;
BEGIN
   -- Verificar se o NUMSEQATU é NULL. Em caso de INSERT será sempre NULL, mas em caso de UPDATE
   -- o campo pode estar ou não com valor NULL. Os registros que não sofreram alteração estarão com valor NULL.
   -- Se for, será gerado o número sequencial que será gravado na tabela de fila de atualização
   -- do caixa para posterior atualização. O número sequencial é uma forma de localizar facilmente o
   -- registro gravado.
   IF :NEW.NUMSEQATU IS NULL THEN
      SELECT DFSEQ_PCPRODUT_ATUCX.NEXTVAL
        INTO :NEW.NUMSEQATU
        FROM DUAL;
   END IF;
   -- Verificar a quantidade de caixas existentes para poder comparar com a quantidade de registros na fila.
   FOR C_Caixa IN (SELECT *
                     FROM PCCAIXA
                    WHERE EXISTS (SELECT 1
                                    FROM ALL_DB_LINKS
                                   WHERE OWNER = USER
                                     AND DB_LINK = 'DBLCAIXA'||PCCAIXA.NUMCAIXA))LOOP
      BEGIN
         -- Verificar se o registro inserido já está na tabela de fila de atualização.
         SELECT ID ,INDRATUALIZADO
           INTO v_IdFilaAtualizacao, v_IndrAtualizado
           FROM PCFILAATUALIZACX
          WHERE NOMETABELA = 'PCPRODUT'
            AND VALORSEQ = :NEW.NUMSEQATU
            AND NUMCAIXA = C_Caixa.NUMCAIXA
            AND ROWNUM   = 1;
      EXCEPTION
         -- Caso não exista o registro, será criado.
         WHEN NO_DATA_FOUND THEN
            INSERT INTO PCFILAATUALIZACX(NOMETABELA
                                        ,VALORSEQ
                                        ,NUMCAIXA)
                                 VALUES('PCPRODUT'
                                       ,:NEW.NUMSEQATU
                                       ,C_Caixa.NUMCAIXA);
      END ;
      -- Verificar se o registro encontrado já foi atualizado.
      -- Se o registro já houver sido atualizado, é alterado o status para forçar nova atualização.
      IF v_IdFilaAtualizacao IS NOT NULL AND v_IndrAtualizado = 'S' THEN
         -- Gerar registro na fila para todos os caixas.
         UPDATE PCFILAATUALIZACX SET INDRATUALIZADO = 'N'
                               WHERE ID = v_IdFilaAtualizacao;
      END IF;
   END LOOP;
END TINS_PCPRODUT_ATUCX_BEF; 
/
ALTER TRIGGER "AJEL"."TINS_PCPRODUT_ATUCX_BEF" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_ALTER_DTULTALTCOM" 
 BEFORE
  INSERT OR UPDATE
 ON PCPRODUT
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
DECLARE
  VSPROGRAMA VARCHAR2(15);
BEGIN
  VSPROGRAMA := REGEXP_REPLACE(F_OBTERNOMEAPLICACAO, '[^0-9]');
  IF INSERTING OR UPDATING THEN
    IF ((VSPROGRAMA = '203') OR (VSPROGRAMA = '238')) THEN
      :NEW.DTULTALTCOM := SYSDATE;
    END IF;
  END IF;
END TRG_ALTER_DTULTALTCOM;
/
ALTER TRIGGER "AJEL"."TRG_ALTER_DTULTALTCOM" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_SRVPRC_PCPRODUT" 
 BEFORE 
 INSERT OR UPDATE
 ON PCPRODUT
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW 
BEGIN
   :NEW.dtultaltersrvprc := SYSDATE;
END;
/
ALTER TRIGGER "AJEL"."TRG_SRVPRC_PCPRODUT" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_PCPRODUT_LOGFISCAL" 
       BEFORE UPDATE
           OF DESCRICAO
           ON PCPRODUT
       REFERENCING OLD AS OLD NEW AS NEW
       FOR EACH ROW
      DECLARE
        VQT NUMBER; 
        PROCEDURE GERAR_LOG(PCAMPO         IN VARCHAR2,
                            PTABELA        IN VARCHAR2,
                            PVALORALFA     IN VARCHAR2,
                            PVALORALFAANT  IN VARCHAR2,
                            PREGISTRO      IN VARCHAR2,
                            PCODPROD       IN NUMBER
                            ) IS
        BEGIN
        INSERT INTO PCLOGFISCAL
          (DATA,
           REGISTRO,
           CODIGO,
           VALORALFA,
           VALORALFAANT,
           TABELA,
           COLUNA)
         VALUES
          (SYSDATE,
           PREGISTRO,
           PCODPROD,
           PVALORALFA,
           PVALORALFAANT,
           PTABELA,
           PCAMPO);
       
           SELECT NVL(COUNT(CODPROD),0) 
             INTO VQT 
             FROM PCLOGULTALTPRODUT 
            WHERE CODPROD = :NEW.CODPROD; 
             IF VQT > 0  THEN 
               UPDATE PCLOGULTALTPRODUT 
                  SET DATPRIMOV = NULL 
                WHERE CODPROD = PCODPROD; 
             ELSE 
               INSERT INTO PCLOGULTALTPRODUT (SELECT CODIGO,PCODPROD,TRUNC(SYSDATE),NULL FROM PCFILIAL GROUP BY CODIGO); 
             END IF; 
        END;
BEGIN      
  IF (:OLD.DESCRICAO <> :NEW.DESCRICAO) THEN
    GERAR_LOG('DESCRICAO','PCPRODUT',:NEW.DESCRICAO,:OLD.DESCRICAO,'REG0205',:OLD.CODPROD);
  END IF;
      
  EXCEPTION WHEN OTHERS THEN
    GERAR_LOG('NENHUM', '', 'ERRO AO GERAR LOG', 'ERRO AO GERAR LOG', '', '0' || SQLERRM);
END;
/
ALTER TRIGGER "AJEL"."TRG_PCPRODUT_LOGFISCAL" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_MD5PAF_PCPRODUT" 
  BEFORE UPDATE OR INSERT OR DELETE ON PCPRODUT
  REFERENCING OLD AS OLD NEW AS NEW
  FOR EACH ROW
BEGIN
  if (F_LIMPA_MD5PAF = 'S') then
    if ( INSERTING or DELETING or UPDATING ) then
	    UPDATE PCESTPAF set MD5PAF = NULL WHERE CODPROD = :NEW.CODPROD;
      UPDATE PCEMBALAGEM set MD5PAF = NULL WHERE CODPROD = :NEW.CODPROD;
	  end if;
  end if;

END TRG_MD5PAF_PCPRODUT;
/
ALTER TRIGGER "AJEL"."TRG_MD5PAF_PCPRODUT" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_PESQUISA_DINAMICA" 
BEFORE
INSERT OR UPDATE OF DTCADASTRO, DTULTALTCOM ON PCPRODUT
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW

DECLARE
  V_TABELACAMPOPESQUISA PCDESCRICAODINAMICA.TABELACAMPOPESQUISA%TYPE;
  V_CAMPODELIGACAOPCPRODUT PCDESCRICAODINAMICA.CAMPODELIGACAOPCPRODUT%TYPE;
  V_CAMPODELIGACAODESTATABELA PCDESCRICAODINAMICA.CAMPODELIGACAODESTATABELA%TYPE;
  V_SQLCAMPOSDELIGACAOPCPRODUT VARCHAR2(2000);
  V_SQLDESCRICAODINAMICA VARCHAR2(2000);
  V_CONTEUDOCAMPO VARCHAR2(2000);
  V_CAMPOPESQUISA VARCHAR2(50);
  V_TABELAPESQUISA VARCHAR2(50);
  V_CAMPOLIGACAOTABELA VARCHAR2(50);
  V_CAMPOLIGACAOPRODUT VARCHAR2(50);
  V_SQL VARCHAR2(2000);
  V_SQLPRODUTOS VARCHAR2(2000);
  V_CURSOR SYS_REFCURSOR;
  V_CURSORPRODUTOS SYS_REFCURSOR;
  V_PROGRAM VARCHAR2(50);

BEGIN

    V_PROGRAM := F_OBTERNOMEAPLICACAO;

    IF (UPPER(TRIM(V_PROGRAM)) = 'PCSIS203.EXE') OR
       ((TRUNC(:NEW.DTULTALTCOM) = TRUNC(SYSDATE)) OR (TRUNC(:NEW.DTCADASTRO) = TRUNC(SYSDATE))) THEN
    BEGIN
       --V_SQLCAMPOSDELIGACAOPCPRODUT := '';

       --FOR CAMPOSLIGACAO IN (SELECT TABELACAMPOPESQUISA,
       --                             CAMPODELIGACAOPCPRODUT,
       --                             CAMPODELIGACAODESTATABELA
       --                      FROM PCDESCRICAODINAMICA)

       --LOOP
       --  V_SQLCAMPOSDELIGACAOPCPRODUT := V_SQLCAMPOSDELIGACAOPCPRODUT ||','|| CAMPOSLIGACAO.CAMPODELIGACAOPCPRODUT;
       --END LOOP;

       EXECUTE IMMEDIATE 'INSERT INTO PCDADOSATUAISPROD (CODPROD, CODEPTO, CODSEC, CODFORNEC, CODCATEGORIA, CODSUBCATEGORIA, CODLINHAPROD, CODGRADE, CODCOR, CODMARCA, CODLINHA, CODINTERNO, CODSUBMARCA, CODINSERVIVEL) VALUES (' || :NEW.CODPROD || ',' || NVL(:NEW.CODEPTO,0) || ',' || NVL(:NEW.CODSEC,0) || ',' || NVL(:NEW.CODFORNEC,0) || ',' || NVL(:NEW.CODCATEGORIA,0) || ',' || NVL(:NEW.CODSUBCATEGORIA,0) || ',' || NVL(:NEW.CODLINHAPROD,0) || ',' || NVL(:NEW.CODGRADE,0) || ',' || NVL(:NEW.CODCOR,0) || ',' || NVL(:NEW.CODMARCA,0) || ',' || NVL(:NEW.CODLINHA,0) || ',' || NVL(:NEW.CODINTERNO,0) || ',' || NVL(:NEW.CODSUBMARCA,0) || ',' || NVL(:NEW.CODINSERVIVEL,0) || ')';

       IF (:NEW.DTEXCLUSAO IS NULL) THEN
         V_SQLDESCRICAODINAMICA := '';

         FOR DESCRICAODINAMICA IN (SELECT SUBSTR(TABELACAMPOPESQUISA, INSTR(TABELACAMPOPESQUISA, '.') + 1, LENGTH(TABELACAMPOPESQUISA)) CAMPOPESQUISA,
                                          SUBSTR(TABELACAMPOPESQUISA, 1, INSTR(TABELACAMPOPESQUISA, '.') - 1) TABELAPESQUISA,
                                          CAMPODELIGACAODESTATABELA,
                                          CAMPODELIGACAOPCPRODUT
                                   FROM PCDESCRICAODINAMICA)
         LOOP

           V_CAMPOPESQUISA := DESCRICAODINAMICA.CAMPOPESQUISA;
           V_TABELAPESQUISA := DESCRICAODINAMICA.TABELAPESQUISA;
           V_CAMPOLIGACAOTABELA := DESCRICAODINAMICA.CAMPODELIGACAODESTATABELA;
           V_CAMPOLIGACAOPRODUT := DESCRICAODINAMICA.CAMPODELIGACAOPCPRODUT;

           V_CONTEUDOCAMPO := '';
           V_SQLPRODUTOS := 'SELECT ' || V_CAMPOLIGACAOPRODUT || ' FROM PCDADOSATUAISPROD WHERE CODPROD = ' || :OLD.CODPROD;

           OPEN V_CURSORPRODUTOS FOR V_SQLPRODUTOS;
           LOOP
             FETCH V_CURSORPRODUTOS INTO V_SQLPRODUTOS;
             EXIT WHEN V_CURSORPRODUTOS%NOTFOUND;
             V_CONTEUDOCAMPO := V_SQLPRODUTOS;
           END LOOP;

           V_SQL := 'SELECT ' || V_CAMPOPESQUISA || ' FROM ' || V_TABELAPESQUISA || ' WHERE ' || V_CAMPOLIGACAOTABELA || ' = ' || V_CONTEUDOCAMPO;

           OPEN V_CURSOR FOR V_SQL;
           LOOP
             FETCH V_CURSOR INTO V_SQL;
             EXIT WHEN V_CURSOR%NOTFOUND;
             V_SQLDESCRICAODINAMICA := V_SQLDESCRICAODINAMICA || V_SQL || ' ';
           END LOOP;

           CLOSE V_CURSOR;

         END LOOP;

         :NEW.DESCRICAODINAMICA := V_SQLDESCRICAODINAMICA;
         EXECUTE IMMEDIATE 'DELETE FROM PCDADOSATUAISPROD WHERE CODPROD = ' || :OLD.CODPROD;

       END IF;

    EXCEPTION
      WHEN OTHERS THEN
       NULL;
    END;

    END IF;

  END TRG_PESQUISA_DINAMICA;
/
ALTER TRIGGER "AJEL"."TRG_PESQUISA_DINAMICA" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_PCPRODUT_IMPORTADO" 
AFTER INSERT OR UPDATE ON pcprodut
REFERENCING NEW AS newRow OLD AS oldRow
FOR EACH ROW
BEGIN
    IF :newRow.importado ='S' THEN 
       	update PCPRODFILIAL set ORIGMERCTRIB ='2' WHERE codprod = :newRow.codprod;
ELSE 
    	update PCPRODFILIAL set ORIGMERCTRIB ='0' WHERE codprod = :newRow.codprod;
END IF;
END TRG_PCPRODUT_IMPORTADO;
/
ALTER TRIGGER "AJEL"."TRG_PCPRODUT_IMPORTADO" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_ECOMMERCE_PCPRODUT" AFTER INSERT OR DELETE OR UPDATE 
   OF USAECOMMERCEUNILEVER, QTUNIT, QTUNITCX, MULTIPLO, EMBVENDAECOMMERCEUNILEVER, CODAUXILIAR ON PCPRODUT
   REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE 
   vsENVIARREGISTRO VARCHAR2(1);
   vnUSAALIENACAOPRODUTO NUMBER;
   vnFILIALPOSSUIPRODUTO NUMBER;
   vbOBSERVACAO VARCHAR2(1);
   vPVENDA1 PCTABPR.PVENDA1%TYPE;
   vPVENDA2 PCTABPR.PVENDA2%TYPE;
   vPVENDA3 PCTABPR.PVENDA3%TYPE;
   vPVENDA4 PCTABPR.PVENDA4%TYPE;
   vPVENDA5 PCTABPR.PVENDA5%TYPE;
   vPVENDA6 PCTABPR.PVENDA6%TYPE;
   vPVENDA7 PCTABPR.PVENDA7%TYPE;   
   vCODFILIAL PCFILIAL.CODIGO%TYPE;
   vCODAUXILIAR VARCHAR2(30);
   vROWID VARCHAR2(30);   
BEGIN
   vCODAUXILIAR := '';
   vbOBSERVACAO := 'N';  
   vsENVIARREGISTRO := 'N';

   IF (NVL(:NEW.USAECOMMERCEUNILEVER,'N') <> 'N') THEN
      vsENVIARREGISTRO := 'S';
   ELSIF NVL(:NEW.USAECOMMERCEUNILEVER,'N') <> NVL(:OLD.USAECOMMERCEUNILEVER,'N') THEN
      vsENVIARREGISTRO := 'S';
   ELSIF :NEW.DTEXCLUSAO IS NOT NULL THEN
      vsENVIARREGISTRO := 'S';
   END IF;

   IF TO_CHAR(:NEW.CODAUXILIAR) <> TO_CHAR(:OLD.CODAUXILIAR) THEN
      vsENVIARREGISTRO := 'S';
      vbOBSERVACAO := 'S';
   END IF;
   
   IF :NEW.MULTIPLO <> :OLD.MULTIPLO THEN
      vsENVIARREGISTRO := 'S';
      vbOBSERVACAO := 'S';
   END IF;
   
   IF :NEW.QTUNIT <> :OLD.QTUNIT THEN
      vsENVIARREGISTRO := 'S';
      vbOBSERVACAO := 'S';
   END IF;
   
   IF :NEW.QTUNITCX <> :OLD.QTUNITCX THEN
      vsENVIARREGISTRO := 'S';
      vbOBSERVACAO := 'S';
   END IF;
   
   IF :NEW.EMBVENDAECOMMERCEUNILEVER <> :OLD.EMBVENDAECOMMERCEUNILEVER THEN
      vsENVIARREGISTRO := 'S';
      vbOBSERVACAO := 'S';
   END IF;

   IF vsENVIARREGISTRO = 'S' THEN  
      BEGIN
         SELECT COUNT(1)
         INTO vnUSAALIENACAOPRODUTO
         FROM PCECOMMERCEUNILEVERPRODUTO;
      EXCEPTION WHEN NO_DATA_FOUND THEN
         vnUSAALIENACAOPRODUTO := 0;
      END;

      FOR REGISTRO IN (SELECT NVL(P.VALOR,'N') VALOR,
                              NVL(E.CODFILIAL,'') CODFILIAL
                       FROM PCPARAMFILIAL P,
                            PCECOMMERCEUNILEVER E
                       WHERE P.NOME = 'FIL_UTILIZAVENDAPOREMBALAGEM'
                         AND P.CODFILIAL = E.CODFILIAL)
      LOOP
         BEGIN
            SELECT COUNT(1)
            INTO vnFILIALPOSSUIPRODUTO
            FROM PCECOMMERCEUNILEVERPRODUTO
            WHERE PCECOMMERCEUNILEVERPRODUTO.CODPROD = :NEW.CODPROD
              AND PCECOMMERCEUNILEVERPRODUTO.CODFILIAL = REGISTRO.CODFILIAL;
         EXCEPTION WHEN NO_DATA_FOUND THEN
            vnFILIALPOSSUIPRODUTO := 0;
         END;

         IF ((vnUSAALIENACAOPRODUTO = 0) OR (vnFILIALPOSSUIPRODUTO > 0)) THEN
            BEGIN
               SELECT NVL(T.PVENDA1,0) PVENDA1,
                      NVL(T.PVENDA2,0) PVENDA2,
                      NVL(T.PVENDA3,0) PVENDA3,
                      NVL(T.PVENDA4,0) PVENDA4,
                      NVL(T.PVENDA5,0) PVENDA5,
                      NVL(T.PVENDA6,0) PVENDA6,
                      NVL(T.PVENDA7,0) PVENDA7
               INTO vPVENDA1,
                    vPVENDA2,
                    vPVENDA3,
                    vPVENDA4,
                    vPVENDA5,
                    vPVENDA6,
                    vPVENDA7
               FROM PCTABPR T
               WHERE T.CODPROD = :NEW.CODPROD
                 AND T.NUMREGIAO = (SELECT MAX(U.NUMREGIAO)
                                    FROM PCECOMMERCEUNILEVER U
                                    WHERE U.CODFILIAL = REGISTRO.CODFILIAL);
            EXCEPTION WHEN OTHERS THEN
               vPVENDA1 := 0;
               vPVENDA2 := 0;
               vPVENDA3 := 0;
               vPVENDA4 := 0;
               vPVENDA5 := 0;
               vPVENDA6 := 0;
               vPVENDA7 := 0;
            END;

            IF REGISTRO.VALOR = 'N' THEN
               BEGIN --Inserindo registros a ser enviado para todas as configurações validas
                  --Enviar estoque
                  INSERT INTO PCECOMMERCEUNILEVERFILA (CODFILIAL, TABELA, ID, DTINCLUSAO, OBSERVACAO)
                  SELECT PCECOMMERCEUNILEVER.CODFILIAL
                       , 'SELECTESTOQUE'
                       , :NEW.ROWID
                       , SYSDATE
                       , FNC_ECOMMERCEUNILEVER_CODAUX(:OLD.CODPROD,:OLD.QTUNIT,:OLD.QTUNITCX,:OLD.EMBVENDAECOMMERCEUNILEVER,TO_CHAR(:OLD.CODAUXILIAR),:OLD.MULTIPLO,PCECOMMERCEUNILEVER.CODFILIAL,:OLD.CODFORNEC,vbOBSERVACAO, 0)
                  FROM PCECOMMERCEUNILEVER
                  WHERE PCECOMMERCEUNILEVER.CODFILIAL = REGISTRO.CODFILIAL
                    AND ((vnUSAALIENACAOPRODUTO = 0)
                     OR  ((vnUSAALIENACAOPRODUTO > 0) AND EXISTS (SELECT 1
                                                                  FROM PCECOMMERCEUNILEVERPRODUTO
                                                                  WHERE PCECOMMERCEUNILEVERPRODUTO.CODPROD = :NEW.CODPROD
                                                                    AND PCECOMMERCEUNILEVERPRODUTO.CODFILIAL = PCECOMMERCEUNILEVER.CODFILIAL)));
               EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                  NULL;
               END;

               BEGIN
                  SELECT NVL(PCECOMMERCEUNILEVER.CODFILIAL,'')
                       , :NEW.ROWID
                       , NVL(FNC_ECOMMERCEUNILEVER_CODAUX(:OLD.CODPROD,:OLD.QTUNIT,:OLD.QTUNITCX,:OLD.EMBVENDAECOMMERCEUNILEVER,TO_CHAR(:OLD.CODAUXILIAR),:OLD.MULTIPLO,PCECOMMERCEUNILEVER.CODFILIAL,:OLD.CODFORNEC,vbOBSERVACAO, 0), '')
                  INTO vCODFILIAL,
                       vROWID,
                       vCODAUXILIAR
                  FROM PCECOMMERCEUNILEVER
                  WHERE PCECOMMERCEUNILEVER.CODFILIAL = REGISTRO.CODFILIAL 
                    AND ((vnUSAALIENACAOPRODUTO = 0)
                     OR  ((vnUSAALIENACAOPRODUTO > 0) AND EXISTS (SELECT 1
                                                                  FROM PCECOMMERCEUNILEVERPRODUTO
                                                                  WHERE PCECOMMERCEUNILEVERPRODUTO.CODPROD = :NEW.CODPROD
                                                                    AND PCECOMMERCEUNILEVERPRODUTO.CODFILIAL = PCECOMMERCEUNILEVER.CODFILIAL)));
               EXCEPTION WHEN OTHERS THEN
                  vCODFILIAL   := '';
                  vROWID       := '';
                  vCODAUXILIAR := '';
               END;			  
               --Se a variável vCODAUXILIAR for igual a nulo, deverá receber o valor vazio ('').
               IF vCODAUXILIAR = NULL THEN
                  vCODAUXILIAR := '';
               END IF;
               --Enviar preço
               BEGIN --Inserindo registros a ser enviado para todas as configurações validas
                  IF (NVL(vPVENDA1,0) > 0) AND (NVL(vPVENDA2,0) > 0) AND (NVL(vPVENDA3,0) > 0) AND 
                     (NVL(vPVENDA4,0) > 0) AND (NVL(vPVENDA5,0) > 0) AND (NVL(vPVENDA6,0) > 0) AND (NVL(vPVENDA7,0) > 0) THEN
                     INSERT INTO PCECOMMERCEUNILEVERFILA (CODFILIAL, TABELA, ID, DTINCLUSAO, OBSERVACAO)
                        VALUES(vCODFILIAL, 'SELECTPRECO', vROWID, SYSDATE, vCODAUXILIAR);
                  ELSE 
                     IF (NVL(vCODAUXILIAR,'') <> '') THEN
                        INSERT INTO PCECOMMERCEUNILEVERFILA (CODFILIAL, TABELA, ID, DTINCLUSAO, OBSERVACAO)
                           VALUES(vCODFILIAL, 'SELECTPRECO', vROWID, SYSDATE, vCODAUXILIAR);
                     END IF;
                  END IF;
               EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                  NULL;
               END;
            ELSE
               BEGIN --Inserindo registros a ser enviado para todas as configurações validas
                  --Enviar estoque
                  INSERT INTO PCECOMMERCEUNILEVERFILA (CODFILIAL, TABELA, ID, DTINCLUSAO, OBSERVACAO)
                  SELECT PCECOMMERCEUNILEVER.CODFILIAL
                       , 'SELECTESTOQUE'
                       , :NEW.ROWID
                       , SYSDATE
                       , FNC_ECOMMERCEUNILEVER_CODAUX(:OLD.CODPROD,PCEMBALAGEM.QTUNIT,:OLD.QTUNITCX,:OLD.EMBVENDAECOMMERCEUNILEVER,TO_CHAR(TO_CHAR(:OLD.CODAUXILIAR)),:OLD.MULTIPLO,PCECOMMERCEUNILEVER.CODFILIAL,:OLD.CODFORNEC,vbOBSERVACAO, TO_CHAR(PCEMBALAGEM.CODAUXILIAR))
                  FROM PCECOMMERCEUNILEVER, PCEMBALAGEM 
                  WHERE PCECOMMERCEUNILEVER.CODFILIAL = REGISTRO.CODFILIAL 
                    AND PCEMBALAGEM.CODFILIAL = PCECOMMERCEUNILEVER.CODFILIAL
                    AND NVL(PCEMBALAGEM.USAECOMMERCEUNILEVER,'N') = 'S'
                    AND ((vnUSAALIENACAOPRODUTO = 0)
                     OR  ((vnUSAALIENACAOPRODUTO > 0) AND EXISTS (SELECT 1
                                                                  FROM PCECOMMERCEUNILEVERPRODUTO
                                                                  WHERE PCECOMMERCEUNILEVERPRODUTO.CODPROD = :NEW.CODPROD
                                                                    AND PCECOMMERCEUNILEVERPRODUTO.CODFILIAL = PCECOMMERCEUNILEVER.CODFILIAL)));
               EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                  NULL;
               END;

               BEGIN
                  SELECT NVL(PCECOMMERCEUNILEVER.CODFILIAL,'')
                       , :NEW.ROWID
                       , NVL(FNC_ECOMMERCEUNILEVER_CODAUX(:OLD.CODPROD,PCEMBALAGEM.QTUNIT,:OLD.QTUNITCX,:OLD.EMBVENDAECOMMERCEUNILEVER,TO_CHAR(:OLD.CODAUXILIAR),:OLD.MULTIPLO,PCECOMMERCEUNILEVER.CODFILIAL,:OLD.CODFORNEC,vbOBSERVACAO, TO_CHAR(PCEMBALAGEM.CODAUXILIAR)), '')
                  INTO vCODFILIAL,
                       vROWID,
                       vCODAUXILIAR
                  FROM PCECOMMERCEUNILEVER, PCEMBALAGEM 
                  WHERE PCECOMMERCEUNILEVER.CODFILIAL = REGISTRO.CODFILIAL
                    AND PCEMBALAGEM.CODFILIAL = PCECOMMERCEUNILEVER.CODFILIAL
                    AND NVL(PCEMBALAGEM.USAECOMMERCEUNILEVER,'N') = 'S'
                    AND ((vnUSAALIENACAOPRODUTO = 0)
                     OR  ((vnUSAALIENACAOPRODUTO > 0) AND EXISTS (SELECT 1
                                                                  FROM PCECOMMERCEUNILEVERPRODUTO
                                                                  WHERE PCECOMMERCEUNILEVERPRODUTO.CODPROD = :NEW.CODPROD
                                                                    AND PCECOMMERCEUNILEVERPRODUTO.CODFILIAL = PCECOMMERCEUNILEVER.CODFILIAL)));
               EXCEPTION WHEN OTHERS THEN
                  vCODFILIAL   := '';
                  vROWID       := '';
                  vCODAUXILIAR := '';
               END;
               --Se a variável vCODAUXILIAR for igual a nulo, deverá receber o valor vazio ('').
               IF vCODAUXILIAR = NULL THEN
                  vCODAUXILIAR := '';
               END IF;
               --Enviar preço
               BEGIN --Inserindo registros a ser enviado para todas as configurações validas
                  IF ((NVL(vCODFILIAL,'') <> '') AND (NVL(vPVENDA1,0) > 0) AND (NVL(vPVENDA2,0) > 0) AND (NVL(vPVENDA3,0) > 0) AND
                      (NVL(vPVENDA4,0) > 0) AND (NVL(vPVENDA5,0) > 0) AND (NVL(vPVENDA6,0) > 0) AND (NVL(vPVENDA7,0) > 0)) THEN
                      INSERT INTO PCECOMMERCEUNILEVERFILA (CODFILIAL, TABELA, ID, DTINCLUSAO, OBSERVACAO)
                         VALUES(vCODFILIAL, 'SELECTPRECO', vROWID, SYSDATE, vCODAUXILIAR);
                  ELSE
                     IF (NVL(vCODAUXILIAR,'') <> '') THEN
                        INSERT INTO PCECOMMERCEUNILEVERFILA (CODFILIAL, TABELA, ID, DTINCLUSAO, OBSERVACAO)
                           VALUES(vCODFILIAL, 'SELECTPRECO', vROWID, SYSDATE, vCODAUXILIAR);
                     END IF;
                  END IF;
               EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                  NULL;
               END;
            END IF;
         END IF;
      END LOOP;
   END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_ECOMMERCE_PCPRODUT" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_ECOMMERCEB2B_PCPRODUT" 
   AFTER INSERT OR DELETE OR UPDATE OF CODAUXILIAR, QTUNIT, QTUNITCX, MULTIPLO
   ON PCPRODUT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE 
   vsENVIARREGISTRO VARCHAR2(1);
   vsPOSSUIPRECOMAIORZERO INTEGER;
BEGIN
  vsENVIARREGISTRO := 'S';

  BEGIN
     SELECT DISTINCT 
     COUNT(1) POSSUIPRECO
     INTO vsPOSSUIPRECOMAIORZERO
     FROM PCECOMMERCEB2BPRODUTO, 
          PCPRODUT, 
          PCTABPR,
          PCECOMMERCEB2B C
    WHERE PCECOMMERCEB2BPRODUTO.CODPROD = :NEW.CODPROD
      AND PCPRODUT.CODPROD = PCECOMMERCEB2BPRODUTO.CODPROD
      AND PCTABPR.CODPROD = PCECOMMERCEB2BPRODUTO.CODPROD
      AND C.TIPOINTEGRACAO = PCECOMMERCEB2BPRODUTO.TIPOINTEGRACAO
      AND C.NUMREGIAO = PCTABPR.NUMREGIAO
      AND C.CODFILIAL = PCECOMMERCEB2BPRODUTO.CODFILIAL      
      AND C.CODFILIAL = NVL(:NEW.CODFILIAL,:OLD.CODFILIAL)
      AND PCECOMMERCEB2BPRODUTO.CODPROD = :NEW.CODPROD
      AND NVL(PCTABPR.PVENDA1, 0) > 0
      AND NVL(PCTABPR.PVENDA2, 0) > 0
      AND NVL(PCTABPR.PVENDA3, 0) > 0
      AND NVL(PCTABPR.PVENDA4, 0) > 0
      AND NVL(PCTABPR.PVENDA5, 0) > 0
      AND NVL(PCTABPR.PVENDA6, 0) > 0
      AND NVL(PCTABPR.PVENDA7, 0) > 0
      AND ROWNUM = 1; 	   
  EXCEPTION WHEN OTHERS THEN
      vsPOSSUIPRECOMAIORZERO := 0;
  END;  
  
  IF ((:NEW.DTEXCLUSAO IS NOT NULL) OR (vsPOSSUIPRECOMAIORZERO > 0)) THEN 
    VSENVIARREGISTRO := 'S';
  ELSE 
    VSENVIARREGISTRO := 'N';
  END IF;  

  IF vsENVIARREGISTRO = 'S' THEN

    FOR REGISTROS IN (SELECT DISTINCT
                             PCECOMMERCEB2BPRODUTO.CODFILIAL
                            ,PCECOMMERCEB2BPRODUTO.TIPOINTEGRACAO
                            ,PCECOMMERCEB2BPRODUTO.CODPROD
                            ,PCECOMMERCEB2BPRODUTO.TIPOCONVERSAO
                            ,PCECOMMERCEB2BPRODUTO.CODAUXILIAR
                            ,0 QTUNIT
                      FROM PCECOMMERCEB2BPRODUTO, PCPARAMFILIAL
                      WHERE PCECOMMERCEB2BPRODUTO.CODPROD = :NEW.CODPROD
                        AND PCECOMMERCEB2BPRODUTO.CODFILIAL = PCECOMMERCEB2BPRODUTO.CODFILIAL
                        AND PCPARAMFILIAL.NOME = 'FIL_UTILIZAVENDAPOREMBALAGEM'
                        AND PCPARAMFILIAL.VALOR = 'N'
                        AND PCECOMMERCEB2BPRODUTO.TIPOCONVERSAO NOT IN ('EM','AL')
                      ------------------------------------------------------------
                       UNION ALL
                      ------------------------------------------------------------
                      SELECT DISTINCT
                             PCECOMMERCEB2BPRODUTO.CODFILIAL
                            ,PCECOMMERCEB2BPRODUTO.TIPOINTEGRACAO
                            ,PCECOMMERCEB2BPRODUTO.CODPROD
                            ,PCECOMMERCEB2BPRODUTO.TIPOCONVERSAO
                            ,TO_CHAR(PCEMBALAGEM.CODAUXILIAR) CODAUXILIAR
                            ,PCEMBALAGEM.QTUNIT
                      FROM PCECOMMERCEB2BPRODUTO, PCPARAMFILIAL, PCEMBALAGEM
                      WHERE PCECOMMERCEB2BPRODUTO.CODPROD = :NEW.CODPROD
                        AND PCECOMMERCEB2BPRODUTO.CODFILIAL = PCECOMMERCEB2BPRODUTO.CODFILIAL
                        AND PCECOMMERCEB2BPRODUTO.CODFILIAL = PCEMBALAGEM.CODFILIAL
                        AND PCECOMMERCEB2BPRODUTO.CODPROD = PCEMBALAGEM.CODPROD
                        AND PCECOMMERCEB2BPRODUTO.CODAUXILIAR = PCEMBALAGEM.CODAUXILIAR
                        AND PCECOMMERCEB2BPRODUTO.TIPOCONVERSAO = 'EM'
                        AND PCPARAMFILIAL.NOME = 'FIL_UTILIZAVENDAPOREMBALAGEM'
                        AND PCPARAMFILIAL.VALOR = 'S'
                      )
    LOOP
      IF (:OLD.CODAUXILIAR <> :NEW.CODAUXILIAR) AND (REGISTROS.TIPOCONVERSAO <> 'EM') THEN
        INSERT INTO PCECOMMERCEB2BFILA (CODFILIAL, TIPOINTEGRACAO, TABELA, ID, DTINCLUSAO, OBSERVACAO)
          VALUES ( REGISTROS.CODFILIAL, REGISTROS.TIPOINTEGRACAO, 'ESTOQUE', :NEW.ROWID, SYSDATE,
                   CASE WHEN REGISTROS.TIPOCONVERSAO = 'MU' AND NVL(:OLD.MULTIPLO,0) > 1 THEN :OLD.CODAUXILIAR||'C'||:OLD.MULTIPLO
                        WHEN REGISTROS.TIPOCONVERSAO = 'UN' AND NVL(:OLD.QTUNIT,0) <= 1 THEN TO_CHAR(:OLD.CODAUXILIAR)
                        WHEN REGISTROS.TIPOCONVERSAO = 'UN' AND NVL(:OLD.QTUNIT,0) > 1  THEN :OLD.CODAUXILIAR||'C'||:OLD.QTUNIT
                        WHEN REGISTROS.TIPOCONVERSAO = 'MT' AND ((NVL(:OLD.QTUNIT,0) * NVL(:OLD.QTUNITCX,0)) <= 1) THEN TO_CHAR(:OLD.CODAUXILIAR)
                        WHEN REGISTROS.TIPOCONVERSAO = 'MT' AND ((NVL(:OLD.QTUNIT,0) * NVL(:OLD.QTUNITCX,0)) > 1)  THEN :OLD.CODAUXILIAR||'C'||(:OLD.QTUNIT * :OLD.QTUNITCX) END );

        INSERT INTO PCECOMMERCEB2BFILA (CODFILIAL, TIPOINTEGRACAO, TABELA, ID, DTINCLUSAO, OBSERVACAO)
          VALUES ( REGISTROS.CODFILIAL, REGISTROS.TIPOINTEGRACAO, 'PRECO', :NEW.ROWID, SYSDATE,
                   CASE WHEN REGISTROS.TIPOCONVERSAO = 'MU' AND NVL(:OLD.MULTIPLO,0) > 1 THEN :OLD.CODAUXILIAR||'C'||:OLD.MULTIPLO
                        WHEN REGISTROS.TIPOCONVERSAO = 'UN' AND NVL(:OLD.QTUNIT,0) <= 1 THEN TO_CHAR(:OLD.CODAUXILIAR)
                        WHEN REGISTROS.TIPOCONVERSAO = 'UN' AND NVL(:OLD.QTUNIT,0) > 1  THEN :OLD.CODAUXILIAR||'C'||:OLD.QTUNIT
                        WHEN REGISTROS.TIPOCONVERSAO = 'MT' AND ((NVL(:OLD.QTUNIT,0) * NVL(:OLD.QTUNITCX,0)) <= 1) THEN TO_CHAR(:OLD.CODAUXILIAR)
                        WHEN REGISTROS.TIPOCONVERSAO = 'MT' AND ((NVL(:OLD.QTUNIT,0) * NVL(:OLD.QTUNITCX,0)) > 1)  THEN :OLD.CODAUXILIAR||'C'||(:OLD.QTUNIT * :OLD.QTUNITCX) END );
      END IF;

      IF (:OLD.MULTIPLO <> :NEW.MULTIPLO) AND (REGISTROS.TIPOCONVERSAO = 'MU' ) THEN
        INSERT INTO PCECOMMERCEB2BFILA (CODFILIAL, TIPOINTEGRACAO, TABELA, ID, DTINCLUSAO, OBSERVACAO)
          VALUES ( REGISTROS.CODFILIAL, REGISTROS.TIPOINTEGRACAO, 'ESTOQUE', :NEW.ROWID, SYSDATE,
                   CASE WHEN NVL(:OLD.MULTIPLO,0) > 1 THEN :OLD.CODAUXILIAR||'C'||:OLD.MULTIPLO
                     ELSE TO_CHAR(:OLD.CODAUXILIAR) END  );

        INSERT INTO PCECOMMERCEB2BFILA (CODFILIAL, TIPOINTEGRACAO, TABELA, ID, DTINCLUSAO, OBSERVACAO)
          VALUES ( REGISTROS.CODFILIAL, REGISTROS.TIPOINTEGRACAO, 'PRECO', :NEW.ROWID, SYSDATE,
                   CASE WHEN NVL(:OLD.MULTIPLO,0) > 1 THEN :OLD.CODAUXILIAR||'C'||:OLD.MULTIPLO
                     ELSE TO_CHAR(:OLD.CODAUXILIAR) END   );
      END IF;

      IF (:OLD.QTUNIT <> :NEW.QTUNIT) AND (REGISTROS.TIPOCONVERSAO IN ('UN', 'MT') ) THEN
        INSERT INTO PCECOMMERCEB2BFILA (CODFILIAL, TIPOINTEGRACAO, TABELA, ID, DTINCLUSAO, OBSERVACAO)
          VALUES (REGISTROS.CODFILIAL, REGISTROS.TIPOINTEGRACAO, 'ESTOQUE', :NEW.ROWID, SYSDATE,
                  CASE WHEN NVL(:OLD.QTUNIT,0) > 1 THEN :OLD.CODAUXILIAR||'C'||:OLD.QTUNIT
                    ELSE TO_CHAR(:OLD.CODAUXILIAR) END);

        INSERT INTO PCECOMMERCEB2BFILA (CODFILIAL, TIPOINTEGRACAO, TABELA, ID, DTINCLUSAO, OBSERVACAO)
          VALUES (REGISTROS.CODFILIAL, REGISTROS.TIPOINTEGRACAO, 'ESTOQUE', :NEW.ROWID, SYSDATE,
                  CASE WHEN (NVL(:OLD.QTUNIT,0) * NVL(:OLD.QTUNITCX,0)) > 1 THEN :OLD.CODAUXILIAR||'C'||(:OLD.QTUNIT * :OLD.QTUNITCX)
                    ELSE TO_CHAR(:OLD.CODAUXILIAR) END);

        INSERT INTO PCECOMMERCEB2BFILA (CODFILIAL, TIPOINTEGRACAO, TABELA, ID, DTINCLUSAO, OBSERVACAO)
          VALUES (REGISTROS.CODFILIAL, REGISTROS.TIPOINTEGRACAO, 'PRECO', :NEW.ROWID, SYSDATE,
                  CASE WHEN NVL(:OLD.QTUNIT,0) > 1 THEN :OLD.CODAUXILIAR||'C'||:OLD.QTUNIT
                    ELSE TO_CHAR(:OLD.CODAUXILIAR) END);
                    
        INSERT INTO PCECOMMERCEB2BFILA (CODFILIAL, TIPOINTEGRACAO, TABELA, ID, DTINCLUSAO, OBSERVACAO)
          VALUES (REGISTROS.CODFILIAL, REGISTROS.TIPOINTEGRACAO, 'PRECO', :NEW.ROWID, SYSDATE,
                  CASE WHEN (NVL(:OLD.QTUNIT,0) * NVL(:OLD.QTUNITCX,0)) > 1 THEN :OLD.CODAUXILIAR||'C'||(:OLD.QTUNIT * :OLD.QTUNITCX)
                    ELSE TO_CHAR(:OLD.CODAUXILIAR) END);
      END IF;

      IF (:OLD.QTUNITCX <> :NEW.QTUNITCX) AND (REGISTROS.TIPOCONVERSAO IN ('MT') ) THEN
        INSERT INTO PCECOMMERCEB2BFILA (CODFILIAL, TIPOINTEGRACAO, TABELA, ID, DTINCLUSAO, OBSERVACAO)
          VALUES (REGISTROS.CODFILIAL, REGISTROS.TIPOINTEGRACAO, 'ESTOQUE', :NEW.ROWID, SYSDATE,
                  CASE WHEN (NVL(:OLD.QTUNIT,0) * NVL(:OLD.QTUNITCX,0)) > 1 THEN :OLD.CODAUXILIAR||'C'||(:OLD.QTUNIT * :OLD.QTUNITCX)
                    ELSE TO_CHAR(:OLD.CODAUXILIAR) END);

        INSERT INTO PCECOMMERCEB2BFILA (CODFILIAL, TIPOINTEGRACAO, TABELA, ID, DTINCLUSAO, OBSERVACAO)
          VALUES (REGISTROS.CODFILIAL, REGISTROS.TIPOINTEGRACAO, 'PRECO', :NEW.ROWID, SYSDATE,
                  CASE WHEN (NVL(:OLD.QTUNIT,0) * NVL(:OLD.QTUNITCX,0)) > 1 THEN :OLD.CODAUXILIAR||'C'||(:OLD.QTUNIT * :OLD.QTUNITCX)
                    ELSE TO_CHAR(:OLD.CODAUXILIAR) END);
      END IF;

      IF (REGISTROS.TIPOCONVERSAO = 'EM') AND (:OLD.CODAUXILIAR <> :NEW.CODAUXILIAR) THEN
        INSERT INTO PCECOMMERCEB2BFILA (CODFILIAL, TIPOINTEGRACAO, TABELA, ID, DTINCLUSAO, OBSERVACAO)
          VALUES (REGISTROS.CODFILIAL, REGISTROS.TIPOINTEGRACAO, 'ESTOQUE', :NEW.ROWID, SYSDATE,
                  CASE WHEN REGISTROS.QTUNIT > 1 THEN :OLD.CODAUXILIAR||'C'||REGISTROS.QTUNIT
                    ELSE TO_CHAR(:OLD.CODAUXILIAR) END);

        INSERT INTO PCECOMMERCEB2BFILA (CODFILIAL, TIPOINTEGRACAO, TABELA, ID, DTINCLUSAO, OBSERVACAO)
          VALUES (REGISTROS.CODFILIAL, REGISTROS.TIPOINTEGRACAO, 'PRECO', :NEW.ROWID, SYSDATE,
                  CASE WHEN REGISTROS.QTUNIT > 1 THEN :OLD.CODAUXILIAR||'C'||REGISTROS.QTUNIT
                    ELSE TO_CHAR(:OLD.CODAUXILIAR) END);
      END IF;

      INSERT INTO PCECOMMERCEB2BFILA (CODFILIAL, TIPOINTEGRACAO, TABELA, ID, DTINCLUSAO)
        VALUES (REGISTROS.CODFILIAL, REGISTROS.TIPOINTEGRACAO, 'ESTOQUE', :NEW.ROWID, SYSDATE);

      INSERT INTO PCECOMMERCEB2BFILA (CODFILIAL, TIPOINTEGRACAO, TABELA, ID, DTINCLUSAO)
        VALUES (REGISTROS.CODFILIAL, REGISTROS.TIPOINTEGRACAO, 'PRECO', :NEW.ROWID, SYSDATE);
    END LOOP;
  END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_ECOMMERCEB2B_PCPRODUT" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_INTEGRA_MYFROTA_PCPRODUT" 
  AFTER UPDATE OR INSERT ON pcprodut
  REFERENCING NEW AS NEW OLD AS OLD
  FOR EACH ROW
DECLARE
  xmlvalor       clob;
  operacao       varchar2(50);
  CHAVETRANSACAO raw(16);
BEGIN
  SELECT SYS_GUID INTO CHAVETRANSACAO FROM DUAL;

  IF (:NEW.REVENDA = 'N') THEN
  
    IF (UPDATING) THEN
      IF (:NEW.dtexclusao is not null and :OLD.dtexclusao is null) THEN
        SELECT xmltype.getclobval(XMLELEMENT("item",
                                             XMLATTRIBUTES(:NEW.IDINTEGRACAOMYFROTA AS
                                                           "SFT_External_Id"),
                                             XMLELEMENT("transp__SFT_Active__c",
                                                        '0')))
          INTO xmlvalor
          FROM dual;
        SELECT 'ExcluirProdutoMyFrota' into OPERACAO from dual;
      END IF;
      IF NOT (NVL(:NEW.DESCRICAO, 0) = NVL(:OLD.DESCRICAO, 0) AND
          NVL(:NEW.CODPROD, 0) = NVL(:OLD.CODPROD, 0) AND
          NVL(:NEW.UNIDADE, 0) = NVL(:OLD.UNIDADE, 0)
          
          ) THEN
        SELECT xmltype.getclobval(XMLELEMENT("item",
                                             XMLATTRIBUTES(:NEW.IDINTEGRACAOMYFROTA AS
                                                           "SFT_External_Id"),
                                             XMLELEMENT("Name",
                                                        :NEW.DESCRICAO),
                                             XMLELEMENT("transp__SFT_Transaction_Number__c",
                                                        CHAVETRANSACAO),
                                             XMLELEMENT("transp__SFT_NickName__c",
                                                        :NEW.DESCRICAO),
                                             XMLELEMENT("transp__SFT_Reference__c",
                                                        :NEW.CODPROD),
                                             XMLELEMENT("transp__SFT_Type__c",
                                                        'A Definir'),
                                             XMLELEMENT("transp__SFT_Unit_of_Measure__c",
                                                        'A Definir'),
                                             XMLELEMENT("transp__SFT_Sub_System__c",
                                                        'A Definir'),
                                             XMLELEMENT("transp__SFT_Active__c",
                                                        CAST(NVL(NVL(CAST(:NEW.DTEXCLUSAO AS
                                                                          VARCHAR2(10)),
                                                                     '1'),
                                                                 '0') AS
                                                             VARCHAR(1)))
                                             
                                             ))
          INTO xmlvalor
          FROM dual;
      
        SELECT 'AlterarProdutoMyFrota' INTO operacao FROM dual;
      END IF;
    END IF;
    
    IF (INSERTING) THEN
      SELECT xmltype.getclobval(XMLELEMENT("items",
                                           XMLELEMENT("item",
                                                      XMLATTRIBUTES(:NEW.IDINTEGRACAOMYFROTA AS
                                                                    "SFT_External_Id"),
                                                      XMLELEMENT("Name",
                                                                 NVL(:NEW.DESCRICAO,
                                                                     ' ')),
                                                      XMLELEMENT("transp__SFT_Transaction_Number__c",
                                                                 CHAVETRANSACAO),
                                                      XMLELEMENT("transp__SFT_NickName__c",
                                                                 NVL(:NEW.DESCRICAO,
                                                                     ' ')),
                                                      XMLELEMENT("transp__SFT_Reference__c",
                                                                 NVL(CAST(:NEW.CODPROD AS
                                                                          VARCHAR2(50)),
                                                                     ' ')),
                                                      XMLELEMENT("transp__SFT_Type__c",
                                                                 'A Definir'),
                                                      XMLELEMENT("transp__SFT_Unit_of_Measure__c",
                                                                 'A Definir'),
                                                      XMLELEMENT("transp__SFT_Sub_System__c",
                                                                 'A Definir'),
                                                      XMLELEMENT("transp__SFT_Active__c",
                                                                 CAST(NVL(NVL(CAST(:NEW.DTEXCLUSAO AS
                                                                                   VARCHAR2(10)),
                                                                              '1'),
                                                                          '0') AS
                                                                      VARCHAR(1)))
                                                      
                                                      )))
        INTO xmlvalor
        FROM dual;
    
      SELECT 'IncluirProdutoMyFrota' INTO operacao FROM dual;
    
    END IF;
    IF (OPERACAO IN ('IncluirProdutoMyFrota', 'AlterarProdutoMyFrota',
        'ExcluirProdutoMyFrota')) THEN
      INSERT INTO PCMYFROTA_FILA
        (CHAVE, OPERACAO, DADOS)
      VALUES
        (CHAVETRANSACAO, operacao, xmlvalor);
    END IF;
  END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_INTEGRA_MYFROTA_PCPRODUT" ENABLE;

CREATE INDEX "AJEL"."PCPRODUT_IDX11" ON "AJEL"."PCPRODUT" ("PISCOFINSRETIDO", "CODPROD", "DESCRICAO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX" ON "AJEL"."PCPRODUT" ("DTCADASTRO", "DESCRICAO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX12" ON "AJEL"."PCPRODUT" ("PERCBONIFICVENDA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX8" ON "AJEL"."PCPRODUT" ("CODEQUIPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX9" ON "AJEL"."PCPRODUT" ("INFORMACOESTECNICAS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX10" ON "AJEL"."PCPRODUT" ("CODPRINCIPATIVO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_INDEX3" ON "AJEL"."PCPRODUT" ("DESCRICAO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX2" ON "AJEL"."PCPRODUT" ("CODEPTO", "CODSEC", "CODCATEGORIA", "CODSUBCATEGORIA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX6" ON "AJEL"."PCPRODUT" ("CODPRODMASTER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX7" ON "AJEL"."PCPRODUT" ("CODAUXILIAR2") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX3" ON "AJEL"."PCPRODUT" ("CODFORNEC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX4" ON "AJEL"."PCPRODUT" ("CODAUXILIAR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX5" ON "AJEL"."PCPRODUT" ("CODPRODPRINC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX14" ON "AJEL"."PCPRODUT" ("DTPRIMOVNOVCODPROD", "DTINICODPRODANTUTICAD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE UNIQUE INDEX "AJEL"."PCPRODUT_PK" ON "AJEL"."PCPRODUT" ("CODPROD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX13" ON "AJEL"."PCPRODUT" ("DTEXCLUSAO", UPPER("DESCRICAO"), NVL("REVENDA",'S')) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX15" ON "AJEL"."PCPRODUT" ("CODPROD", "CODNCMEX") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX16" ON "AJEL"."PCPRODUT" ("DESCRICAODINAMICA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE UNIQUE INDEX "AJEL"."SYS_IL0000089901C00392$$" ON "AJEL"."PCPRODUT" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" 
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX31" ON "AJEL"."PCPRODUT" ("CODAUXILIAR", NVL("CODFILIAL",'99')) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX30" ON "AJEL"."PCPRODUT" ("CODFAB", NVL("CODFILIAL",'99')) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX32" ON "AJEL"."PCPRODUT" ("CODAUXILIAR2", NVL("CODFILIAL",'99')) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX33" ON "AJEL"."PCPRODUT" ("CODPROD", NVL("CODFILIAL",'99')) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCPRODUT_IDX17" ON "AJEL"."PCPRODUT" ("ENVIAECOMMERCE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;

COMMENT ON COLUMN AJEL.PCPRODUT.DTULTALTCOM IS 'Data da ultima alteração de comissão.';
COMMENT ON COLUMN AJEL.PCPRODUT.LARGURAM3 IS 'Largura do produto na norma pallete.';
COMMENT ON COLUMN AJEL.PCPRODUT.ALTURAM3 IS 'Altura do produto na norma pallete.';
COMMENT ON COLUMN AJEL.PCPRODUT.COMPRIMENTOM3 IS 'Comprimento do produto na norma pallete.';
COMMENT ON COLUMN AJEL.PCPRODUT.TIPORESTRICAO IS 'Tipo de restição para venda e separação de mercadoria.';
COMMENT ON COLUMN AJEL.PCPRODUT.QTTOTPALFRAC IS 'Quantidade total pallete orçado.';
COMMENT ON COLUMN AJEL.PCPRODUT.CLASSEVENDA IS 'Clase venda do produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.CLASSEMC IS 'Classe margem do produto';
COMMENT ON COLUMN AJEL.PCPRODUT.PERICM IS 'Descricao coluna PERICM';
COMMENT ON COLUMN AJEL.PCPRODUT.CUSTOREP IS 'Custo de reposição da fabrica.';
COMMENT ON COLUMN AJEL.PCPRODUT.DTULTALTCUSTOREP IS 'Data da ultima atualização do custo reposição da fabrica.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCCOMMOT IS 'Percentual comissão motorista.';
COMMENT ON COLUMN AJEL.PCPRODUT.IVARESSARC IS 'Percentual IVA ressarcimento.';
COMMENT ON COLUMN AJEL.PCPRODUT.ICMSRESSARC IS 'Percentual ICMS ressarcimento.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODAUXILIAR2 IS 'Código barra embalagem master.';
COMMENT ON COLUMN AJEL.PCPRODUT.VLPAUTAIPI IS 'Informar valor da pauta do IPI na tabela PCPRODUT.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCVENDA IS 'Indica o percentual negociado na venda.';
COMMENT ON COLUMN AJEL.PCPRODUT.TIPOCOMISSAO IS 'Define se o produto utiliza Comissão Padrão ou Comissão por Lucratividade.';
COMMENT ON COLUMN AJEL.PCPRODUT.RESTRICAOTRANSP IS 'Define se o produto tem restrição "N" (Normal) ou "C" (Congelado).';
COMMENT ON COLUMN AJEL.PCPRODUT.CODPRAZOENT IS 'Campo de ligação com o Prazo de Entrega (PCPRAZO), que será usado para cálculo da data de entrega do item do pedido de compra.';
COMMENT ON COLUMN AJEL.PCPRODUT.QTMETROS IS 'Na rotina 203, pasta Armazenagem, receberá a metragem do produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.VALIDARLOTE IS 'Indica se haverá validação de lote.';
COMMENT ON COLUMN AJEL.PCPRODUT.ISENTOREGMS IS 'Indica se o produto é isento ou não do registro no Ministério da Saúde.';
COMMENT ON COLUMN AJEL.PCPRODUT.REGMS IS 'Registro do produto no Ministério da Saúde.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODFISCALBONIFIC IS 'Código Fiscal utilizado nas Entradas Bonificadas.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODFISCALSR IS 'Código Fiscal utilizado nas Entradas de Simples Remessas.';
COMMENT ON COLUMN AJEL.PCPRODUT.CUSTOREPANT IS 'Preco de Compra anterior a atualização.';
COMMENT ON COLUMN AJEL.PCPRODUT.PRAZOMEDIOVENDA IS 'Prazo Médio de Venda. O Produto não poderá ser vendido quando o Prazo Médio é maior que o informado.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCCREDICMPRESUMIDO IS 'Indica o percentual de crédito ICMS presumido para o produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.CAPACIDADEPICKINGAL IS 'Indica capacidade de picking';
COMMENT ON COLUMN AJEL.PCPRODUT.REDBASEIVA IS 'Será utilizado para Redução da Base de Cálculo de Substituição Tributária na Entrada.';
COMMENT ON COLUMN AJEL.PCPRODUT.REDBASEALIQEXT IS 'Será utilizado para Redução da Base de Cálculo da Aliquota Externa ref a substituição Tributária na Entrada.';
COMMENT ON COLUMN AJEL.PCPRODUT.CONCILIAIMPORTACAO IS 'Indica se para o produto deverá ter ou não conciliação de importação.';
COMMENT ON COLUMN AJEL.PCPRODUT.VLMAODEOBRA IS 'Valor da Mão de Obra ao montar o Produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODAGRUPMAPASEP IS 'Código de Agrupamento de Mapa de Separação, utilizado na rotina 203.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCPERDAKG IS 'Percentual de perda para rendimento de um Kg';
COMMENT ON COLUMN AJEL.PCPRODUT.APROVEITACREDICMS IS 'Indica se o produto será aproveitado crédito ICMS na entrada.';
COMMENT ON COLUMN AJEL.PCPRODUT.CUSTOFORNEC IS 'Custo de precificação por fornecedor, calculado a partir do preço de tabela do fornecedor informado pelo usuário.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCDESCICMS IS 'Percentual de desconto a ser aplicado sobre o cálculo do ICMS.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCACRES IS 'Percentual de acréscimo a ser aplicado sobre o custo de precificação por fornecedor.';
COMMENT ON COLUMN AJEL.PCPRODUT.PTABELAFORNEC IS 'Preço de tabela do fornecedor, este preço é disponibilizado através de tabela de preços do fornecedor..';
COMMENT ON COLUMN AJEL.PCPRODUT.CHECARMULTIPLOVENDABNF IS 'Checar múltiplo em vendas bonificadas. Verifica obrigatoriedade de venda em quantidades múltiplas no caso de pedido de venda bonificado/troca (tps. 5, 6, 11 e 12).';
COMMENT ON COLUMN AJEL.PCPRODUT.VLICMSANTECIPADO IS '. |Campo do tipo numérico, de tamanho 18, com 6 casas decimais, com valor default 0 , obrigatório.';
COMMENT ON COLUMN AJEL.PCPRODUT.CLASSECOMISSAO IS 'Indica a classe para comissionamento do produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.ANALISEDESC IS 'Descontos de Análise.';
COMMENT ON COLUMN AJEL.PCPRODUT.VOLPESMED IS 'Volume / Peso e Medida.';
COMMENT ON COLUMN AJEL.PCPRODUT.PH IS 'Pesquisa de PH.';
COMMENT ON COLUMN AJEL.PCPRODUT.DENSIDADE IS 'Pesquisa de Densidade.';
COMMENT ON COLUMN AJEL.PCPRODUT.DOSEAMENTO IS 'Pesquisa de Doseamento.';
COMMENT ON COLUMN AJEL.PCPRODUT.CONTMICROBIANA IS 'Contaminação Microbiana.';
COMMENT ON COLUMN AJEL.PCPRODUT.IDENTIFICACAO IS 'Identificação da Análise.';
COMMENT ON COLUMN AJEL.PCPRODUT.IMPUREZA IS 'Pesquisa de Impurezas.';
COMMENT ON COLUMN AJEL.PCPRODUT.FRIABILIDADE IS 'Pesquisa de Friabilidade.';
COMMENT ON COLUMN AJEL.PCPRODUT.DESINTEGRACAO IS 'Pesquisa de Desintegração.';
COMMENT ON COLUMN AJEL.PCPRODUT.DISSOLUCAO IS 'Pesquisa de Dissolução.';
COMMENT ON COLUMN AJEL.PCPRODUT.UNIFORMIDADE IS 'Pesquisa de Uniformidade.';
COMMENT ON COLUMN AJEL.PCPRODUT.DIRASSINATURA IS 'Diretório da Assinatura.';
COMMENT ON COLUMN AJEL.PCPRODUT.VERSANALISE IS 'Versão da Análise.';
COMMENT ON COLUMN AJEL.PCPRODUT.PESQPATOGENOS IS 'Pesquisa de Patógenos.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODPRODEMBALAGEM IS 'Indica o código da embalagem.';
COMMENT ON COLUMN AJEL.PCPRODUT.CONSIDERARICMSANTECIPCUSTO IS 'Considerar ICMS Atencipado no Custo.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCOFINS IS 'Indica o percentual de COFINS.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCREDICMS IS 'Indica o percentual de crédito ICMS.';
COMMENT ON COLUMN AJEL.PCPRODUT.DTIMPORTINTEGRACAO IS 'Data da última importação do registro na filial de destino da informação.';
COMMENT ON COLUMN AJEL.PCPRODUT.DTULTALTER IS 'Data da última alteração do registro no banco de dados.';
COMMENT ON COLUMN AJEL.PCPRODUT.UMIDADEANALISE IS 'CAMPO DE ANALISE DE UMIDADE DA AMOSTRA.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCDIFERENCAKGFRIO IS 'Indica o percentual de diferença no kg de produtos frios.';
COMMENT ON COLUMN AJEL.PCPRODUT.REDBASEALIQEXTBCR IS 'Indica a redução base BCR.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCALIQEXTBCR IS 'Indica à aliquota externa BCR.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCALIQINTBCR IS 'Indica á aliquota interna BCR.';
COMMENT ON COLUMN AJEL.PCPRODUT.VLADICIONALBCSTBCR IS 'Indica o valor adicional base BCR.';
COMMENT ON COLUMN AJEL.PCPRODUT.VLPAUTABCR IS 'Indica valor pauta BCR.';
COMMENT ON COLUMN AJEL.PCPRODUT.REDBASEIVABCR IS 'Indica redução base IVA BCR.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCIVABCR IS 'Indica o % IVA BCR.';
COMMENT ON COLUMN AJEL.PCPRODUT.CALCCREDIPI IS 'Calcular Custo com Crédito de IPI (Compra).';
COMMENT ON COLUMN AJEL.PCPRODUT.ENVIARFORCAVENDAS IS 'Informa se envia para o força de vendas.';
COMMENT ON COLUMN AJEL.PCPRODUT.DADOSTECNICOS IS 'Informa os dados técnicos do produto. ';
COMMENT ON COLUMN AJEL.PCPRODUT.CODFISCALENTTRANSF IS 'Indica o código fiscal de entrada por transferência.';
COMMENT ON COLUMN AJEL.PCPRODUT.PRAZOMINVALIDADE IS 'Indica o % prazo minimo vencimento produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.PRAZOMAXVALIDADE IS 'Indica o % prazo máximo vencimento produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.UTILIZAPRECOMAXCONSUMIDOR IS 'Indica se utiliza preço máximo consumidor.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCIMPPRODUTORURAL IS 'Indica o percentual do imposto do produtor rural.';
COMMENT ON COLUMN AJEL.PCPRODUT.DESTAQUEFICHATECNICA IS 'Indica destaque na ficha técnica.';
COMMENT ON COLUMN AJEL.PCPRODUT.NUMPAG IS 'Indica o numero da página.';
COMMENT ON COLUMN AJEL.PCPRODUT.LETRAPAGINA IS 'Indica a letra da página.';
COMMENT ON COLUMN AJEL.PCPRODUT.SEQPAGINA IS 'Indica o numero da linha.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODONU IS 'Indica o número da ONU do produto quimico.';
COMMENT ON COLUMN AJEL.PCPRODUT.NATUREZAPRODUTO IS 'Indica a natureza do produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.DATAVOCOLLECT IS '.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCICMSFRETEFOBST IS 'Percentual de crédito de ICMS sobre o valor Frete FOB, utilizado no calculo do ST';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCICMSFRETEFOBSTBCR IS 'Percentual de crédito de ICMS sobre o valor Frete FOB, utilizado no calculo do STBCR';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCIPIVENDATAB IS 'Indica o % do IPI venda futuro.';
COMMENT ON COLUMN AJEL.PCPRODUT.VLPAUTAIPIVENDA IS 'Indica a pauta IPI venda.';
COMMENT ON COLUMN AJEL.PCPRODUT.VLPAUTAIPIVENDATAB IS 'Indica a pauta IPI venda futuro.';
COMMENT ON COLUMN AJEL.PCPRODUT.VLIPIPORKGVENDA IS 'Indica o IPI/KG venda.';
COMMENT ON COLUMN AJEL.PCPRODUT.VLIPIPORKGVENDATAB IS 'Indica o IPI/KG venda futuro.';
COMMENT ON COLUMN AJEL.PCPRODUT.IMUNETRIB IS 'Imune de Tributação.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODFORMATOPAPEL IS 'Código do formato do papel.';
COMMENT ON COLUMN AJEL.PCPRODUT.GRAMATURA IS 'Gramatura do papel.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODUNIDMEDIDANF IS 'Código da unidade de medida utilizada na Nota Fiscal.';
COMMENT ON COLUMN AJEL.PCPRODUT.FATORCONVERSAOKG IS 'Fator de conversão do peso.';
COMMENT ON COLUMN AJEL.PCPRODUT.DESCPAPEL IS 'Descrição do produto para sistema DIF-PAPEL IMUNE.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODFISCALCONSIGFAT IS 'Indica o código fiscal compra produto consignação.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCDIFALIQUOTAS IS 'Indica o percentual de diferença de alíquota.';
COMMENT ON COLUMN AJEL.PCPRODUT.VLDIFALIQUOTAS IS 'Indica o valor da diferença de alíquota.';
COMMENT ON COLUMN AJEL.PCPRODUT.PESOVARIAVEL IS 'Indica se o peso e variável.';
COMMENT ON COLUMN AJEL.PCPRODUT.VLPAUTAICMS IS 'Indica o valor de pauta ICMS.';
COMMENT ON COLUMN AJEL.PCPRODUT.VLADICIONALBCST IS 'Indica o valor adicional da base ST.';
COMMENT ON COLUMN AJEL.PCPRODUT.COMPRACONSIGNADO IS 'Indica o produto em consignação.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODFISCALCONSIG IS 'Indica o código fiscal para produto consignado.';
COMMENT ON COLUMN AJEL.PCPRODUT.PRAZOGARANTIA IS 'Indica o prazo de garantia do produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.CONTROLANUMSERIE IS 'Indica que o produtco controla número de série.';
COMMENT ON COLUMN AJEL.PCPRODUT.QTDEMAXSEPARPEDIDO IS 'Indica a quantidade máxima para separação por pedido.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCDESPFORANF IS 'Indica o percentual de despesa fora da nota.';
COMMENT ON COLUMN AJEL.PCPRODUT.PRAZOMAXINDENIZACAO IS 'Indica o prazo máximo para indenização ou troca.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODFILIALRETIRA IS 'Indica o código da filial retira padrão.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODMARCA IS 'Indica o peso da embalagem.';
COMMENT ON COLUMN AJEL.PCPRODUT.PESOEMBALAGEM IS 'Indica o peso da embalagem.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_DOSEAMENTO IS 'Exibir o doseamento do produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_IMPUREZA IS 'Exibir impureza do produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.MARCA IS 'Indica do produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.CONTROLANUMSERIA IS 'Indica se controla o número de série.';
COMMENT ON COLUMN AJEL.PCPRODUT.PVENDA IS 'Indica o preço de tabela do serviço.';
COMMENT ON COLUMN AJEL.PCPRODUT.DTULTALTERSRVPRC IS 'Indica a data da ultima alteração nesta tabela.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_UMIDADE IS 'Indica se exibe umidade do produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_COL95 IS 'Indica se exibe col 95º.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_SALMONELA IS 'Indica se exibe salmonela.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_BOLORESLEVEDURAS IS 'Indica se exibe bolores e leveduras.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_ESTFAUREAUS IS 'Indica se exibe estafilococos aureas.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_MOFADO IS 'Indica se exibe mofado.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_TOTDEFEITO IS 'Indica se exibe total de defeitos.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_VLCALORICO IS 'Indica se exibe valor calorico.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_PROTEINA IS 'Indica se exibe proteina.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_LIPIDEO IS 'Indica se exibe lipídeos.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_VOLPESMED IS 'Indica se exibe volume e peso médio.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_ANALISEDESC IS 'Indica se exibe descrição da análise.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_UNIFORMIDADE IS 'Indica se exibe uniformidades.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_DISSOLUCAO IS 'Indica se exibe dissolução.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_DESINTEGRACAO IS 'Indica se exibe desintegração.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_FRIABILIDADE IS 'Indica se exibe friabilidade.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_IDENTIFICACAO IS 'Indica se exibe identificação.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_PESQPATOGENOS IS 'Indica se exibe pesquisa de patogenos.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_CONTMICROBIANA IS 'Indica se exibe contaminação microbiana.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_DENSIDADE IS 'Indica se exibe densidade.';
COMMENT ON COLUMN AJEL.PCPRODUT.EX_PH IS 'Indica se exibe PH.';
COMMENT ON COLUMN AJEL.PCPRODUT.UNDPOREMBALAGEM IS 'Indica a unidades por embalagem.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCICMSDIFERIDO IS 'Indica o percentual do ICMS diferido.';
COMMENT ON COLUMN AJEL.PCPRODUT.NUMDIASVALIDADEMIN IS 'Numero de dias mínimo de validade.';
COMMENT ON COLUMN AJEL.PCPRODUT.PRECIFICESTRANGEIRA IS 'Verifica se a precificação é feita em moeda estrangeira ou não.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCSEGURO IS 'Indica o percentual de seguro.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCDESPDENTRONF IS 'Indica o percentual outras despesa na NF.';
COMMENT ON COLUMN AJEL.PCPRODUT.QTDMAXSEPARARPEDIDO IS 'Indica a quantidade máxima para separação por pedido.';
COMMENT ON COLUMN AJEL.PCPRODUT.FUNDAPIANO IS 'Produto pertencente ao FUNDAP, legislação do Espirito Santos, para impressão de livros fiscais.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCDESCICMSDIF IS 'Percentual do desconto de ICMS Difererido.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODPRODDNF IS 'Código do produto para geração DNF.';
COMMENT ON COLUMN AJEL.PCPRODUT.CAPVOLDNF IS 'Capacidade volumétrica para geração DNF.';
COMMENT ON COLUMN AJEL.PCPRODUT.FATORCONVDNF IS 'Fator de conversão a aplicar sobre a unidade de venda para geração DNF.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCALIQEXTGUIA IS 'Percentual da alíquota externa para calculo do ST Guia.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODPRODRELEV IS 'Código do produto relevante.';
COMMENT ON COLUMN AJEL.PCPRODUT.DTALTCUSTOFORNEC IS 'Data alteração custo fornecedor.';
COMMENT ON COLUMN AJEL.PCPRODUT.CONTROLAPATRIMONIO IS 'Verifica-se se o produto terá controle ou não de numeração de patrimônio.';
COMMENT ON COLUMN AJEL.PCPRODUT.BASEPISCOFINSLITRAGEM IS 'Base PIS/COFINS litragem.';
COMMENT ON COLUMN AJEL.PCPRODUT.VALORPISLITRAGEM IS 'Valor PIS/COFINS litragem.';
COMMENT ON COLUMN AJEL.PCPRODUT.VALORCOFINSLITRAGEM IS 'Valor PIS/COFINS litragem.';
COMMENT ON COLUMN AJEL.PCPRODUT.PISRETIDO IS 'Percentual de PIS retido venda.';
COMMENT ON COLUMN AJEL.PCPRODUT.COFINSRETIDO IS 'Percentual de COFINS retido venda.';
COMMENT ON COLUMN AJEL.PCPRODUT.IRRETIDO IS 'Percentual de IR retido venda.';
COMMENT ON COLUMN AJEL.PCPRODUT.CSLLRETIDO IS 'Percentual de CSLL retido venda.';
COMMENT ON COLUMN AJEL.PCPRODUT.EXTIPI IS 'Exc eção da TIPI para gravação do arquivo XML NFe.';
COMMENT ON COLUMN AJEL.PCPRODUT.ANVISA IS 'Código do produto na Anvisa.';
COMMENT ON COLUMN AJEL.PCPRODUT.SIMPRO IS 'Código do produto no Simpro.';
COMMENT ON COLUMN AJEL.PCPRODUT.VLRAPLICINT IS 'Valor interno para Integração APLIC.';
COMMENT ON COLUMN AJEL.PCPRODUT.SUBSTANCIA IS 'Gravar a substancia do produto para obter um controle especial';
COMMENT ON COLUMN AJEL.PCPRODUT.CODEXCECAOPISCOFINS IS 'Código da exceção PIS/COFINS';
COMMENT ON COLUMN AJEL.PCPRODUT.NOMEECOMMERCE IS 'Nome do produto para e-commerce';
COMMENT ON COLUMN AJEL.PCPRODUT.TITULOECOMMERCE IS 'Título do produto para e-commerce';
COMMENT ON COLUMN AJEL.PCPRODUT.SUBTITULOECOMMERCE IS 'Subtitulo do produto para e-commerce';
COMMENT ON COLUMN AJEL.PCPRODUT.DIRETORIOFOTOS IS 'Diretório de imagens para e-commerce';
COMMENT ON COLUMN AJEL.PCPRODUT.DTEXPORTACAOWMS IS 'Data  e hora de exportação';
COMMENT ON COLUMN AJEL.PCPRODUT.DTIMPORTACAOWMS IS 'Data  e hora de importação';
COMMENT ON COLUMN AJEL.PCPRODUT.CODNCMEX IS 'Código de exceção de NCM';
COMMENT ON COLUMN AJEL.PCPRODUT.CODLINHANESTLE IS 'Código da Linha Nestlé';
COMMENT ON COLUMN AJEL.PCPRODUT.GTINCODAUXILIAR IS 'Apresenta o padrão de código de barras GTIN';
COMMENT ON COLUMN AJEL.PCPRODUT.GTINCODAUXILIAR2 IS 'Apresenta o padrão de código de barras GTIN';
COMMENT ON COLUMN AJEL.PCPRODUT.CODSITTRIBPISCOFINSDEV IS 'Código Situação Tributaria PIS/COFINS devolução';
COMMENT ON COLUMN AJEL.PCPRODUT.SITTRIBUTENT IS 'Código situação tributaria entrada';
COMMENT ON COLUMN AJEL.PCPRODUT.SITTRIBUTDEV IS 'Código situação tributaria devolucao';
COMMENT ON COLUMN AJEL.PCPRODUT.GERAICMSLIVROFISCALDEVFORNEC IS 'Gerar icms livro fiscal na devolução fornecedor';
COMMENT ON COLUMN AJEL.PCPRODUT.CODFISCALENTTV9 IS 'Apresenta o Código fiscal de entrada TV9';
COMMENT ON COLUMN AJEL.PCPRODUT.LITRAGEM IS 'APRESENTA A LITRAGEM DO PRODUTO';
COMMENT ON COLUMN AJEL.PCPRODUT.SUGVENDA IS 'Sugerir preço venda baseado';
COMMENT ON COLUMN AJEL.PCPRODUT.VLPAUTAPISCOFINS IS 'Valor pauta PIS/COFINS';
COMMENT ON COLUMN AJEL.PCPRODUT.USAPISCOFINSLIT IS 'Usa PIS/COFINS por litragem';
COMMENT ON COLUMN AJEL.PCPRODUT.BASEPISCOFINSLIT IS 'Base PIS/COFINS por litragem';
COMMENT ON COLUMN AJEL.PCPRODUT.VLPISLIT IS 'Valor PIS por litragem';
COMMENT ON COLUMN AJEL.PCPRODUT.VLCOFINSLIT IS 'Valor COFINS por litragem';
COMMENT ON COLUMN AJEL.PCPRODUT.VLPAUTAPISCOFINSIMP IS 'Valor pauta PIS/COFINS';
COMMENT ON COLUMN AJEL.PCPRODUT.USAPISCOFINSLITIMP IS 'Usa PIS/COFINS por litragem';
COMMENT ON COLUMN AJEL.PCPRODUT.BASEPISCOFINSLITIMP IS 'Base PIS/COFINS por litragem';
COMMENT ON COLUMN AJEL.PCPRODUT.VLPISLITIMP IS 'Valor PIS por litragem';
COMMENT ON COLUMN AJEL.PCPRODUT.VLCOFINSLITIMP IS 'Valor COFINS por litragem';
COMMENT ON COLUMN AJEL.PCPRODUT.CODSITTRIBPISCOFINS IS 'Indica o Código da Situação Tributária Referente ao PIS/COFINS';
COMMENT ON COLUMN AJEL.PCPRODUT.ROTINALANC IS 'ROTINA QUE GRAVOU A INFORMACAO';
COMMENT ON COLUMN AJEL.PCPRODUT.VLFRETEPORKG IS 'Valor de frete FOB por kg';
COMMENT ON COLUMN AJEL.PCPRODUT.CODTRIBPISCOFINS IS 'Código da figura tributária para cálculo do PIS/COFINS';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCMVAORIG IS 'Percentual de MVA Original para cálculo do MVA ajustado';
COMMENT ON COLUMN AJEL.PCPRODUT.ASSINATURA IS 'Código MD-5';
COMMENT ON COLUMN AJEL.PCPRODUT.APLICREDBASEIVAPLIQ IS 'Aplicar redução base IVA preço liquido';
COMMENT ON COLUMN AJEL.PCPRODUT.APLICREDBASEIVAPLIQBCR IS 'Aplicar redução base IVA preço liquido BCR';
COMMENT ON COLUMN AJEL.PCPRODUT.DTINICONTLOTE IS 'Data de início do controle de validade por lote.';
COMMENT ON COLUMN AJEL.PCPRODUT.CLASSEFLOW IS 'Contempla Fluxo de Produtos';
COMMENT ON COLUMN AJEL.PCPRODUT.CONCENTRACAO IS 'Concentração do Produto';
COMMENT ON COLUMN AJEL.PCPRODUT.VLIPI IS 'Valor do IPI';
COMMENT ON COLUMN AJEL.PCPRODUT.SITTRIBUTDEVFORNEC IS 'SITUAÇÃO TRIBUTARIA DEVOLUÇÃO FORNECEDOR';
COMMENT ON COLUMN AJEL.PCPRODUT.CODFISCALDEVFORNEC IS 'CFOP DEVOLUÇÃO FORNECEDOR';
COMMENT ON COLUMN AJEL.PCPRODUT.PRAZOMAXVENDA IS 'PRAZO MÁXIMO VENDA';
COMMENT ON COLUMN AJEL.PCPRODUT.CATERGORIA IS 'Categoria de Produtos.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODLINHA IS 'Código da linha de produção.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCQUEBRAPRODUCAO IS 'Percentual de quebra permitido.';
COMMENT ON COLUMN AJEL.PCPRODUT.PERMITEPRODUCAO IS 'Permite programar produção.';
COMMENT ON COLUMN AJEL.PCPRODUT.LINHAPROD IS 'Código da Linha de Produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.QTPRODUZIR IS 'Quantidade a produzir.';
COMMENT ON COLUMN AJEL.PCPRODUT.APLICPERCIVAPAUTA IS 'Aplica %IVA sobre a Pauta ST..';
COMMENT ON COLUMN AJEL.PCPRODUT.INVENTARIOPARCIAL IS 'Indica se faz parte de inventário parcial.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODTABLIT IS 'Código da Tabela de Litragem';
COMMENT ON COLUMN AJEL.PCPRODUT.CODGRULIT IS 'Código do Grupo de Litragem';
COMMENT ON COLUMN AJEL.PCPRODUT.IPIPORVALOR IS 'Define se o produto utiliza IPI com valor fixo';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCCARGATRIBMEDIA IS 'Percentual de carga tributária média, utilizado no SEFAZ MT para calculo da substituição tributária';
COMMENT ON COLUMN AJEL.PCPRODUT.CODLINHAPRAZO IS 'Campo numérico para o usuario informar o Codigo da linha de prazo';
COMMENT ON COLUMN AJEL.PCPRODUT.VLPAUTAICMSANTEC IS 'Valor de pauta de ICMS Antecipado';
COMMENT ON COLUMN AJEL.PCPRODUT.ATUPESOMASTERENT IS 'Campo para verificar se na entrada do produto tem que validar o peso master';
COMMENT ON COLUMN AJEL.PCPRODUT.NUMCASASDECREDUCAOICMS IS 'Permitir que o usuário defina a quantidade de casas decimais que devem ser consideradas durante o cálculo de redução de ICMS';
COMMENT ON COLUMN AJEL.PCPRODUT.CODDEPTOWEB IS 'Codigo do Departamento na WEB';
COMMENT ON COLUMN AJEL.PCPRODUT.CODSECAOWEB IS 'Codigo da Seção na WEB';
COMMENT ON COLUMN AJEL.PCPRODUT.CODCATEGORIAWEB IS 'Codigo da Categoria na WEB';
COMMENT ON COLUMN AJEL.PCPRODUT.CODSUBCATEGORIAWEB IS 'Codigo da SubCategoria na WEB';
COMMENT ON COLUMN AJEL.PCPRODUT.CUSTOREPTABANT IS 'Gravar o valor do preço fabrica anterior.';
COMMENT ON COLUMN AJEL.PCPRODUT.CUSTOREPZFMANT IS 'Gravar o valor do preço Fabrica ZF manaus anterior';
COMMENT ON COLUMN AJEL.PCPRODUT.PRECOMAXCONSUMTABANT IS 'Gravar o valor do preço Maximo cosumidor anterior';
COMMENT ON COLUMN AJEL.PCPRODUT.PRECOMAXCONSUMZFMANT IS 'Gravar o valor do preço maximo cosumidor ZF manaus anterior';
COMMENT ON COLUMN AJEL.PCPRODUT.OSCOMODATO IS 'Campo para definir se o serviço é de comodato.';
COMMENT ON COLUMN AJEL.PCPRODUT.OBRIGAPREENCCONTRATO IS 'Campo para definir se para esse serviço será obrigatório informar o numero do contrato de comodato na criação da OS.';
COMMENT ON COLUMN AJEL.PCPRODUT.GERAOSAUTOMATIC IS 'Campo para definir que ao fechar a Ordem de serviço o sistema deve gerar outra ordem de serviço automaticamente.';
COMMENT ON COLUMN AJEL.PCPRODUT.NUMSERVICO IS 'Campo para definir qual o serviço que deve contar na OS gerada automaticamente.';
COMMENT ON COLUMN AJEL.PCPRODUT.RESTRINGECOTACAO IS 'APRESENTA SE O PRODUTO DEVE SER RESTRITO PARA COTAÇÃO';
COMMENT ON COLUMN AJEL.PCPRODUT.TIPOMEDICAMENTO IS 'Descrição do tipo de medicamento.';
COMMENT ON COLUMN AJEL.PCPRODUT.GRUPOFATURAMENTO IS 'GRUPO DE FATURAMENTO DO PRODUTO. UTILIZADO PARA EMPRESAS DO RAMO DE MEDICAMENTO.';
COMMENT ON COLUMN AJEL.PCPRODUT.USAPMCBASEST IS 'Usa PMC base ST';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCREDPMC IS 'Perc.redução PMC';
COMMENT ON COLUMN AJEL.PCPRODUT.VLIPISUSPENSO IS 'Valor do IPI suspenso';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCIPISUSPENSO IS 'Percentual do IPI suspenso';
COMMENT ON COLUMN AJEL.PCPRODUT.MYFROTA IS 'Enviar para o myFrota';
COMMENT ON COLUMN AJEL.PCPRODUT.CODSITTRIBST IS 'GRAVAR O CÓDIGO DA SITUAÇÃO TRIBUTÁRIA ST';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCICMSBASEICMSANTECIPADO IS 'Aliq. Para base do ICMS antecipado';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCDESC1TAB IS 'Percentual de desconto comercial 1 futuro';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCDESC2TAB IS 'Percentual de desconto comercial 1 futuro';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCDESC3TAB IS 'Percentual de desconto comercial 1 futuro';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCDESC4TAB IS 'Percentual de desconto comercial 1 futuro';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCDESC5TAB IS 'Percentual de desconto comercial 1 futuro';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCDESC6TAB IS 'Percentual de desconto comercial 1 futuro';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCDESC7TAB IS 'Percentual de desconto comercial 1 futuro';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCDESC8TAB IS 'Percentual de desconto comercial 1 futuro';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCDESC9TAB IS 'Percentual de desconto comercial 1 futuro';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCDESC10TAB IS 'Percentual de desconto comercial 1 futuro';
COMMENT ON COLUMN AJEL.PCPRODUT.DTVIGENCIAPOLITICA IS 'Data de virgência da política comercial';
COMMENT ON COLUMN AJEL.PCPRODUT.GERABASEPISCOFINSSEMALIQ IS 'Defina se deve gerar base de PIS/CONFINS mesmo quando não for informado aliquotas de PIS/CONFINS';
COMMENT ON COLUMN AJEL.PCPRODUT.USALICENCAIMPORTACAO IS 'Utiliza licença de importação';
COMMENT ON COLUMN AJEL.PCPRODUT.MULTIPLOCOMPRAS IS 'Quantidade múltipla de compras do produto';
COMMENT ON COLUMN AJEL.PCPRODUT.CALCCREDIPICONT IS 'Calcula crédito IPI custo contabil na importação';
COMMENT ON COLUMN AJEL.PCPRODUT.APROVEITACREDICMSCONT IS 'Aproveita crédito ICMS custo contabil na importação';
COMMENT ON COLUMN AJEL.PCPRODUT.APROVEITACREDPISCOFINSCONT IS 'Aproveita crédito PIS/COFINS custo contabil na importação';
COMMENT ON COLUMN AJEL.PCPRODUT.ENVIASNGPC IS 'Envia SNGPC [S-Sim;N-Não]';
COMMENT ON COLUMN AJEL.PCPRODUT.REGISTROMSMED IS 'Numero Registro MS';
COMMENT ON COLUMN AJEL.PCPRODUT.QTMINSUGCOMPRA IS 'Qtde Mínima para compra';
COMMENT ON COLUMN AJEL.PCPRODUT.ENVIAINFTECNICANFE IS 'Informações Técnicas';
COMMENT ON COLUMN AJEL.PCPRODUT.CONTROLADOIBAMA IS 'Controlado pelo IBAMA';
COMMENT ON COLUMN AJEL.PCPRODUT.CESTABASICALEGIS IS 'Cesta Básica - Legislação';
COMMENT ON COLUMN AJEL.PCPRODUT.CODUSUULTALTCOM IS 'Ultimo usuario altera politica comercial';
COMMENT ON COLUMN AJEL.PCPRODUT.UTILIZASELO IS 'Identifica se o produto utiliza controle de selo IPI';
COMMENT ON COLUMN AJEL.PCPRODUT.SITTRIBUT_SERVICO IS 'Referente ao CST de saída de Serviço cadastrado';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCOFINS_SERVICO IS 'Referente ao %COFINS de Serviço cadastrado';
COMMENT ON COLUMN AJEL.PCPRODUT.PERPIS_SERVICO IS 'Referente ao %PIS de Serviço cadastrado';
COMMENT ON COLUMN AJEL.PCPRODUT.FATORCONVTRIB IS 'Fator Conversão NF-e';
COMMENT ON COLUMN AJEL.PCPRODUT.UNIDADETRIB IS 'Unidade Tributável';
COMMENT ON COLUMN AJEL.PCPRODUT.STATUSSUCATA IS 'Define se o produto deve: devolver, não devolver ou calcular a sucata.';
COMMENT ON COLUMN AJEL.PCPRODUT.RETINOICO IS 'Campo que define se o produto será do tipo retinoico sim ou não.';
COMMENT ON COLUMN AJEL.PCPRODUT.IDINTEGRACAOMYFROTA IS 'Identifica a integração com My Frota.';
COMMENT ON COLUMN AJEL.PCPRODUT.DTULTATUPCOMPRA IS 'Data da última atualização do preço de compra';
COMMENT ON COLUMN AJEL.PCPRODUT.ANP IS 'Código ANP utilizado em combustiveis.';
COMMENT ON COLUMN AJEL.PCPRODUT.CONSIISUSPENSOBASEICMS IS 'Considera II Suspenso base ICMS.';
COMMENT ON COLUMN AJEL.PCPRODUT.CONSIPISUSPENSOBASEICMS IS 'Considera IPI Suspenso base ICMS.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODUSUULTALTCOMTAB IS 'Código do último usuário que fez ateração comercial no produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODROTINAULTALTCOM IS 'Código da última rotina que fez ateração comercial no produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODROTINAULTALTCOMTAB IS 'código da última rotina que fez ateração comercial no produto tab.';
COMMENT ON COLUMN AJEL.PCPRODUT.COMISSAOSERVICOPRESTADO IS 'Comissão serviço prestado.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODFISCALCOCOMPRA IS 'CFOP Compra e Ordem - Compra';
COMMENT ON COLUMN AJEL.PCPRODUT.CODFISCALCOREMESSA IS 'CFOP Compra e Ordem - Remessa';
COMMENT ON COLUMN AJEL.PCPRODUT.CODPRODFORNEC IS 'Código do Produto do Fornecedor';
COMMENT ON COLUMN AJEL.PCPRODUT.PRECIFICACAOAUTOMATICA IS 'Informar se o produto poder ser precificado automáticamente';
COMMENT ON COLUMN AJEL.PCPRODUT.CODTIPOUSOMED IS 'CÓDIGO DO TIPO USO MÉDICO.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODTIPORECEIT IS 'CÓDIGO DO TIPO USO RECEITUÁRIO.';
COMMENT ON COLUMN AJEL.PCPRODUT.CUSTOFORNECSEMST IS 'Valor do Custo Fornecedor sem ST.';
COMMENT ON COLUMN AJEL.PCPRODUT.CUSTOPROXIMACOMPRASEMST IS 'Valor do Custo da próxima compra sem ST.';
COMMENT ON COLUMN AJEL.PCPRODUT.TIPOCUSTOTRANSF IS 'Tipo de Custo de Transferência de Venda';
COMMENT ON COLUMN AJEL.PCPRODUT.CODCLASSETERAPEUTSNGPC IS 'Código da classe terapêutica na ANVISA';
COMMENT ON COLUMN AJEL.PCPRODUT.USOPROLONGADOSNGPC IS '"""Uso Prolongado na ANVISA	"""';
COMMENT ON COLUMN AJEL.PCPRODUT.CODSUBMARCA IS 'Submarca do Produto';
COMMENT ON COLUMN AJEL.PCPRODUT.ALTURA IS 'Altura do Produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.ALTURATOTAL IS 'Altura Total do Produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.IECTEREF IS 'Inscrição estadual do cte referenciado';
COMMENT ON COLUMN AJEL.PCPRODUT.DIAMETROINTERNO IS 'Diâmetro interno do produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.DIAMETROEXTERNO IS 'Diâmetro externo do produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.DIASCONSECENT IS 'Dias úteis consecutivos para entrega';
COMMENT ON COLUMN AJEL.PCPRODUT.NUMEROSSERIECONTROLADOS IS 'Quantidade de Número de serie vinculados';
COMMENT ON COLUMN AJEL.PCPRODUT.VALORTARAPORPECA IS 'Valor TARA Por Peça';
COMMENT ON COLUMN AJEL.PCPRODUT.TARAPORPECA IS 'TARA do Produto Por Peça';
COMMENT ON COLUMN AJEL.PCPRODUT.FARMACIAPOPULAR IS 'Produto da Farmácia Popular';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCPRODEIC IS 'Percentual benefício PRODEIC utilizado no relatório do PRODEIC da rotina 1031';
COMMENT ON COLUMN AJEL.PCPRODUT.CODPRODANTUTICAD IS 'Código produto antes utilizar cadastro produto Winthor';
COMMENT ON COLUMN AJEL.PCPRODUT.DTINICODPRODANTUTICAD IS 'Data início código produto antes utilizar cadastro produto Winthor';
COMMENT ON COLUMN AJEL.PCPRODUT.DTPRIMOVNOVCODPROD IS 'Data primeira Movimentação novo código produto Winthor';
COMMENT ON COLUMN AJEL.PCPRODUT.NUMREGAGRMAP IS 'Número Registro Agrotóxico MAPA';
COMMENT ON COLUMN AJEL.PCPRODUT.IDEMBALAGEM IS 'Código Identificação Embalagem';
COMMENT ON COLUMN AJEL.PCPRODUT.TAMANHOPECA IS 'Tamanho da peça na bitola pra pesquisa na 316';
COMMENT ON COLUMN AJEL.PCPRODUT.PESOMINIMO IS 'Peso mínimo';
COMMENT ON COLUMN AJEL.PCPRODUT.PESOMAXIMO IS 'Peso máximo';
COMMENT ON COLUMN AJEL.PCPRODUT.DTFINUTICODPRODANTUTICAD IS 'Data final utilização código produto antes utilizar cadastro produto Winthor';
COMMENT ON COLUMN AJEL.PCPRODUT.DSCPRODANTUTICAD IS 'Descrição produto antes utilizar cadastro produto Winthor';
COMMENT ON COLUMN AJEL.PCPRODUT.INDUZLOTE IS 'Induzir Lotes';
COMMENT ON COLUMN AJEL.PCPRODUT.CODFISCALDEVOPLOG IS 'Código Fiscal Devolução Transf. Operador Logístico';
COMMENT ON COLUMN AJEL.PCPRODUT.CODFISCALENTOPLOG IS 'Código Fiscal Entrada Transf. Operador Logístico';
COMMENT ON COLUMN AJEL.PCPRODUT.IDDESTAQUE IS 'Código do cadastro de Destaques importação rotina 3006.';
COMMENT ON COLUMN AJEL.PCPRODUT.TIPOEMBARQUEIMP IS 'Tipo de embarque para importação';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCBONIFIC IS '% Bonificação Dinheiro';
COMMENT ON COLUMN AJEL.PCPRODUT.VERBADINPORPERC IS 'Calcular verba dinheiro por percentual';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCBONTAB IS '% Bonificação Mercadoria Futuro';
COMMENT ON COLUMN AJEL.PCPRODUT.VLBONIFICTAB IS 'Valor Bonificação em Dinheiro Futuro';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCBONIFICTAB IS '% Bonificação Dinheiro Futuro';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCBONOUTRASTAB IS '% Bonificação Outras Verbas Futuro';
COMMENT ON COLUMN AJEL.PCPRODUT.VLADICIONALBCICMSANTECIP IS 'Valor adicional base Icms Antecipado';
COMMENT ON COLUMN AJEL.PCPRODUT.APLICPERCIVAPAUTAICMSANTECIP IS 'Aplica IVA sobre valor de pauta ICMS antecipado';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCICMSFRETEFOBICMSANTECIP IS '% ICMS Frete FOB p/ calc.Icms Antecipado';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCMVAORIGICMSANTECIP IS '% IVA Original ICMS Antecipado';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCCARGATRIBMEDIAICMSANTECIP IS '% Carga Média tributária Icms Antecipado';
COMMENT ON COLUMN AJEL.PCPRODUT.REDBASEIVAICMSANTECIP IS '% Redução IVA Icms Antecipado';
COMMENT ON COLUMN AJEL.PCPRODUT.REDBASEALIQEXTICMSANTECIP IS '% Redução Aliquota externa ICMS Antecipado.';
COMMENT ON COLUMN AJEL.PCPRODUT.CONSIDERARICMSANTECIPCUSTOCONT IS 'Considerar ICMS Antecipado no Custo Contabil';
COMMENT ON COLUMN AJEL.PCPRODUT.FORMAESTERILIZACAO IS 'Forma de Esterilização';
COMMENT ON COLUMN AJEL.PCPRODUT.APLICAPERCREDALIQIPI IS 'Define se haverá redução da Alíquota de IPI';
COMMENT ON COLUMN AJEL.PCPRODUT.GTINCODAUXILIARTRIB IS 'GTIN Unid. Venda Tributável';
COMMENT ON COLUMN AJEL.PCPRODUT.CODAUXILIARTRIB IS 'Unidade Venda Tributável [EAN8, UPC12, EAN13, e DUN14]';
COMMENT ON COLUMN AJEL.PCPRODUT.VERIFCRAMOATIVCALCST IS 'Verificar ramo de atividade para cálculo do ST';
COMMENT ON COLUMN AJEL.PCPRODUT.LINKFABRICANTE IS 'Link do site do fabricante para visualizar informações do produto';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCENTUALCPRB IS 'Percentual de CPRB para o serviço';
COMMENT ON COLUMN AJEL.PCPRODUT.CODIGOCNAE IS 'Código CNAE referente ao serviço';
COMMENT ON COLUMN AJEL.PCPRODUT.TEMPOSERVICO IS 'Tempo de serviço para execução do serviço';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCENTUALINCIDENCIA IS 'Percentual de incidência para execução do serviço';
COMMENT ON COLUMN AJEL.PCPRODUT.TIPOSERVICOVINCULADORECEITA IS 'Tipo de serviço vinculado a receita';
COMMENT ON COLUMN AJEL.PCPRODUT.INCIDENCIACPRB IS 'Qual deve ser a incidencia do CPRB sobre o servico';
COMMENT ON COLUMN AJEL.PCPRODUT.CFOPORIG IS 'Cód. Fiscal original da nota';
COMMENT ON COLUMN AJEL.PCPRODUT.MODBCST IS 'Modalidade da base st nota fiscal';
COMMENT ON COLUMN AJEL.PCPRODUT.MODBCSTGUIA IS 'Modalidade da base st guia';
COMMENT ON COLUMN AJEL.PCPRODUT.VLFRETE IS 'Valor Frete';
COMMENT ON COLUMN AJEL.PCPRODUT.ANTIDUMPING IS 'Este campo é usado pela rotina 3010 para tratar o rateio do antidumping';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCIISUSPENSO IS 'Percentual II Suspenso';
COMMENT ON COLUMN AJEL.PCPRODUT.PERPISCALCDI IS 'Percentual PIS Suspenso';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCOFINSCALCDI IS 'Percentual CODFINS Suspenso';
COMMENT ON COLUMN AJEL.PCPRODUT.ESTOQUEPORDTVALIDADE IS 'Controle de estoque por data de validade';
COMMENT ON COLUMN AJEL.PCPRODUT.PESOLIQDI IS 'Peso líquido DI(Kg)';
COMMENT ON COLUMN AJEL.PCPRODUT.IDINTEGRACAOCIASHOP IS 'Referência do produto no E-commerce CiaShop';
COMMENT ON COLUMN AJEL.PCPRODUT.COMISSAOSERVICOFUNCIONARIO IS 'Valor comissão do funcionário';
COMMENT ON COLUMN AJEL.PCPRODUT.REGISTROPECA IS 'Refere-se ao registro da peça, realizado no cadastro de peças';
COMMENT ON COLUMN AJEL.PCPRODUT.GERAICMSLIVROFISCALENT IS 'Gera ICMS no Livro fiscal';
COMMENT ON COLUMN AJEL.PCPRODUT.UTILIZACREDREDPISCOFINS IS 'Utiliza aliq. PIS/COFINS Suspenso';
COMMENT ON COLUMN AJEL.PCPRODUT.ENVIAECOMMERCE IS 'Identifica se o produto será enviado ao e-commerce';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCFUNCEP IS 'Percentual de FUNCEP';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCFECP IS 'Percentual de FECP';
COMMENT ON COLUMN AJEL.PCPRODUT.ENDERECAMENTOCUBAGEM IS 'Endereçamento por cubagem';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCCSLL IS 'Percentual do CSLL';
COMMENT ON COLUMN AJEL.PCPRODUT.VLIPIPAUTATV10 IS 'Valor do IPI pauta para transferencias';
COMMENT ON COLUMN AJEL.PCPRODUT.VLIPIPAUTATV10TAB IS 'Valor do IPI pauta para transferencias';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCENTUALISS IS 'Indica o percentual de ISS para serviços';
COMMENT ON COLUMN AJEL.PCPRODUT.EMBVENDAECOMMERCEUNILEVER IS 'Tipo da embalagem de venda no e-commerce da Unilever';
COMMENT ON COLUMN AJEL.PCPRODUT.UTILIZAPRECOFABRICA IS 'Utiliza Preço Fabrica';
COMMENT ON COLUMN AJEL.PCPRODUT.UNIDADETRIBEX IS 'Unidade tributavel do exterior a ser utilizda na NF-e';
COMMENT ON COLUMN AJEL.PCPRODUT.FATORCONVTRIBEX IS 'Fator de conversão do exterior a ser utilizado na NF-e';
COMMENT ON COLUMN AJEL.PCPRODUT.DESCANP IS 'Descrição do produto conforme ANP';
COMMENT ON COLUMN AJEL.PCPRODUT.CODAGREGACAO IS 'Código de agregação';
COMMENT ON COLUMN AJEL.PCPRODUT.USACODAGREGACAO IS 'Utiliza o código de agregação';
COMMENT ON COLUMN AJEL.PCPRODUT.PESOBRUTOFRETE IS 'Peso bruto do frete FOB.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODFISCALREMENTFUT IS 'Cod.Fiscal Remessa Entrega Futura';
COMMENT ON COLUMN AJEL.PCPRODUT.CODFISCALENTENTFUT IS 'Cod.Fiscal Entrada Entrega futura';
COMMENT ON COLUMN AJEL.PCPRODUT.SITTRIBUTENTFUT IS 'Sit.Tribut. Entrega Futura';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCIVA2 IS 'Alíquota de ST Outorgado';
COMMENT ON COLUMN AJEL.PCPRODUT.CODFISCALBENEFICSAIDA IS 'CFOP saída para beneficiamento';
COMMENT ON COLUMN AJEL.PCPRODUT.CODFISCALBENEFICRETORNO IS 'CFOP remessa de retorno da materia prima';
COMMENT ON COLUMN AJEL.PCPRODUT.CODFISCALBENEFICENTRADA IS 'CFOP entrada de produto acabado';
COMMENT ON COLUMN AJEL.PCPRODUT.SITTRIBUTBENEFICSAIDA IS 'SITTRIBUT saída para beneficiamento';
COMMENT ON COLUMN AJEL.PCPRODUT.SITTRIBUTBENEFICRETORNO IS 'SITTRIBUT remessa de retorno da materia prima';
COMMENT ON COLUMN AJEL.PCPRODUT.SITTRIBUTBENEFICENTRADA IS 'SITTRIBUT entrada de produto acabado';
COMMENT ON COLUMN AJEL.PCPRODUT.ACEITATROCAINSERVIVEL IS 'Identifica se produto aceita ou não troca de inservível';
COMMENT ON COLUMN AJEL.PCPRODUT.CODINSERVIVEL IS 'Código de identificação de inservível';
COMMENT ON COLUMN AJEL.PCPRODUT.CARCACABATERIA IS 'Identifica se o produto é ou não carcaça de bateria';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCICMSDESONERACAO IS 'Percentual de ICMS Desoneração';
COMMENT ON COLUMN AJEL.PCPRODUT.ISENTOTCIF IS 'Isento do pagamento da TCIF?';
COMMENT ON COLUMN AJEL.PCPRODUT.BLOQUEIOACORDOPARCERIA IS 'Bloquear no Acordo de Parceria';
COMMENT ON COLUMN AJEL.PCPRODUT.PERACRESCIMOIPI IS 'PERCENTUAL DE ACRÉSCIMO NO VALOR DO IPI';
COMMENT ON COLUMN AJEL.PCPRODUT.ISENTOSTCOZINHAINDUSTRIAL IS 'Define se o produto é isento de ST para clientes cozinha industrial';
COMMENT ON COLUMN AJEL.PCPRODUT.CODPRINCIPATIVO2 IS 'Indica o princípio ativo secundário do produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.UTILIZAMULTIPLICADOR IS 'Utiliza multiplicador na conferência';
COMMENT ON COLUMN AJEL.PCPRODUT.PGLP IS 'Percentual do GLP derivado de petroleo.';
COMMENT ON COLUMN AJEL.PCPRODUT.PGNN IS 'Percentual do GLP derivado de petroleo.';
COMMENT ON COLUMN AJEL.PCPRODUT.PGNI IS 'Percentual do GLP derivado de petroleo.';
COMMENT ON COLUMN AJEL.PCPRODUT.VPART IS 'Deve ser informado neste campo o valor por quilograma sem ICMS.';
COMMENT ON COLUMN AJEL.PCPRODUT.FATORCONVERSAOBIONEXO IS 'Fator Conversão Bionexo';
COMMENT ON COLUMN AJEL.PCPRODUT.PGLI IS 'Percentual do GLP derivado do petróleo no produto GLP';
COMMENT ON COLUMN AJEL.PCPRODUT.PGLN IS 'Percentual de Gás Natural Nacional ¿ GLGNn para o produto GLP';
COMMENT ON COLUMN AJEL.PCPRODUT.USAMAIORVALORPARACALCULOICMS IS 'Usa maior valor para calculo do ICMS (Pauta de ICMS e preço de compra)';
COMMENT ON COLUMN AJEL.PCPRODUT.USABASESTNOFCP IS 'Base FCP ST - Considera base do ST';
COMMENT ON COLUMN AJEL.PCPRODUT.UNIDADEPADRAO IS 'Unidade Padrão de venda';
COMMENT ON COLUMN AJEL.PCPRODUT.DESCRICAODINAMICA IS 'DESCRIÇÃO DINÂMICA PARA PESQUISA DO PRODUTO';
COMMENT ON COLUMN AJEL.PCPRODUT.GRAMATURALICIT IS 'Gramatura do item do Edital';
COMMENT ON COLUMN AJEL.PCPRODUT.IDSOFITVIEW IS 'Indica o código do cliente na SofitView';
COMMENT ON COLUMN AJEL.PCPRODUT.DTULTALTERSOFITVIEW IS 'Indica a data que o cliente foi integrado com a SofitView';
COMMENT ON COLUMN AJEL.PCPRODUT.DTEXCLUSAOSOFITVIEW IS 'Indica a data que o cliente foi inativado na SofitView';
COMMENT ON COLUMN AJEL.PCPRODUT.CODMOTISENCAOANVISA IS 'Informação de código de isenção para registro da Anvisa';
COMMENT ON COLUMN AJEL.PCPRODUT.USAICMSDESONERACAO IS 'Indica se o ICMS desonerado será aproveitado na nota';
COMMENT ON COLUMN AJEL.PCPRODUT.TIPOINTEGRACAOB2B IS 'Tipo de integração com a indústria que o  produto está vinculado.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODSAZONALIDADEMED IS 'Codigo da sazonalidade do produto';
COMMENT ON COLUMN AJEL.PCPRODUT.CODADWORDS IS 'Código do AdWords';
COMMENT ON COLUMN AJEL.PCPRODUT.EXIBESEMESTOQUEECOMMERCE IS 'Campo para informar se será exibido produtos sem estoque no ecommerce, uso exclusido para operações WEB.';
COMMENT ON COLUMN AJEL.PCPRODUT.LINKID IS 'Campo para informar URLdo produto no ecommerce, uso exclusido para operações WEB.';
COMMENT ON COLUMN AJEL.PCPRODUT.CODCAMPLOMADEE IS 'Campo para vinculo do código campanha Lomadee do ecommerce com o Winthor, uso exclusido para operações WEB.';
COMMENT ON COLUMN AJEL.PCPRODUT.UTILIZAINTEGRACAOKIBON IS 'Utiliza integração Kibon DMS.';
COMMENT ON COLUMN AJEL.PCPRODUT.PREDOMINANCIA IS 'Predominância do Produto';
COMMENT ON COLUMN AJEL.PCPRODUT.NUMEROCX IS 'Indica o numero do endereço do produto.';
COMMENT ON COLUMN AJEL.PCPRODUT.USABASEREDICMSPRESUMIDO IS 'Utilizar Base Reduzida para Crédito Presumido';
COMMENT ON COLUMN AJEL.PCPRODUT.PMPFMEDICAMENTO IS 'PMPF do Medicamento';
COMMENT ON COLUMN AJEL.PCPRODUT.PRECOFABRICA IS 'Preço Fábrica do Medicamento';
COMMENT ON COLUMN AJEL.PCPRODUT.USAPMPFBASEST IS 'Usa Preço Máximo Pessoa Física como Base de ST';
COMMENT ON COLUMN AJEL.PCPRODUT.USAPFABBASEST IS 'Usa Preço de Fábrica como Base de ST';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCREDPMPF IS 'Alíquota de redução do Preço Máximo Pessoa Física';
COMMENT ON COLUMN AJEL.PCPRODUT.PERCREDPFAB IS 'Alíquota de redução do Preço de Fábrica';
COMMENT ON COLUMN AJEL.PCPRODUT.OBSCONTXCAMPO IS 'Preenchimento do grupo "obsItem", de uso livre do Contribuinte para identificação do campo';
COMMENT ON COLUMN AJEL.PCPRODUT.OBSCONTXTEXTO IS 'Preenchimento do grupo "obsItem" no XML, de uso livre do Contribuinte para conteúdo';
COMMENT ON COLUMN AJEL.PCPRODUT.OBSFISCOXCAMPO IS 'Preenchimento do grupo "obsItem" no XML, de uso livre do Fisco para identificação do campo';
COMMENT ON COLUMN AJEL.PCPRODUT.OBSFISCOXTEXTO IS 'Preenchimento do grupo "obsItem" no XML, de uso livre do Fisco para conteúdo';
COMMENT ON COLUMN AJEL.PCPRODUT.CONVENIOISENCAOICMSMED IS 'Participa do Convênio Isenção ICMS';


-- AJEL.PCFORNEC definition

CREATE TABLE "AJEL"."PCFORNEC" 
   (	"CODFORNEC" NUMBER(6,0) DEFAULT NULL NOT NULL ENABLE, 
	"FORNECEDOR" VARCHAR2(60) NOT NULL ENABLE, 
	"REPRES" VARCHAR2(40), 
	"CONTATO" VARCHAR2(40), 
	"ENDER" VARCHAR2(40), 
	"CIDADE" VARCHAR2(15), 
	"ESTADO" VARCHAR2(2), 
	"CEP" VARCHAR2(9), 
	"TELREP" VARCHAR2(20), 
	"TELFAB" VARCHAR2(20), 
	"TELEXREP" VARCHAR2(20), 
	"TELEXFAB" VARCHAR2(20), 
	"IE" VARCHAR2(15), 
	"CGC" VARCHAR2(18), 
	"FAXREP" VARCHAR2(20), 
	"FAXFAB" VARCHAR2(20), 
	"BAIRRO" VARCHAR2(20), 
	"PRAZOENTREGA" NUMBER(4,0), 
	"BLOQUEIO" VARCHAR2(1), 
	"DTBLOQUEIO" DATE, 
	"OBS" VARCHAR2(20), 
	"REVENDA" VARCHAR2(1), 
	"CODCLI" NUMBER(9,0), 
	"CODCOMPRADOR" NUMBER(8,0), 
	"REP_CONTATO" VARCHAR2(10), 
	"REP_ENDERECO" VARCHAR2(23), 
	"REP_BAIRRO" VARCHAR2(13), 
	"REP_CIDADE" VARCHAR2(15), 
	"REP_UF" VARCHAR2(2), 
	"REP_CEP" NUMBER(8,0), 
	"EXCLUIDO" VARCHAR2(1), 
	"LEDTIME" NUMBER(4,0), 
	"COBERTURA" NUMBER(4,0), 
	"REGIONAL" VARCHAR2(1), 
	"CENTRALIZACAO" VARCHAR2(1), 
	"DTCADASTRO" DATE, 
	"DTEXCLUSAO" DATE, 
	"OBS2" VARCHAR2(35), 
	"PRAZOMIN" NUMBER(4,0), 
	"DESCPAGTODUP" VARCHAR2(1), 
	"ENDERCOB" VARCHAR2(40), 
	"BAIRROCOB" VARCHAR2(40), 
	"MUNICOB" VARCHAR2(40), 
	"ESTCOB" VARCHAR2(2), 
	"CEPCOB" VARCHAR2(9), 
	"TELCOB" VARCHAR2(13), 
	"ESTRATEGICO" VARCHAR2(1), 
	"OBSERVACAO" VARCHAR2(2000), 
	"CODDEPTO" NUMBER(6,0), 
	"CODFORNECPRINC" NUMBER(6,0), 
	"CONTATOCOM" VARCHAR2(40), 
	"TELEFONECOM" VARCHAR2(20), 
	"CONTATOADM" VARCHAR2(40), 
	"TELEFONEADM" VARCHAR2(20), 
	"DIASEMANAATEND" NUMBER(2,0), 
	"PERIOCIDADEATEND" NUMBER(4,0), 
	"DTPROXATEND" DATE, 
	"CLASSEVENDA" VARCHAR2(1), 
	"CLASSEMC" VARCHAR2(1), 
	"CLASSEESTOQUE" VARCHAR2(1), 
	"CLASSECOMPRA" VARCHAR2(1), 
	"EMAIL" VARCHAR2(100), 
	"PRAZO1" NUMBER(4,0), 
	"PRAZO2" NUMBER(4,0), 
	"PRAZO3" NUMBER(4,0), 
	"PRAZO4" NUMBER(4,0), 
	"PRAZO5" NUMBER(4,0), 
	"PRAZO6" NUMBER(4,0), 
	"PERCDESPFIN" NUMBER(12,4), 
	"PERCDESCFIN" NUMBER(12,4), 
	"NUMBANCODOC" NUMBER(4,0), 
	"NUMAGENCIADOC" NUMBER(6,0), 
	"NUMCCORRENTEDOC" VARCHAR2(15), 
	"FANTASIA" VARCHAR2(60), 
	"NUMDEPIRRF" NUMBER(4,0), 
	"VALORDEDUCAOIRRF" NUMBER(14,2), 
	"RG" VARCHAR2(20), 
	"CODDISTRIB" VARCHAR2(4), 
	"VLFRETEKG" NUMBER(12,4), 
	"PERCOUTROSCUSTOSFRETE" NUMBER(5,2), 
	"DISTRIB" VARCHAR2(1) DEFAULT 'N', 
	"INSCESTRANGEIRA" NUMBER(15,0), 
	"INDUSTRIALOCAL" VARCHAR2(1), 
	"GRUPOCAMPANHA" NUMBER(6,0), 
	"PERCMAXBONIFIC" NUMBER(5,2), 
	"PERCPISRED" NUMBER(5,2), 
	"SUFRAMA" VARCHAR2(1) DEFAULT 'N', 
	"CODPRODUTORRURAL" VARCHAR2(20), 
	"DVAG" VARCHAR2(2), 
	"DVCC" VARCHAR2(2), 
	"TIPOEMBALAGEMPEDIDO" VARCHAR2(1) DEFAULT 'V', 
	"SUPERVISORVERBA" VARCHAR2(40), 
	"CONTATOVERBA" VARCHAR2(40), 
	"CPFCONTATOVERBA" VARCHAR2(18), 
	"RGCONTATOVERBA" VARCHAR2(20), 
	"REP_DTANIVERSARIO" DATE, 
	"ADM_CONTATO" VARCHAR2(40), 
	"ADM_DTANIVERSARIO" DATE, 
	"ADM_ENDERECO" VARCHAR2(40), 
	"ADM_BAIRRO" VARCHAR2(40), 
	"ADM_CIDADE" VARCHAR2(40), 
	"ADM_UF" VARCHAR2(2), 
	"ADM_CEP" NUMBER(8,0), 
	"COM_CONTATO" VARCHAR2(40), 
	"COM_DTANIVERSARIO" DATE, 
	"COM_ENDERECO" VARCHAR2(40), 
	"COM_BAIRRO" VARCHAR2(40), 
	"COM_CIDADE" VARCHAR2(40), 
	"COM_UF" VARCHAR2(2), 
	"COM_CEP" NUMBER(8,0), 
	"TRANSPORTEPROPRIO" VARCHAR2(1), 
	"VLPEDAGIO" NUMBER(12,2), 
	"PERGRIS" NUMBER(8,4), 
	"ICMSSOBRETXMINIMA" VARCHAR2(1), 
	"GATILHO" NUMBER(12,4), 
	"TIPOCALCFRETE" NUMBER(2,0), 
	"TAXA0" NUMBER(8,4), 
	"TAXA7" NUMBER(8,4), 
	"TAXA14" NUMBER(8,4), 
	"TAXA21" NUMBER(8,4), 
	"TAXA28" NUMBER(8,4), 
	"TAXA35" NUMBER(8,4), 
	"TAXA42" NUMBER(8,4), 
	"DTULTCONTATOCOB" DATE, 
	"CODFUNCULTCONTATOCOB" NUMBER(8,0), 
	"DTPROXCONTATOCOB" DATE, 
	"CODMUNICIPIO" NUMBER(10,0), 
	"COM_EMAIL" VARCHAR2(100), 
	"REP_EMAIL" VARCHAR2(100), 
	"SUP_EMAIL" VARCHAR2(100), 
	"DTVALIDADE" DATE, 
	"TIPOFORNEC" VARCHAR2(1) DEFAULT 'C', 
	"UTILIZADESCCALCIPI" VARCHAR2(1) DEFAULT 'S', 
	"UTILIZAFRETECALCIPI" VARCHAR2(1) DEFAULT 'S', 
	"VLMINPEDCOMPRA" NUMBER(10,2), 
	"SUP_CELULAR" VARCHAR2(20), 
	"COM_CELULAR" VARCHAR2(20), 
	"DEDUZIRSUFRAMACALCCREDICM" VARCHAR2(1) DEFAULT 'S', 
	"DEDUZIRSUFRAMACALCCREDPIS" VARCHAR2(1) DEFAULT 'S', 
	"UTILIZAOUTRASDESPCALCICMS" VARCHAR2(1) DEFAULT 'N', 
	"CALCSUFRAMASOBREPLIQUIDO" VARCHAR2(1) DEFAULT 'N', 
	"DEDUZIRSUFRAMABCSTALIQ1" VARCHAR2(1) DEFAULT 'N', 
	"CALCIPICOMDESC" VARCHAR2(1) DEFAULT 'S', 
	"CALCIPICOMFRETENF" VARCHAR2(1) DEFAULT 'S', 
	"SOMAFRETEFOBNOSTFORANF" VARCHAR2(1) DEFAULT 'N', 
	"LOCALIZACAO" VARCHAR2(20), 
	"CALCULAPISCOFINSCOMIPI" VARCHAR2(1) DEFAULT 'S', 
	"ACEITAENTREGAANCECIP" VARCHAR2(1) DEFAULT 'N', 
	"CODCIDADE" NUMBER(6,0), 
	"UTILIZAFRETECALCICMS" VARCHAR2(1) DEFAULT 'S', 
	"TIPOFRETECIFFOB" VARCHAR2(1), 
	"DESTACASELONF" VARCHAR2(1) DEFAULT 'S', 
	"UTILIZAPERCBON" VARCHAR2(1) DEFAULT 'N', 
	"PERCBONDIN" NUMBER(12,2), 
	"PERCBONMERC" NUMBER(12,2), 
	"PERCCOMISSAO" NUMBER(12,2), 
	"UTILIZAOUTRASDESPCALCIPI" VARCHAR2(1) DEFAULT 'N', 
	"VLLIMITEFRETEMIN" NUMBER(18,6), 
	"PERCFLUVIAL" NUMBER(6,4), 
	"CODCONTALANCFRETE" NUMBER(6,0), 
	"PERCBONOUTRAS" NUMBER(12,2), 
	"UTILIZADESCCALCST" VARCHAR2(1) DEFAULT 'S', 
	"UTILIZADESCCALCICMS" VARCHAR2(1) DEFAULT 'S', 
	"CONSIPICALCBASEST" VARCHAR2(1) DEFAULT 'S', 
	"CONSIPICALCBASECREPRES" VARCHAR2(1) DEFAULT 'N', 
	"CLASSE" VARCHAR2(1) DEFAULT 'C', 
	"EREABASTECIMENTO" VARCHAR2(1) DEFAULT 'N', 
	"EREDESPACHO" VARCHAR2(1) DEFAULT 'N', 
	"CODPARCELA" NUMBER(6,0), 
	"REP_OBS" VARCHAR2(2000), 
	"CALCIPICOMFRETEFOB" VARCHAR2(1) DEFAULT 'N', 
	"DTIMPORTINTEGRACAO" DATE, 
	"DTULTALTER" DATE, 
	"USAPERCALTERCUSTOENT" VARCHAR2(1) DEFAULT 'S', 
	"TIPOPESSOA" VARCHAR2(1), 
	"PERCIRRF" NUMBER(4,2), 
	"CODCONTAIRRF" NUMBER(10,0), 
	"PERCISS" NUMBER(4,2), 
	"CODCONTAISS" NUMBER(10,0), 
	"CODCONTACSRF" NUMBER(10,0), 
	"CODCONTAINSS" NUMBER(10,0), 
	"EXIGEREDESPACHO" VARCHAR2(1), 
	"PERFRETEVALOR" NUMBER(12,4), 
	"CONSOLIDARDIFPRECOVERBA" VARCHAR2(1) DEFAULT 'S', 
	"PERCIMPPRODUTORURAL" NUMBER(12,4), 
	"INSCMUNICIP" VARCHAR2(15), 
	"USAPERCICMSNAALIQEXTST" VARCHAR2(1) DEFAULT 'N', 
	"CONSFRETEFOBCALCICMSANTECIP" VARCHAR2(1) DEFAULT 'N', 
	"IEST" VARCHAR2(15), 
	"CODFORNECSTGUIA" NUMBER(6,0), 
	"USANUMNEGOCIACAO" VARCHAR2(1) DEFAULT 'N', 
	"ISENTOST" VARCHAR2(1) DEFAULT 'X', 
	"CODUSUARIOWINTHOR" NUMBER(8,0), 
	"DTULTALTERSRVPRC" DATE, 
	"CALCSTGUIAALIQEXT" VARCHAR2(1) DEFAULT 'S', 
	"CODFORNECFRETE" NUMBER(8,0), 
	"CALCULARIPIPESOLIQ" VARCHAR2(1) DEFAULT 'N', 
	"SIMPLESNACIONAL" VARCHAR2(1), 
	"COMPLEMENTOEND" VARCHAR2(80), 
	"NUMEROEND" VARCHAR2(6), 
	"CODPARCELASTGUIA" NUMBER(6,0), 
	"CAE" VARCHAR2(30), 
	"GERACREDDIFPRECO" VARCHAR2(1) DEFAULT 'N', 
	"UTILIZAOUTDESPCALCSUFRAMA" VARCHAR2(1) DEFAULT 'N', 
	"CONSSTNFPISCOFINS" VARCHAR2(1) DEFAULT 'N', 
	"CODPAIS" NUMBER(6,0), 
	"CLASSIFICTIPOFORNEC" VARCHAR2(1) DEFAULT 'A', 
	"TRANSPAUTONOMO" VARCHAR2(1) DEFAULT NULL, 
	"REP_NEXTELID" VARCHAR2(18), 
	"PERCPISNFSERVICO" NUMBER(6,2) DEFAULT 0, 
	"PERCCOFINSNFSERVICO" NUMBER(6,2) DEFAULT 0, 
	"CODCONTAPIS" NUMBER(10,0), 
	"CODCONTACOFINS" NUMBER(10,0), 
	"FORNECIMPORTACAO" NUMBER(3,0), 
	"PESOMINTRANSP" NUMBER(12,4), 
	"TAXAEMISSAOCT" NUMBER(12,4), 
	"INSS" NUMBER(12,0), 
	"CGCAUX" VARCHAR2(20), 
	"CODCONTACONTABADIANTFOR" NUMBER(10,0), 
	"CALCDESPFINPRAZOPGTO" VARCHAR2(1) DEFAULT 'N', 
	"USAOUTRASDESPSEGUROPISCOFINS" VARCHAR2(1) DEFAULT 'N', 
	"NUMALVARAANVISA" VARCHAR2(30), 
	"DTVENCALVARAANVISA" DATE, 
	"NUMALVARAFUNC" VARCHAR2(30), 
	"DTVENCALVARAFUNC" DATE, 
	"NUMALVARAPSICO" VARCHAR2(30), 
	"DTVENCALVARAPSICO" DATE, 
	"CRF" VARCHAR2(30), 
	"DTVENCCRF" DATE, 
	"PERPIS" NUMBER(6,2), 
	"PERCOFINS" NUMBER(6,2), 
	"CODSITTRIBPISCOFINSCONHEC" NUMBER(3,0), 
	"USACREDPISCOFINSENTBONIFIC" VARCHAR2(1) DEFAULT 'N', 
	"CONTRIBUINTEICMS" VARCHAR2(1) DEFAULT 'S', 
	"RECALCTRIBENT" VARCHAR2(1), 
	"CONSMAIORICMSVLPAUTA" VARCHAR2(1) DEFAULT 'N', 
	"BLOQUEIOSEFAZFORNEC" VARCHAR2(1), 
	"DTBLOQUEIOSEFAZFORNEC" DATE, 
	"PERCINSS" NUMBER(5,2), 
	"PERCCSRF" NUMBER(5,2), 
	"DEDFRETECIFCREDPRESICMS" VARCHAR2(1) DEFAULT 'N', 
	"EMITENFE" VARCHAR2(1) DEFAULT 'N', 
	"ATUALIZASTULTENT" VARCHAR2(1) DEFAULT 'N', 
	"CODCONTAB" VARCHAR2(12), 
	"NUMCASASDECREDUCAOICMS" NUMBER(2,0) DEFAULT 2, 
	"UTILIZAIPICALCICMS" VARCHAR2(1), 
	"AVALIACAOVENDA" VARCHAR2(2), 
	"DTPROXCOMPRA" DATE, 
	"DTULTCOMPRA" DATE, 
	"PERIODICIDADECOMPRA" NUMBER(4,0), 
	"DIASAVALIACAOVENDA" NUMBER(4,0), 
	"CODGLN" NUMBER(13,0), 
	"CODSITTRIBPISCOFINSSERVICO" NUMBER(3,0), 
	"CONSSTGUIAPISCOFINS" VARCHAR2(1) DEFAULT 'N', 
	"CONCEDCREDPRES" VARCHAR2(1), 
	"USAFRETEFOBPORFORNEC" VARCHAR2(1), 
	"VLMINPEDREPOSICAO" NUMBER(15,2), 
	"GERAPEDBONIFIC" VARCHAR2(1), 
	"QTDIASVENCVERBAS" NUMBER(4,0), 
	"TIPOFINANCDEVFORNEC" NUMBER(2,0), 
	"CFOPENTADJUD" NUMBER(8,0), 
	"SITTRIBENTADJUD" VARCHAR2(3), 
	"CFOPRESTITUICAO" NUMBER(8,0), 
	"SITTRIBRESTITUICAO" VARCHAR2(3), 
	"UTILIZAOUTDESPNFBASEST" VARCHAR2(1) DEFAULT 'S', 
	"CONSFRETEFOBBASESTNF" VARCHAR2(1) DEFAULT 'N', 
	"CODPARCELAFRETEFOB" NUMBER(6,0), 
	"CODPARCELAOUTDESP" NUMBER(6,0), 
	"CODPARCICMSANTECIP" NUMBER(6,0), 
	"CODPARCELADIFALIQ" NUMBER(6,0), 
	"CODCONTAINSSTOMADOR" NUMBER(10,0), 
	"PERCINSSTOMADOR" NUMBER(5,2) DEFAULT 0, 
	"RESSARCIMENTOSTNF" VARCHAR2(1), 
	"RESSARCIMENTOSTGUIA" VARCHAR2(1), 
	"ADJUDICACAO" VARCHAR2(1), 
	"CFOPRESSARCIMENTOSTGUIA" NUMBER(8,0), 
	"SITTRIBUTRESSARCIMENTOSTGUIA" VARCHAR2(3), 
	"USADRAWBACK" VARCHAR2(1), 
	"UTILIZAICMSDIFZERADO" VARCHAR2(1), 
	"CALCPISCOFINSBASERED" VARCHAR2(1), 
	"PERCSESTSENAT" NUMBER(5,2) DEFAULT '0', 
	"CODCONTASESTSENAT" NUMBER(10,0), 
	"EQUIPINDUSTRIA" VARCHAR2(1) DEFAULT 'N', 
	"CONSUMIDORFINAL" VARCHAR2(1) DEFAULT 'N', 
	"CODPARCELAFUNRURAL" NUMBER(6,0), 
	"CONSCAPATAZIAICMS" VARCHAR2(1) DEFAULT 'S', 
	"DEDUZIRSUFRAMAALIQEXT" VARCHAR2(1), 
	"EMAILNFE" VARCHAR2(3500), 
	"TRANSPCREDENCIADOSEFAZ" VARCHAR2(1), 
	"NUMCREDENCIAMENTOSEFAZ" VARCHAR2(30), 
	"CONSIPICALCICMSANT" VARCHAR2(1) DEFAULT 'S', 
	"CREDITARSALDOESTVERBA" VARCHAR2(1) DEFAULT 'N', 
	"USAECOMMERCEUNILEVER" VARCHAR2(1) DEFAULT 'N', 
	"CONTRIBUINTEDOCPRB" VARCHAR2(1) DEFAULT 'N', 
	"HORACOLETA" NUMBER(2,0), 
	"USADEBCREDOPERLOG" VARCHAR2(1), 
	"DIAPGVERBAOPERLOG" NUMBER(2,0), 
	"CREDITADESCMENOROPERLOG" VARCHAR2(1), 
	"CODCOBSEFAZ" VARCHAR2(4), 
	"URLBASERASTREIO" VARCHAR2(255), 
	"DEDUZIRSUFRAMADIFALIQ" VARCHAR2(1), 
	"CODLICITGRUPOFORNEC" NUMBER(3,0), 
	"FORMAPGTO" NUMBER(*,0), 
	"ASSOCIACAODESPORTIVA" VARCHAR2(1), 
	"CODIGONACIONALOBRAS" VARCHAR2(14), 
	"DETENTORREGESPECIAL" CHAR(1) DEFAULT '2', 
	"DEDUZIRFCPICMSDOFCPST" VARCHAR2(1), 
	"CONSIDERARPAUTAZEROSTGUIA" VARCHAR2(1), 
	"CALCCREDICMSBASEREDUZIDA" VARCHAR2(1) DEFAULT 'S', 
	"CODCENTROCUSTO" VARCHAR2(40), 
	"PERCMARGEMGARANTIDA" NUMBER(12,4), 
	"IDSOFITVIEW" VARCHAR2(10), 
	"DTULTALTERSOFITVIEW" DATE, 
	"DTEXCLUSAOSOFITVIEW" DATE, 
	"GERARRECEITARESTITUICAO" VARCHAR2(1), 
	"MANIFESTACAOAUTOMATICA" VARCHAR2(1) DEFAULT 'N', 
	"CONDCOMERCAUTORIZMED" VARCHAR2(20), 
	"GERAPEDIDOCOMPRAXML" VARCHAR2(1), 
	"USAREDICMSPARA" VARCHAR2(1), 
	"CONSDESONNOVESUFRAMA" VARCHAR2(1), 
	"GRAVARCODFAB253" VARCHAR2(1), 
	"UTILIZAFATOR253" VARCHAR2(1), 
	"IMPORTAXMLAUTOMATICO" VARCHAR2(1), 
	"DEDUZIRIPIBASEDIFALIQ" VARCHAR2(1), 
	"CONSFRETEFOBBASEDIFALIQ" VARCHAR2(1), 
	"FORMATRIBPRODRURAL" VARCHAR2(1) DEFAULT 'N', 
	"INDAQPRODRURAL" VARCHAR2(1), 
	"PRODUTORRURAL" VARCHAR2(1) DEFAULT 'N', 
	"ALIMENTAFUNDOMULTIFILIAL" VARCHAR2(1), 
	"ORIGEMPARCFINANC" VARCHAR2(1) DEFAULT 'C', 
	"APLICAVERBAREBCUSTO" VARCHAR2(1) DEFAULT 'S', 
	"TIPOFRETEDESPACHO" VARCHAR2(1) DEFAULT 'C', 
	"TIPOVENCIMENTO" VARCHAR2(1) DEFAULT 'F', 
	"CPFPRODUTORRURAL" VARCHAR2(18), 
	"PERCCONTRIBPREVDESC" NUMBER(12,4) DEFAULT '0', 
	"PERCCONTRIBBEMCONC" NUMBER(12,4) DEFAULT '0', 
	"PERCCONTRIBSENAR" NUMBER(12,4) DEFAULT '0', 
	"CODFORNECBAL" VARCHAR2(4) DEFAULT '0', 
	"UTILIZAPISCOFINSTRIBENT" VARCHAR2(1) DEFAULT 'N', 
	"UTILIZAICMSTRIBENT" VARCHAR2(1) DEFAULT 'N', 
	"IDINTEGRACAOMYFROTA" RAW(16) DEFAULT SYS_GUID(), 
	 CONSTRAINT "PCFORNEC_PK" PRIMARY KEY ("CODFORNEC")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" ;

CREATE OR REPLACE TRIGGER "AJEL"."TRG_ALT_PCFORNEC" 
  BEFORE INSERT OR UPDATE ON PCFORNEC
  REFERENCING OLD AS OLD NEW AS NEW
  FOR EACH ROW
DECLARE
  -- LOCAL VARIABLES HERE
BEGIN
  :NEW.DTULTALTER := SYSDATE;
END TRG_ALT_PCFORNEC;
/
ALTER TRIGGER "AJEL"."TRG_ALT_PCFORNEC" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_GRAVAR_CGCAUX" 
  BEFORE INSERT OR UPDATE ON PCFORNEC
  REFERENCING OLD AS OLD NEW AS NEW
  FOR EACH ROW
DECLARE
  
BEGIN
  :NEW.CGCAUX := LPAD(REPLACE(REPLACE(REPLACE(:NEW.CGC,'/'),'.'),'-'), 14, '0');
END TRG_GRAVAR_CGCAUX;
/
ALTER TRIGGER "AJEL"."TRG_GRAVAR_CGCAUX" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_SRVPRC_PCFORNEC" 
 BEFORE 
 INSERT OR UPDATE
 ON PCFORNEC
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW 
BEGIN
   :NEW.dtultaltersrvprc := SYSDATE;
END;
/
ALTER TRIGGER "AJEL"."TRG_SRVPRC_PCFORNEC" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_INTEGRA_MYFROTA_PCFORNEC" 
  AFTER UPDATE OR INSERT ON pcfornec
  REFERENCING NEW AS NEW OLD AS OLD
  FOR EACH ROW
DECLARE
  xmlvalor       clob;
  operacao       varchar2(50);
  pais_new       varchar2(50);
  CHAVETRANSACAO raw(16);
  qpais          int;
BEGIN

  SELECT SYS_GUID INTO CHAVETRANSACAO FROM DUAL;

  SELECT COUNT(*) INTO qpais FROM PCPAIS WHERE CODPAIS = :NEW.CODPAIS;

  IF (qpais > 0) THEN
    SELECT DESCRICAO
      INTO pais_new
      FROM PCPAIS
     WHERE CODPAIS = :NEW.CODPAIS;
  END IF;

  IF (UPDATING) THEN
    IF (:NEW.dtexclusao is not null and :OLD.dtexclusao is null) THEN
      SELECT xmltype.getclobval(XMLELEMENT("issuer",
                                           XMLATTRIBUTES(:NEW.IDINTEGRACAOMYFROTA AS
                                                         "SFT_External_Id"),
                                           XMLELEMENT("transp__SFT_Active__c",
                                                      '0')))
        INTO xmlvalor
        FROM dual;
      SELECT 'ExcluirFornecedorMyFrota' into OPERACAO from dual;
    END IF;
    IF NOT (
        
         NVL(:NEW.FORNECEDOR, 0) = NVL(:OLD.FORNECEDOR, 0) AND
         NVL(:NEW.FANTASIA, 0) = NVL(:OLD.FANTASIA, 0) AND
         NVL(:NEW.CGC, 0) = NVL(:OLD.CGC, 0) AND
         NVL(:NEW.ENDER, 0) = NVL(:OLD.ENDER, 0) AND
         NVL(:NEW.CIDADE, 0) = NVL(:OLD.CIDADE, 0) AND
         NVL(:NEW.ESTADO, 0) = NVL(:OLD.ESTADO, 0) AND
         NVL(:NEW.CEP, 0) = NVL(:OLD.CEP, 0) AND
         NVL(:NEW.BLOQUEIO, 0) = NVL(:OLD.BLOQUEIO, 0) AND
         NVL(:NEW.CODPAIS, 0) = NVL(:OLD.CODPAIS, 0) AND
         NVL(:NEW.DTEXCLUSAO, trunc(sysdate)) =
         NVL(:OLD.DTEXCLUSAO, trunc(sysdate))
        
        ) THEN
      SELECT xmltype.getclobval(XMLELEMENT("issuer",
                                           XMLATTRIBUTES(:NEW.IDINTEGRACAOMYFROTA AS
                                                         "SFT_External_Id"),
                                           XMLELEMENT("name",
                                                      :NEW.FORNECEDOR),
                                           XMLELEMENT("transp__SFT_Transaction_Number__c",
                                                      CHAVETRANSACAO),
                                           XMLELEMENT("transp__SFT_NickName__c",
                                                      :NEW.FANTASIA),
                                           XMLELEMENT("transp__SFT_Supplier_Type__c",
                                                      'Outros'),
                                           XMLELEMENT("transP__SFT_CNPJ__c",
                                                      :NEW.CGC),
                                           XMLELEMENT("transp__SFT_Address__c",
                                                      :NEW.ENDER),
                                           XMLELEMENT("transp__SFT_City__c",
                                                      :NEW.CIDADE),
                                           XMLELEMENT("transp__SFT_State__c",
                                                      :NEW.ESTADO),
                                           XMLELEMENT("transp__SFT_Zip_Code__c",
                                                      :NEW.CEP),
                                           XMLELEMENT("transp__SFT_Issuer_Type__c",
                                                      'Fornecedor'),
                                           XMLELEMENT("transp__SFT_Active__c",
                                                      CAST(NVL(NVL(CAST(:NEW.DTEXCLUSAO AS
                                                                        VARCHAR2(10)),
                                                                   '1'),
                                                               '0') AS
                                                           VARCHAR(1))),
                                           XMLELEMENT("transp__SFT_Country__c",
                                                      pais_new)
                                           
                                           ))
        INTO xmlvalor
        FROM dual;
    
      SELECT 'AlterarFornecedorMyFrota' INTO operacao FROM dual;
    END IF;
  END IF;
  IF (INSERTING) THEN
    SELECT xmltype.getclobval(XMLELEMENT("issuer",
                                         XMLATTRIBUTES(:NEW.IDINTEGRACAOMYFROTA AS
                                                       "SFT_External_Id"),
                                         XMLELEMENT("name",
                                                    NVL(:NEW.FORNECEDOR, ' ')),
                                         XMLELEMENT("transp__SFT_Transaction_Number__c",
                                                    CHAVETRANSACAO),
                                         XMLELEMENT("transp__SFT_NickName__c",
                                                    NVL(:NEW.FANTASIA, ' ')),
                                         XMLELEMENT("transp__SFT_Supplier_Type__c",
                                                    'Outros'),
                                         XMLELEMENT("transP__SFT_CNPJ__c",
                                                    NVL(:NEW.CGC, ' ')),
                                         XMLELEMENT("transp__SFT_Address__c",
                                                    NVL(:NEW.ENDER, ' ')),
                                         XMLELEMENT("transp__SFT_City__c",
                                                    NVL(:NEW.CIDADE, ' ')),
                                         XMLELEMENT("transp__SFT_State__c",
                                                    NVL(:NEW.ESTADO, ' ')),
                                         XMLELEMENT("transp__SFT_Zip_Code__c",
                                                    NVL(:NEW.CEP, ' ')),
                                         XMLELEMENT("transp__SFT_Issuer_Type__c",
                                                    'Fornecedor'),
                                         XMLELEMENT("transp__SFT_Active__c",
                                                    CAST(NVL(NVL(CAST(:NEW.DTEXCLUSAO AS
                                                                      VARCHAR2(10)),
                                                                 '1'),
                                                             '0') AS
                                                         VARCHAR(1))),
                                         XMLELEMENT("transp__SFT_Country__c",
                                                    NVL(pais_new, ' '))
                                         
                                         ))
      INTO xmlvalor
      FROM dual;
    SELECT 'IncluirFornecedorMyFrota' INTO operacao FROM dual;
  
  END IF;
  IF (OPERACAO IN ('IncluirFornecedorMyFrota', 'AlterarFornecedorMyFrota',
      'ExcluirFornecedorMyFrota')) THEN
    INSERT INTO PCMYFROTA_FILA
      (CHAVE, OPERACAO, DADOS)
    VALUES
      (CHAVETRANSACAO, operacao, xmlvalor);
  END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_INTEGRA_MYFROTA_PCFORNEC" ENABLE;

CREATE INDEX "AJEL"."PCFORNEC_IDX4" ON "AJEL"."PCFORNEC" ("CODCLI") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCFORNEC_IDX2" ON "AJEL"."PCFORNEC" ("GRUPOCAMPANHA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCFORNEC_IDX1" ON "AJEL"."PCFORNEC" ("FORNECEDOR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCFORNEC_IDX3" ON "AJEL"."PCFORNEC" ("CODFORNECPRINC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE UNIQUE INDEX "AJEL"."PCFORNEC_PK" ON "AJEL"."PCFORNEC" ("CODFORNEC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCFORNEC_IDX5" ON "AJEL"."PCFORNEC" ("CODCOMPRADOR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 196608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCFORNEC_CODFORNECPRINC_IDX" ON "AJEL"."PCFORNEC" (NVL("CODFORNECPRINC","CODFORNEC")) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;

COMMENT ON COLUMN AJEL.PCFORNEC.UTILIZAOUTRASDESPCALCIPI IS 'Utilizado na rotina 209 e 1301, caso o valor seja igual a "S" será utilizado o valor de outras despesas para cálculo de IPI.';
COMMENT ON COLUMN AJEL.PCFORNEC.UTILIZADESCCALCST IS 'Esse campo será utilizada pelas rotinas de pedido de compra, fornecedor e entrada de mercadoria quando esse campo possuir o valor igual a [S] os descontos comerciais serão utilizados Substituição Tributária (ST).';
COMMENT ON COLUMN AJEL.PCFORNEC.UTILIZADESCCALCICMS IS 'Esse campo será utilizada pelas rotinas de pedido de compra, fornecedor e entrada de mercadoria quando esse campo possuir o valor igual a [S] os descontos comerciais serão utilizados ICMS.';
COMMENT ON COLUMN AJEL.PCFORNEC.CLASSE IS 'Classe do Fornecedor. ';
COMMENT ON COLUMN AJEL.PCFORNEC.EREABASTECIMENTO IS 'Indica se é de reabastecimento. ';
COMMENT ON COLUMN AJEL.PCFORNEC.EREDESPACHO IS 'Indica que transportadora é redespacho. ';
COMMENT ON COLUMN AJEL.PCFORNEC.CODPARCELA IS 'Código da Parcela. ';
COMMENT ON COLUMN AJEL.PCFORNEC.REP_OBS IS 'Campo de observação do representante. ';
COMMENT ON COLUMN AJEL.PCFORNEC.CALCIPICOMFRETEFOB IS '. ';
COMMENT ON COLUMN AJEL.PCFORNEC.DTIMPORTINTEGRACAO IS 'Data da última importação do registro na filial de destino da informação.';
COMMENT ON COLUMN AJEL.PCFORNEC.DTULTALTER IS 'Data da última alteração do registro no banco de dados.';
COMMENT ON COLUMN AJEL.PCFORNEC.USAPERCALTERCUSTOENT IS 'Utiliza o percentual de custo na entrada. ';
COMMENT ON COLUMN AJEL.PCFORNEC.TIPOPESSOA IS 'Campo para armazenar o tipo de pessoa (F-Física ou J-Jurídica). ';
COMMENT ON COLUMN AJEL.PCFORNEC.PERCIRRF IS 'Campo para armazenar alíquota do IRRF. ';
COMMENT ON COLUMN AJEL.PCFORNEC.CODCONTAIRRF IS 'Campo para armazenar código da conta de despesa para o IRRF. ';
COMMENT ON COLUMN AJEL.PCFORNEC.PERCISS IS 'Campo para armazenar alíquota do ISS. ';
COMMENT ON COLUMN AJEL.PCFORNEC.CODCONTAISS IS 'Campo para armazenar código da conta de despesa para o ISS. ';
COMMENT ON COLUMN AJEL.PCFORNEC.CODCONTACSRF IS 'Campo para armazenar código da conta de despesa para o CSRF. ';
COMMENT ON COLUMN AJEL.PCFORNEC.CODCONTAINSS IS 'Campo para armazenar código da conta de despesa para o INSS. ';
COMMENT ON COLUMN AJEL.PCFORNEC.EXIGEREDESPACHO IS 'Transportadora exige redespacho. ';
COMMENT ON COLUMN AJEL.PCFORNEC.PERFRETEVALOR IS 'Indica o valor percentual frete.';
COMMENT ON COLUMN AJEL.PCFORNEC.CONSOLIDARDIFPRECOVERBA IS 'Consolidar verba de diferença de preço.';
COMMENT ON COLUMN AJEL.PCFORNEC.PERCIMPPRODUTORURAL IS 'Indica o percentual do imposto do produtor rural.';
COMMENT ON COLUMN AJEL.PCFORNEC.INSCMUNICIP IS 'Número da inscrição municipal.';
COMMENT ON COLUMN AJEL.PCFORNEC.USAPERCICMSNAALIQEXTST IS 'Considera frete FOB para o calculo do ICMS antecipado.';
COMMENT ON COLUMN AJEL.PCFORNEC.CONSFRETEFOBCALCICMSANTECIP IS 'Considera frete FOB para o calculo do ICMS antecipado.';
COMMENT ON COLUMN AJEL.PCFORNEC.IEST IS 'Indica a inscrição estadual para fornecedor substituto tribuário.';
COMMENT ON COLUMN AJEL.PCFORNEC.CODFORNECSTGUIA IS 'Indica o código fornecedor ST guia.';
COMMENT ON COLUMN AJEL.PCFORNEC.USANUMNEGOCIACAO IS 'Indica se utiliza o número de negociação.';
COMMENT ON COLUMN AJEL.PCFORNEC.ISENTOST IS 'Indica o fornecedor isento de ST.';
COMMENT ON COLUMN AJEL.PCFORNEC.CODUSUARIOWINTHOR IS 'Indica o código do usuário do sistema Winthor vinculado ao fornecedor.';
COMMENT ON COLUMN AJEL.PCFORNEC.DTULTALTERSRVPRC IS 'Indica a data da ultima alteração nesta tabela.';
COMMENT ON COLUMN AJEL.PCFORNEC.CALCSTGUIAALIQEXT IS 'Indica se calcula ST guia alíquota externa.';
COMMENT ON COLUMN AJEL.PCFORNEC.CODFORNECFRETE IS 'Indica o código da transportadora do frete.';
COMMENT ON COLUMN AJEL.PCFORNEC.CALCULARIPIPESOLIQ IS 'Calcula IPI com base no peso líquido.';
COMMENT ON COLUMN AJEL.PCFORNEC.SIMPLESNACIONAL IS 'Indica optante pelo simples nacional.';
COMMENT ON COLUMN AJEL.PCFORNEC.COMPLEMENTOEND IS 'Indica o complemento do endereço.';
COMMENT ON COLUMN AJEL.PCFORNEC.NUMEROEND IS 'Indica o numero do endereço.';
COMMENT ON COLUMN AJEL.PCFORNEC.CODPARCELASTGUIA IS 'Indica o código parcela ST guia.';
COMMENT ON COLUMN AJEL.PCFORNEC.CAE IS 'Indica o código nacional atividade economica.';
COMMENT ON COLUMN AJEL.PCFORNEC.GERACREDDIFPRECO IS 'Gera crédito diferença de preço.';
COMMENT ON COLUMN AJEL.PCFORNEC.UTILIZAOUTDESPCALCSUFRAMA IS 'Utiliza outras despesa para calculo do desconto SUFRAMA.';
COMMENT ON COLUMN AJEL.PCFORNEC.CONSSTNFPISCOFINS IS 'Considerar o ST NF na base de cálculo do PIS/COFINS.';
COMMENT ON COLUMN AJEL.PCFORNEC.CODPAIS IS 'Código do país do fornecedor.';
COMMENT ON COLUMN AJEL.PCFORNEC.CLASSIFICTIPOFORNEC IS 'Classifica o tipo do fornecedor comercial.';
COMMENT ON COLUMN AJEL.PCFORNEC.TRANSPAUTONOMO IS 'Informa se a transportadora é autônoma ou não.';
COMMENT ON COLUMN AJEL.PCFORNEC.REP_NEXTELID IS 'ID Nextel do Representante do Fornecedor.';
COMMENT ON COLUMN AJEL.PCFORNEC.PERCPISNFSERVICO IS 'Percentual de PIS NF serviço.';
COMMENT ON COLUMN AJEL.PCFORNEC.PERCCOFINSNFSERVICO IS 'Percentual de COFINS NF serviço.';
COMMENT ON COLUMN AJEL.PCFORNEC.CODCONTAPIS IS 'Código conta PIS.';
COMMENT ON COLUMN AJEL.PCFORNEC.CODCONTACOFINS IS 'Código conta COFINS.';
COMMENT ON COLUMN AJEL.PCFORNEC.FORNECIMPORTACAO IS 'Código do tipo de fornecedor de importação.';
COMMENT ON COLUMN AJEL.PCFORNEC.PESOMINTRANSP IS 'Peso mínimo que o frete transporta.';
COMMENT ON COLUMN AJEL.PCFORNEC.TAXAEMISSAOCT IS 'Taxa de emissão de conhecimento de transporte.';
COMMENT ON COLUMN AJEL.PCFORNEC.INSS IS 'Número do INSS do fornecedor.';
COMMENT ON COLUMN AJEL.PCFORNEC.CGCAUX IS 'Campo auxiliar para armazenar o CGC sem formatação.';
COMMENT ON COLUMN AJEL.PCFORNEC.CODCONTACONTABADIANTFOR IS 'Para atender a alteração ocorrida no contábil, para contabilização dos adiantamentos.';
COMMENT ON COLUMN AJEL.PCFORNEC.CALCDESPFINPRAZOPGTO IS 'Calcular vendor por prazo de pagamento';
COMMENT ON COLUMN AJEL.PCFORNEC.USAOUTRASDESPSEGUROPISCOFINS IS 'Somar outras despesas e seguros na base PIS/COFINS';
COMMENT ON COLUMN AJEL.PCFORNEC.NUMALVARAANVISA IS 'Num Alvará ANVISA';
COMMENT ON COLUMN AJEL.PCFORNEC.DTVENCALVARAANVISA IS 'Data Validade Alvará ANVISA';
COMMENT ON COLUMN AJEL.PCFORNEC.NUMALVARAFUNC IS 'Num Alvará Funcionamento';
COMMENT ON COLUMN AJEL.PCFORNEC.DTVENCALVARAFUNC IS 'Data Validade Alvará Funcionamento';
COMMENT ON COLUMN AJEL.PCFORNEC.NUMALVARAPSICO IS 'Num Alvará Psicotrópico';
COMMENT ON COLUMN AJEL.PCFORNEC.DTVENCALVARAPSICO IS 'Data Validade Alvará Psicotrópico';
COMMENT ON COLUMN AJEL.PCFORNEC.CRF IS 'Num CRF';
COMMENT ON COLUMN AJEL.PCFORNEC.DTVENCCRF IS 'Data Validade CRF';
COMMENT ON COLUMN AJEL.PCFORNEC.PERPIS IS 'Percentual PIS';
COMMENT ON COLUMN AJEL.PCFORNEC.PERCOFINS IS 'Percentual CONFINS';
COMMENT ON COLUMN AJEL.PCFORNEC.CODSITTRIBPISCOFINSCONHEC IS 'Código Situação Tributaria PIS/COFINS conhecimento transporte';
COMMENT ON COLUMN AJEL.PCFORNEC.USACREDPISCOFINSENTBONIFIC IS 'Fornecedor utiliza crédito PIS/COFINS entrada bonificada';
COMMENT ON COLUMN AJEL.PCFORNEC.CONTRIBUINTEICMS IS 'Fornecedor é contribuinte ICMS';
COMMENT ON COLUMN AJEL.PCFORNEC.RECALCTRIBENT IS 'Recalcula tributação do pedido de compra no momento da entrada NF';
COMMENT ON COLUMN AJEL.PCFORNEC.CONSMAIORICMSVLPAUTA IS 'Calcula ICMS sobre Vl.Pauta maior valor(Importação).';
COMMENT ON COLUMN AJEL.PCFORNEC.BLOQUEIOSEFAZFORNEC IS 'BLOQUEADO SEFAZ.';
COMMENT ON COLUMN AJEL.PCFORNEC.DTBLOQUEIOSEFAZFORNEC IS 'DATA BLOQUEIO SEFAZ.';
COMMENT ON COLUMN AJEL.PCFORNEC.PERCINSS IS 'PERCENTUAL INSS.';
COMMENT ON COLUMN AJEL.PCFORNEC.PERCCSRF IS 'PERCENTUAL CSRF.';
COMMENT ON COLUMN AJEL.PCFORNEC.DEDFRETECIFCREDPRESICMS IS 'FRETE CIF CREDITO PRESUMIDO ICMS.';
COMMENT ON COLUMN AJEL.PCFORNEC.EMITENFE IS 'IDENTIFICA SE O FORNECEDOR E EMITENTE DE NFE.';
COMMENT ON COLUMN AJEL.PCFORNEC.ATUALIZASTULTENT IS 'Atualizar valores de ST da última entrada.';
COMMENT ON COLUMN AJEL.PCFORNEC.NUMCASASDECREDUCAOICMS IS 'Campo usado para gravar a quantidade de casas decimais originarios do fornecedor';
COMMENT ON COLUMN AJEL.PCFORNEC.UTILIZAIPICALCICMS IS 'Utiliza IPI no calculo de ICMS';
COMMENT ON COLUMN AJEL.PCFORNEC.AVALIACAOVENDA IS 'Período utilizado no calculo da sugestão de compra.';
COMMENT ON COLUMN AJEL.PCFORNEC.DTPROXCOMPRA IS 'Data próxima compra';
COMMENT ON COLUMN AJEL.PCFORNEC.DTULTCOMPRA IS 'Data próxima compra';
COMMENT ON COLUMN AJEL.PCFORNEC.PERIODICIDADECOMPRA IS 'Periodicidade de compras';
COMMENT ON COLUMN AJEL.PCFORNEC.DIASAVALIACAOVENDA IS 'Avaliação venda';
COMMENT ON COLUMN AJEL.PCFORNEC.CODGLN IS 'Código GLN - Número global de localização';
COMMENT ON COLUMN AJEL.PCFORNEC.CODSITTRIBPISCOFINSSERVICO IS 'Código da situação tributária de Pis/Cofins para nota fiscal de serviço.';
COMMENT ON COLUMN AJEL.PCFORNEC.CONSSTGUIAPISCOFINS IS 'Considera ST Guia Base do PISCOFINS.';
COMMENT ON COLUMN AJEL.PCFORNEC.USAFRETEFOBPORFORNEC IS 'Define se o Frete FOB é por Fornecedor, onde os valores serão definidos no cadastro do Fornecedor(Auto Peças).';
COMMENT ON COLUMN AJEL.PCFORNEC.VLMINPEDREPOSICAO IS 'Vl. Mín. Pedido Reposição.';
COMMENT ON COLUMN AJEL.PCFORNEC.GERAPEDBONIFIC IS 'Gera Pedido Bonificado Automático';
COMMENT ON COLUMN AJEL.PCFORNEC.QTDIASVENCVERBAS IS 'Quantidade dias(Padrão) vencimento de verbas.';
COMMENT ON COLUMN AJEL.PCFORNEC.TIPOFINANCDEVFORNEC IS 'Forma de Pagamento Devolução Fornecedor';
COMMENT ON COLUMN AJEL.PCFORNEC.CFOPENTADJUD IS 'CFOP Adjudicação';
COMMENT ON COLUMN AJEL.PCFORNEC.SITTRIBENTADJUD IS 'Sit.Tributária Adjudicação';
COMMENT ON COLUMN AJEL.PCFORNEC.CFOPRESTITUICAO IS 'CFOP Restituição';
COMMENT ON COLUMN AJEL.PCFORNEC.SITTRIBRESTITUICAO IS 'Sit.Tributária Restituição';
COMMENT ON COLUMN AJEL.PCFORNEC.UTILIZAOUTDESPNFBASEST IS 'Caso este parâmetro esteja igual Sim,  o valor de Outras Despesas NF + Seguro, serão considerados na base de calculo do ST.';
COMMENT ON COLUMN AJEL.PCFORNEC.CONSFRETEFOBBASESTNF IS 'Indica se o frete FOB irá compor a base de calculo do ST NF.';
COMMENT ON COLUMN AJEL.PCFORNEC.CODPARCELAFRETEFOB IS 'Cód. parcela Frete FOB';
COMMENT ON COLUMN AJEL.PCFORNEC.CODPARCELAOUTDESP IS 'Cód. Parcela Outras Desp.Fora NF';
COMMENT ON COLUMN AJEL.PCFORNEC.CODPARCICMSANTECIP IS 'Contas a Pagar previsto.';
COMMENT ON COLUMN AJEL.PCFORNEC.CODPARCELADIFALIQ IS 'Contas a Pagar previsto.';
COMMENT ON COLUMN AJEL.PCFORNEC.CODCONTAINSSTOMADOR IS 'Campo para armazenar código da conta de despesa para o INSS tomador.';
COMMENT ON COLUMN AJEL.PCFORNEC.PERCINSSTOMADOR IS 'Campo para armazenar o percentual de despesa para o INSS tomador';
COMMENT ON COLUMN AJEL.PCFORNEC.RESSARCIMENTOSTNF IS 'Ressarcimento ST NF';
COMMENT ON COLUMN AJEL.PCFORNEC.RESSARCIMENTOSTGUIA IS 'Ressarcimento ST Guia';
COMMENT ON COLUMN AJEL.PCFORNEC.ADJUDICACAO IS 'Ressarcimento ST Guia';
COMMENT ON COLUMN AJEL.PCFORNEC.CFOPRESSARCIMENTOSTGUIA IS 'CFOP Ressarcimento';
COMMENT ON COLUMN AJEL.PCFORNEC.SITTRIBUTRESSARCIMENTOSTGUIA IS 'Sit. Tributária Ressarcimento';
COMMENT ON COLUMN AJEL.PCFORNEC.USADRAWBACK IS 'Pedido em regime DrawBack Suspensão (importação)';
COMMENT ON COLUMN AJEL.PCFORNEC.UTILIZAICMSDIFZERADO IS 'Utilizar ICMS diferido com alíquota zero (importação)';
COMMENT ON COLUMN AJEL.PCFORNEC.CALCPISCOFINSBASERED IS 'Calcular PIS/COFINS sobre a base ICMS reduzida (importação)';
COMMENT ON COLUMN AJEL.PCFORNEC.PERCSESTSENAT IS '% SEST/SENAT';
COMMENT ON COLUMN AJEL.PCFORNEC.CODCONTASESTSENAT IS 'Conta SEST/SENAT';
COMMENT ON COLUMN AJEL.PCFORNEC.EQUIPINDUSTRIA IS 'Equiparado a indústria';
COMMENT ON COLUMN AJEL.PCFORNEC.CONSUMIDORFINAL IS 'NFE';
COMMENT ON COLUMN AJEL.PCFORNEC.CODPARCELAFUNRURAL IS 'Cód. parcela FUNRURAL';
COMMENT ON COLUMN AJEL.PCFORNEC.CONSCAPATAZIAICMS IS 'Considerar o valor da Capatazia para cálculo do ICMS Normal, ST, presumido e Antecipado na importação';
COMMENT ON COLUMN AJEL.PCFORNEC.CREDITARSALDOESTVERBA IS '202/VERBA';
COMMENT ON COLUMN AJEL.PCFORNEC.CONTRIBUINTEDOCPRB IS 'Indicativo se o fornecedor é contribuinte da contribuição previdenciária sobre a receita bruta (CPRB)';
COMMENT ON COLUMN AJEL.PCFORNEC.HORACOLETA IS 'Determina a hora da coleta da transportadora';
COMMENT ON COLUMN AJEL.PCFORNEC.USADEBCREDOPERLOG IS 'Utilizar déb./créd. de conta corrente de Operador Logístico';
COMMENT ON COLUMN AJEL.PCFORNEC.DIAPGVERBAOPERLOG IS 'Dia de Pagamento da Verba de Operador Logístico';
COMMENT ON COLUMN AJEL.PCFORNEC.CREDITADESCMENOROPERLOG IS 'Credita conta corrente de Operador Logístico com desconto menor que a referência';
COMMENT ON COLUMN AJEL.PCFORNEC.CODCOBSEFAZ IS 'Código de cobrança da Sefaz';
COMMENT ON COLUMN AJEL.PCFORNEC.URLBASERASTREIO IS 'URL base de rastreio totvs e-commerce';
COMMENT ON COLUMN AJEL.PCFORNEC.DEDUZIRSUFRAMADIFALIQ IS 'Deduzir Suframa Diferença de Alíquotas';
COMMENT ON COLUMN AJEL.PCFORNEC.CODLICITGRUPOFORNEC IS 'Grupo de Fornecedor Licitação';
COMMENT ON COLUMN AJEL.PCFORNEC.FORMAPGTO IS 'Forma de pagamento utilizada na geração do arquivo na rotina 770.';
COMMENT ON COLUMN AJEL.PCFORNEC.ASSOCIACAODESPORTIVA IS 'Indica se o fornecedor tem vinculo com associação desportiva';
COMMENT ON COLUMN AJEL.PCFORNEC.CODIGONACIONALOBRAS IS 'Código Nacional de Obras';
COMMENT ON COLUMN AJEL.PCFORNEC.DETENTORREGESPECIAL IS 'Detentor de Regime Especial';
COMMENT ON COLUMN AJEL.PCFORNEC.DEDUZIRFCPICMSDOFCPST IS 'Deduzir o FCP ICMS do valor do FCP ST';
COMMENT ON COLUMN AJEL.PCFORNEC.CONSIDERARPAUTAZEROSTGUIA IS 'Considerar pauta zero para cálculo do ST Guia';
COMMENT ON COLUMN AJEL.PCFORNEC.CALCCREDICMSBASEREDUZIDA IS 'Utiliza crédito de ICMS sobre base reduzida';
COMMENT ON COLUMN AJEL.PCFORNEC.CODCENTROCUSTO IS 'Código Centro de custo';
COMMENT ON COLUMN AJEL.PCFORNEC.PERCMARGEMGARANTIDA IS 'Percentual de Margem Garantida';
COMMENT ON COLUMN AJEL.PCFORNEC.IDSOFITVIEW IS 'Indica o código do fornecedor na SofitView';
COMMENT ON COLUMN AJEL.PCFORNEC.DTULTALTERSOFITVIEW IS 'Indica a data que o fornecedor foi integrado com a SofitView';
COMMENT ON COLUMN AJEL.PCFORNEC.DTEXCLUSAOSOFITVIEW IS 'Indica a data que o fornecedor e foi inativado na SofitView';
COMMENT ON COLUMN AJEL.PCFORNEC.GERARRECEITARESTITUICAO IS 'Gera receita na devolução de mercadoria somente do total dos produtos';
COMMENT ON COLUMN AJEL.PCFORNEC.MANIFESTACAOAUTOMATICA IS 'Manifesta Notas Automaticamente';
COMMENT ON COLUMN AJEL.PCFORNEC.CONDCOMERCAUTORIZMED IS 'Condição Comercial do Canal Autorizador';
COMMENT ON COLUMN AJEL.PCFORNEC.GERAPEDIDOCOMPRAXML IS 'Gerar pedido de compra com XML';
COMMENT ON COLUMN AJEL.PCFORNEC.USAREDICMSPARA IS 'Define se a redução da base de ICMS será do tipo PARA o % informado';
COMMENT ON COLUMN AJEL.PCFORNEC.CONSDESONNOVESUFRAMA IS 'Considera ICMS desoneração motivo 9 calculo Suframa/Repasse';
COMMENT ON COLUMN AJEL.PCFORNEC.GRAVARCODFAB253 IS 'Gravar código de fábrica na rotina 253';
COMMENT ON COLUMN AJEL.PCFORNEC.UTILIZAFATOR253 IS 'Utilizar fator de conversão da rotina 253';
COMMENT ON COLUMN AJEL.PCFORNEC.IMPORTAXMLAUTOMATICO IS 'Importa XML automático';
COMMENT ON COLUMN AJEL.PCFORNEC.DEDUZIRIPIBASEDIFALIQ IS 'Deduzir IPI da base Diferencial Alíquota';
COMMENT ON COLUMN AJEL.PCFORNEC.CONSFRETEFOBBASEDIFALIQ IS 'Considerar Frete Fob na base Diferencial Alíquota';
COMMENT ON COLUMN AJEL.PCFORNEC.ALIMENTAFUNDOMULTIFILIAL IS 'PARÂMETRO BETA - Alimenta Fundo Multi-filial';
COMMENT ON COLUMN AJEL.PCFORNEC.ORIGEMPARCFINANC IS 'Origem do parcelamento financeiro na Importação do XML';
COMMENT ON COLUMN AJEL.PCFORNEC.APLICAVERBAREBCUSTO IS 'PARÂMETRO BETA - Aplica Rebaixa Custo 1301 - Multifilial';
COMMENT ON COLUMN AJEL.PCFORNEC.TIPOFRETEDESPACHO IS 'Tipo de Frete Despacho';
COMMENT ON COLUMN AJEL.PCFORNEC.TIPOVENCIMENTO IS 'Campo para armazenar o tipo de Vencimento (F- Faturamento, S - Data Embarque,  E- Data Entrega,  X- Data Fixa,  P- Emissão Pedido).';
COMMENT ON COLUMN AJEL.PCFORNEC.CPFPRODUTORRURAL IS 'CPF referente ao produtor rural';
COMMENT ON COLUMN AJEL.PCFORNEC.PERCCONTRIBPREVDESC IS 'Percentual do Valor Contribuição Prev. Desc. ';
COMMENT ON COLUMN AJEL.PCFORNEC.PERCCONTRIBBEMCONC IS 'Percentual do Valor Contribuição Bem. Concedido';
COMMENT ON COLUMN AJEL.PCFORNEC.PERCCONTRIBSENAR IS 'Percentual do Valor Contribuição SENAR';
COMMENT ON COLUMN AJEL.PCFORNEC.CODFORNECBAL IS 'Código do fornecedor que será enviado para a balança de retaguarda';
COMMENT ON COLUMN AJEL.PCFORNEC.UTILIZAPISCOFINSTRIBENT IS 'Carregar tributos PIS e COFINS da Rotina 212.';
COMMENT ON COLUMN AJEL.PCFORNEC.UTILIZAICMSTRIBENT IS 'Carregar tributos ICMS da Rotina 212. ';
COMMENT ON COLUMN AJEL.PCFORNEC.IDINTEGRACAOMYFROTA IS 'Identifica a integração com My Frota.';



-- AJEL.PCUSUARI definition

CREATE TABLE "AJEL"."PCUSUARI" 
   (	"CODUSUR" NUMBER(4,0) DEFAULT NULL NOT NULL ENABLE, 
	"NOME" VARCHAR2(40) NOT NULL ENABLE, 
	"SENHA" VARCHAR2(10), 
	"TIPOVEND" VARCHAR2(2), 
	"PERCENT" NUMBER(4,2), 
	"PERCENT2" NUMBER(6,2), 
	"ENDERECO" VARCHAR2(40), 
	"CIDADE" VARCHAR2(15), 
	"ESTADO" VARCHAR2(2), 
	"CEP" VARCHAR2(9), 
	"TELEFONE1" VARCHAR2(13), 
	"TELEFONE2" VARCHAR2(13), 
	"CPF" VARCHAR2(20), 
	"CI" VARCHAR2(20), 
	"FAX" VARCHAR2(13), 
	"BIP" VARCHAR2(20), 
	"MENS1" VARCHAR2(60), 
	"MENS2" VARCHAR2(60), 
	"MENS3" VARCHAR2(60), 
	"MENS4" VARCHAR2(60), 
	"BLOQUEIO" VARCHAR2(1), 
	"DTINICIO" DATE, 
	"DTTERMINO" DATE, 
	"MOTIVO" VARCHAR2(40), 
	"DTNASC" DATE, 
	"FIRMA" VARCHAR2(40), 
	"CGC" VARCHAR2(20), 
	"BAIRRO" VARCHAR2(25), 
	"CODSUPERVISOR" NUMBER(4,0) DEFAULT NULL NOT NULL ENABLE, 
	"CONJUGE" VARCHAR2(40), 
	"DTNASCONJUGE" DATE, 
	"TIPOFIRMA" VARCHAR2(1), 
	"NUMDEP" NUMBER(2,0), 
	"DTULTVENDA" DATE, 
	"DTENTREGADOC" DATE, 
	"CODCOMOCLIENTE" NUMBER(6,0), 
	"CCORRENTE" VARCHAR2(1), 
	"EMAIL" VARCHAR2(100), 
	"DTINFORMATIZA" DATE, 
	"NUMSERIEEQUIP" NUMBER(10,0), 
	"PROXNUMPED" NUMBER(14,2), 
	"ULTNUMPED" NUMBER(10,0), 
	"NUMBANCO" NUMBER(3,0), 
	"NUMAGENCIA" NUMBER(4,0), 
	"NUMDVAGENCIA" VARCHAR2(1), 
	"NUMCCORRENTE" NUMBER(12,0), 
	"NUMDVCCORRENTE" VARCHAR2(2), 
	"DTULTALTERACAO" DATE, 
	"DTEXCLUSAO" DATE, 
	"VENDEDORQK" VARCHAR2(1), 
	"CODEQUIPE" NUMBER(4,0), 
	"PERMETA" NUMBER(10,2), 
	"CODFILIAL" VARCHAR2(2), 
	"OBS1" VARCHAR2(80), 
	"OBS2" VARCHAR2(80), 
	"PROXNUMPEDFORCA" NUMBER(10,0) DEFAULT 800001, 
	"BLOQCOMIS" VARCHAR2(1), 
	"OBSBLOQ" VARCHAR2(30), 
	"VLCORRENTE" NUMBER(10,2), 
	"VLLIMCRED" NUMBER(10,2), 
	"NUMCONSELHO" VARCHAR2(20), 
	"INSS" NUMBER(12,0), 
	"VLVENDAPREV" NUMBER(12,2), 
	"CODDISTRIB" VARCHAR2(4), 
	"DTLIMENTREGADOC" DATE, 
	"MASKPREPOSTO" VARCHAR2(8), 
	"EXPORTADADOS" VARCHAR2(1), 
	"NUMSERIEEQUIP2" VARCHAR2(15), 
	"DTULTPAGCONSELHO" DATE, 
	"INSCMUNICIPAL" VARCHAR2(15), 
	"PRACA1" VARCHAR2(80), 
	"PRACA2" VARCHAR2(80), 
	"ENDERECO2" VARCHAR2(40), 
	"PERDESCMAX" NUMBER(5,2), 
	"EMAIL2" VARCHAR2(100), 
	"BLOQVENDATLMK" VARCHAR2(1), 
	"AREAATUACAO" VARCHAR2(1), 
	"VLVENDAMINPED" NUMBER(12,2), 
	"PERCMETADEPTO" NUMBER(10,2), 
	"TIPOCOMISSAO" VARCHAR2(1), 
	"USADEBCREDRCA" VARCHAR2(1), 
	"PERCACRESCIMOVENDA" NUMBER(5,2), 
	"NUMBANCOPOUP" NUMBER(3,0), 
	"NUMCCORRENTEPOUP" NUMBER(12,0), 
	"NUMAGENCIAPOUP" NUMBER(4,0), 
	"NUMDVCCORRENTEPOUP" VARCHAR2(2), 
	"NUMDVAGENCIAPOUP" VARCHAR2(1), 
	"HORAINICONEXAOPALM" NUMBER(2,0), 
	"MINUTOINICONEXAOPALM" NUMBER(2,0), 
	"HORAFIMCONEXAOPALM" NUMBER(2,0), 
	"MINUTOFIMCONEXAOPALM" NUMBER(2,0), 
	"PROXCODCLIPALM" NUMBER(9,0), 
	"QTITENSPEDPREV" NUMBER(14,2), 
	"QTPEDPREV" NUMBER(14,2), 
	"TELPROVEDOR" VARCHAR2(15), 
	"SENHAPOP" VARCHAR2(10), 
	"USURPOP" VARCHAR2(40), 
	"SERVSMTP" VARCHAR2(30), 
	"SERVPOP" VARCHAR2(30), 
	"USURDIALUP" VARCHAR2(40), 
	"SENHADIALUP" VARCHAR2(12), 
	"PERCACRESFV" NUMBER(8,2), 
	"ROTAMASTERFOODS" VARCHAR2(20), 
	"NUMPEDECF" NUMBER(10,0), 
	"USURLOGIN" VARCHAR2(40), 
	"SENHALOGIN" VARCHAR2(10), 
	"USURDIRFV" VARCHAR2(50), 
	"DIRRECEPCAOFTP" VARCHAR2(50), 
	"DIRENVIOFTP" VARCHAR2(50), 
	"SERVFTP" VARCHAR2(50), 
	"USURFTP" VARCHAR2(40), 
	"SENHAFTP" VARCHAR2(10), 
	"PERMETAMETRO" NUMBER(10,2), 
	"PROXNUMPEDWEB" NUMBER(10,0), 
	"CODOPERACAO" VARCHAR2(3), 
	"TIPOPESSOA" VARCHAR2(1), 
	"PERMITEADIANTCOMISSAO" VARCHAR2(1) DEFAULT 'S', 
	"INDICECPFECHCOMISSAO" VARCHAR2(1) DEFAULT 'A', 
	"PERMAXVENDA" NUMBER(18,6), 
	"INDICERATEIOCOMISSAO" NUMBER(5,2), 
	"USARRCAOPERADOR" VARCHAR2(1), 
	"PERCOMMETA" NUMBER(8,4) DEFAULT '0', 
	"NUMCLIPOS" NUMBER(20,8), 
	"VLMAXTROCA" NUMBER(6,2), 
	"COMISSAOFIXA" NUMBER(10,2), 
	"CODMONITOR" NUMBER(8,0), 
	"CODPRACAPRINCIPAL" NUMBER(4,0), 
	"USACOBRANCACARTAO" VARCHAR2(1) DEFAULT 'N', 
	"EXPORTARECF" VARCHAR2(1) DEFAULT 'S', 
	"NUMCCORRENTEALFA" VARCHAR2(12), 
	"VALIDARACRESCDESCPRECOFIXO" VARCHAR2(1) DEFAULT 'S', 
	"CPFAUX" VARCHAR2(20), 
	"NUMNOTABLOCO1" VARCHAR2(10), 
	"CODCIDADE" NUMBER(6,0), 
	"CODBAIRRO" NUMBER(6,0), 
	"CODCONTACSRF" NUMBER(10,0), 
	"PERCINSS" NUMBER(5,2), 
	"PERCCSRF" NUMBER(5,2), 
	"PERCPISNFSERVICO" NUMBER(6,2), 
	"PERCCOFINSNFSERVICO" NUMBER(6,2), 
	"PERCISS" NUMBER(4,2), 
	"PERCIRRF" NUMBER(4,2), 
	"CODCONTAIRRF" NUMBER(10,0), 
	"CODCONTAISS" NUMBER(10,0), 
	"CODCONTAINSS" NUMBER(10,0), 
	"CODCONTAPIS" NUMBER(10,0), 
	"CODCONTACOFINS" NUMBER(10,0), 
	"EXPORTARPARAFORCAVENDAS" VARCHAR2(1), 
	"DIRETORIOASSINATURA" VARCHAR2(200), 
	"MODELOPALM" VARCHAR2(30), 
	"OBSFORCAVENDAS1" VARCHAR2(80), 
	"OBSFORCAVENDAS2" VARCHAR2(80), 
	"OBSFORCAVENDAS3" VARCHAR2(80), 
	"OBSFORCAVENDAS4" VARCHAR2(80), 
	"CODIGOCENTROCUSTO" VARCHAR2(40), 
	"VISUALIZARPRODDEPTOSEC" VARCHAR2(1), 
	"CODCONTAB" VARCHAR2(12), 
	"SIMPLESNACIONAL" VARCHAR2(1), 
	"COMISSAOSERVICOPRESTADO" NUMBER(12,2), 
	"FATORCOMISLIQ" NUMBER(18,6) DEFAULT 1, 
	"NUMDEPENDENTES" NUMBER(3,0), 
	"EXPORTARCOMISSAOFOLHARM" VARCHAR2(1), 
	"CODROTA" NUMBER(4,0), 
	"NUMSELOINICIAL" VARCHAR2(20), 
	"NUMSELOFINAL" VARCHAR2(20), 
	"NUMFORMINICIAL" NUMBER(10,0), 
	"NUMFORMFINAL" NUMBER(10,0), 
	"UTILIZASELOSEFAZ" VARCHAR2(1), 
	"SERIENF" VARCHAR2(3), 
	"USACONTROLEFORMSELOSEFAZ" VARCHAR2(1), 
	"PROXNUMFORM" NUMBER(10,0), 
	"PROXNUMSELO" NUMBER(10,0), 
	"CODCONTASRF" NUMBER(10,0), 
	"NUMAIDF" VARCHAR2(30), 
	"CPFTITULARCC" VARCHAR2(20), 
	"CPFTITULARCP" VARCHAR2(20), 
	"LATITUDE" VARCHAR2(20), 
	"LONGITUDE" VARCHAR2(20), 
	"CONTRIBINDIVIDUALINSS" VARCHAR2(1), 
	"NIT" VARCHAR2(20), 
	"PARTCLUBEITT" VARCHAR2(1) DEFAULT 'N', 
	"DTFIMVIGCLUBEITT" DATE, 
	"CHAPA_RM" VARCHAR2(16), 
	"CALCULARDSR" VARCHAR2(1) DEFAULT 'N', 
	"TIPOCONTAPAGAMENTO" NUMBER(1,0), 
	"PERMITEPRODSEMDISTRIBUICAO" VARCHAR2(1), 
	"CODUSURPG" VARCHAR2(6), 
	 CONSTRAINT "PCUSUARI_PK" PRIMARY KEY ("CODUSUR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_DADOS" ;

CREATE OR REPLACE TRIGGER "AJEL"."TRG_GRAVAR_CPF" 
  BEFORE INSERT OR UPDATE ON PCUSUARI
  REFERENCING OLD AS OLD NEW AS NEW
  FOR EACH ROW
DECLARE
  
BEGIN
  :NEW.CPFAUX := LPAD(REPLACE(REPLACE(REPLACE(:NEW.CPF,'/'),'.'),'-'), 14, '0');
END TRG_GRAVAR_CGEENTAUX;
/
ALTER TRIGGER "AJEL"."TRG_GRAVAR_CPF" ENABLE;
  CREATE OR REPLACE TRIGGER "AJEL"."TRG_INTEGRA_OSMOBILE_PCUSUARIO" 
  AFTER UPDATE OR INSERT OF
  NOME, EMAIL, DTEXCLUSAO, BLOQUEIO  ON PCUSUARI
  REFERENCING NEW AS NEW OLD AS OLD
  FOR EACH ROW
DECLARE
  STATUS_OPERACAO varchar2(50);
  CHAVETRANSACAO  raw(16);
  CONTADOR        NUMBER(6);
BEGIN
  SELECT SYS_GUID INTO CHAVETRANSACAO FROM DUAL;

  SELECT COUNT(1)
  INTO CONTADOR
    FROM PCEMPR
   WHERE PCEMPR.CODUSUR = :NEW.CODUSUR
     AND PCEMPR.USUARIOBD IS NOT NULL
     AND PCEMPR.SENHABD IS NOT NULL;
     
   IF (CONTADOR > 0) THEN  
      IF(INSERTING) THEN
        SELECT 'INCLUIR' INTO STATUS_OPERACAO FROM DUAL;
      ELSIF (UPDATING) THEN 
        IF (:NEW.DTEXCLUSAO IS NULL) THEN 
           IF NOT(NVL(:NEW.NOME, 0) = NVL(:OLD.NOME, 0) AND 
                  NVL(:NEW.EMAIL, 0) = NVL(:OLD.EMAIL, 0) AND 
                  NVL(:NEW.BLOQUEIO, 0) = NVL(:OLD.BLOQUEIO, 0)) THEN
             SELECT 'ALTERAR' INTO STATUS_OPERACAO FROM DUAL;
           END IF; 
        ELSE 
           SELECT 'EXCLUIR' INTO STATUS_OPERACAO FROM DUAL; 
        END IF; 
      END IF;
      
      IF (STATUS_OPERACAO IN ('INCLUIR', 'ALTERAR', 'EXCLUIR')) THEN 
         INSERT INTO PCOSMOBILE_USUARIO
            (ID, CODIGO, STATUSOPERACAO, DATA) 
         VALUES
            (CHAVETRANSACAO, :NEW.CODUSUR, STATUS_OPERACAO, TRUNC(SYSDATE)); 
      END IF; 
   END IF;
END;
/
ALTER TRIGGER "AJEL"."TRG_INTEGRA_OSMOBILE_PCUSUARIO" ENABLE;

CREATE UNIQUE INDEX "AJEL"."PCUSUARI_PK" ON "AJEL"."PCUSUARI" ("CODUSUR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCUSUARI_IDX1" ON "AJEL"."PCUSUARI" ("NOME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCUSUARI_IDX2" ON "AJEL"."PCUSUARI" ("CODSUPERVISOR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 327680 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;
  CREATE INDEX "AJEL"."PCUSUARI_IDX3" ON "AJEL"."PCUSUARI" ("CODUSUR", "CODSUPERVISOR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICE" ;

COMMENT ON COLUMN AJEL.PCUSUARI.BAIRRO IS 'Bairro do cadastro de usuário';
COMMENT ON COLUMN AJEL.PCUSUARI.TIPOPESSOA IS 'Indica o tipo do RCA: Pessoa Física ou Pessoa Jurídica. ';
COMMENT ON COLUMN AJEL.PCUSUARI.PERMITEADIANTCOMISSAO IS 'Indica se o RCA poderá receber adiantamento de comissão, através da rotina 1266. ';
COMMENT ON COLUMN AJEL.PCUSUARI.INDICECPFECHCOMISSAO IS 'Indica o valor do índice para este RCA no lançamento de Contas a Pagar ';
COMMENT ON COLUMN AJEL.PCUSUARI.PERMAXVENDA IS '. ';
COMMENT ON COLUMN AJEL.PCUSUARI.INDICERATEIOCOMISSAO IS 'Indice de rateio de comissão. ';
COMMENT ON COLUMN AJEL.PCUSUARI.USARRCAOPERADOR IS 'Usar RCA do operador da venda. ';
COMMENT ON COLUMN AJEL.PCUSUARI.PERCOMMETA IS 'Indica o percentual de comissão por meta. ';
COMMENT ON COLUMN AJEL.PCUSUARI.NUMCLIPOS IS 'Indice a meta de clientes para positivação. ';
COMMENT ON COLUMN AJEL.PCUSUARI.VLMAXTROCA IS 'Indica o valor máximo para troca.';
COMMENT ON COLUMN AJEL.PCUSUARI.COMISSAOFIXA IS 'Indica o valor da comissão fixa para o RCA.';
COMMENT ON COLUMN AJEL.PCUSUARI.CODMONITOR IS 'Indica o código do monitor de venda.';
COMMENT ON COLUMN AJEL.PCUSUARI.CODPRACAPRINCIPAL IS 'Indica o código da praça principal.';
COMMENT ON COLUMN AJEL.PCUSUARI.USACOBRANCACARTAO IS 'Usa cobrança cartão.';
COMMENT ON COLUMN AJEL.PCUSUARI.EXPORTARECF IS 'Exportar RCA Auto Serviço.';
COMMENT ON COLUMN AJEL.PCUSUARI.NUMCCORRENTEALFA IS 'Numero conta corrente alfa numérico.';
COMMENT ON COLUMN AJEL.PCUSUARI.VALIDARACRESCDESCPRECOFIXO IS 'Validar acréscimo desconto preço fixo.';
COMMENT ON COLUMN AJEL.PCUSUARI.CPFAUX IS 'Campo auxiliar para armazenar o cpf sem formatação.';
COMMENT ON COLUMN AJEL.PCUSUARI.CODCIDADE IS 'Código da cidade';
COMMENT ON COLUMN AJEL.PCUSUARI.CODBAIRRO IS 'código do bairro';
COMMENT ON COLUMN AJEL.PCUSUARI.CODCONTACSRF IS 'Código da conta SRF';
COMMENT ON COLUMN AJEL.PCUSUARI.PERCINSS IS 'Percentual de Inss.';
COMMENT ON COLUMN AJEL.PCUSUARI.PERCCSRF IS 'Percentual de CRSF.';
COMMENT ON COLUMN AJEL.PCUSUARI.PERCPISNFSERVICO IS 'Percentual de PIS.';
COMMENT ON COLUMN AJEL.PCUSUARI.PERCCOFINSNFSERVICO IS 'Percentual de COFINS.';
COMMENT ON COLUMN AJEL.PCUSUARI.PERCISS IS 'Percentual de ISS.';
COMMENT ON COLUMN AJEL.PCUSUARI.PERCIRRF IS 'Percentual de IRRF.';
COMMENT ON COLUMN AJEL.PCUSUARI.CODCONTAIRRF IS 'Código da conta IRRF.';
COMMENT ON COLUMN AJEL.PCUSUARI.CODCONTAISS IS 'Código da conta ISS.';
COMMENT ON COLUMN AJEL.PCUSUARI.CODCONTAINSS IS 'Código da conta INSS.';
COMMENT ON COLUMN AJEL.PCUSUARI.CODCONTAPIS IS 'Código da conta PIS.';
COMMENT ON COLUMN AJEL.PCUSUARI.CODCONTACOFINS IS 'Código da conta COFINS.';
COMMENT ON COLUMN AJEL.PCUSUARI.EXPORTARPARAFORCAVENDAS IS 'Exportar para força de vendas';
COMMENT ON COLUMN AJEL.PCUSUARI.DIRETORIOASSINATURA IS 'Diretório da Assinatura digitalizada do RCA';
COMMENT ON COLUMN AJEL.PCUSUARI.MODELOPALM IS 'Armazena o Modelo do Palm em poder do RCA';
COMMENT ON COLUMN AJEL.PCUSUARI.OBSFORCAVENDAS1 IS 'Observações referente ao Palm em poder do RCA';
COMMENT ON COLUMN AJEL.PCUSUARI.OBSFORCAVENDAS2 IS 'Observações referente ao Palm em poder do RCA';
COMMENT ON COLUMN AJEL.PCUSUARI.OBSFORCAVENDAS3 IS 'Observações referente ao Palm em poder do RCA';
COMMENT ON COLUMN AJEL.PCUSUARI.OBSFORCAVENDAS4 IS 'Observações referente ao Palm em poder do RCA';
COMMENT ON COLUMN AJEL.PCUSUARI.CODIGOCENTROCUSTO IS 'Código do centro de custo';
COMMENT ON COLUMN AJEL.PCUSUARI.VISUALIZARPRODDEPTOSEC IS 'Visualizar produtos do departamento/secão';
COMMENT ON COLUMN AJEL.PCUSUARI.CODCONTAB IS 'Conta Contábil';
COMMENT ON COLUMN AJEL.PCUSUARI.SIMPLESNACIONAL IS 'Optante pelo regime de impostos simples nacional';
COMMENT ON COLUMN AJEL.PCUSUARI.COMISSAOSERVICOPRESTADO IS 'Comissão RCA serviço prestado.';
COMMENT ON COLUMN AJEL.PCUSUARI.FATORCOMISLIQ IS 'Fator para acréscimo do valor da comissão por liquidez da rot.1266.';
COMMENT ON COLUMN AJEL.PCUSUARI.NUMDEPENDENTES IS 'Número de dependentes.';
COMMENT ON COLUMN AJEL.PCUSUARI.EXPORTARCOMISSAOFOLHARM IS 'Exporta comissão do RCA para folha.';
COMMENT ON COLUMN AJEL.PCUSUARI.CODROTA IS 'Código da rota do RCA.';
COMMENT ON COLUMN AJEL.PCUSUARI.NUMSELOINICIAL IS 'Nro do selo inicial';
COMMENT ON COLUMN AJEL.PCUSUARI.NUMSELOFINAL IS 'Nro do selo final';
COMMENT ON COLUMN AJEL.PCUSUARI.NUMFORMINICIAL IS 'Nro do formulário da nf inicial';
COMMENT ON COLUMN AJEL.PCUSUARI.NUMFORMFINAL IS 'Nro do formulário da nf final';
COMMENT ON COLUMN AJEL.PCUSUARI.UTILIZASELOSEFAZ IS 'Utiliza controle de formulário sefaz';
COMMENT ON COLUMN AJEL.PCUSUARI.SERIENF IS 'Série da Nota Fiscal';
COMMENT ON COLUMN AJEL.PCUSUARI.USACONTROLEFORMSELOSEFAZ IS 'Utiliza o selo da sefaz';
COMMENT ON COLUMN AJEL.PCUSUARI.PROXNUMFORM IS 'Próximo número do formulário';
COMMENT ON COLUMN AJEL.PCUSUARI.PROXNUMSELO IS 'Próximo número do selo';
COMMENT ON COLUMN AJEL.PCUSUARI.CODCONTASRF IS 'Código da conta SRF.';
COMMENT ON COLUMN AJEL.PCUSUARI.NUMAIDF IS 'Número AIDF';
COMMENT ON COLUMN AJEL.PCUSUARI.CPFTITULARCC IS 'CPF/CNPJ do titular da conta corrente';
COMMENT ON COLUMN AJEL.PCUSUARI.CPFTITULARCP IS 'CPF/CNPJ do titular da conta poupança';
COMMENT ON COLUMN AJEL.PCUSUARI.LATITUDE IS 'Latitude RCA';
COMMENT ON COLUMN AJEL.PCUSUARI.LONGITUDE IS 'Longitude RCA';
COMMENT ON COLUMN AJEL.PCUSUARI.CONTRIBINDIVIDUALINSS IS 'Flag para dizer se o RCA eh contruibuinte individual do INSS';
COMMENT ON COLUMN AJEL.PCUSUARI.NIT IS 'Número de Inscrição do Trabalhador';
COMMENT ON COLUMN AJEL.PCUSUARI.PARTCLUBEITT IS 'Campo que informa se o RCA participa ou não do Clube ITT Colgate (Integração)';
COMMENT ON COLUMN AJEL.PCUSUARI.DTFIMVIGCLUBEITT IS 'Campo que informa a data final da vigência do RCA no Clube ITT Colgate (Integração)';
COMMENT ON COLUMN AJEL.PCUSUARI.CHAPA_RM IS 'Chapa de identificação da RM';
COMMENT ON COLUMN AJEL.PCUSUARI.CALCULARDSR IS 'Calcular Descanso Semanal Remunerado nas rotinas 1248, 1249 e 1266';
COMMENT ON COLUMN AJEL.PCUSUARI.TIPOCONTAPAGAMENTO IS 'Identifica qual conta será utilziada para pgamento "1 - Conta Corrente" e "2 - Conta Poupança"';
COMMENT ON COLUMN AJEL.PCUSUARI.PERMITEPRODSEMDISTRIBUICAO IS 'Definine se será permitida a venda de produtos que não possuam distribuição vinculada para o RCA';
COMMENT ON COLUMN AJEL.PCUSUARI.CODUSURPG IS 'Código P&G';




